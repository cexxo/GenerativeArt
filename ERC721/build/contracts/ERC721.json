{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "3": "contracts/libraries.sol"
  },
  "ast": {
    "absolutePath": "contracts/libraries.sol",
    "exportedSymbols": {
      "Address": [
        1986
      ],
      "Context": [
        1587
      ],
      "Counters": [
        1364
      ],
      "ERC165": [
        2036
      ],
      "ERC721": [
        2998
      ],
      "IERC165": [
        2014
      ],
      "IERC721": [
        2150
      ],
      "IERC721Metadata": [
        2175
      ],
      "IERC721Receiver": [
        2003
      ],
      "Ownable": [
        1690
      ],
      "Strings": [
        1566
      ]
    },
    "id": 2999,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1292,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "209:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1293,
          "nodeType": "StructuredDocumentation",
          "src": "234:311:3",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
        },
        "fullyImplemented": true,
        "id": 1364,
        "linearizedBaseContracts": [
          1364
        ],
        "name": "Counters",
        "nameLocation": "554:8:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Counters.Counter",
            "id": 1296,
            "members": [
              {
                "constant": false,
                "id": 1295,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "916:6:3",
                "nodeType": "VariableDeclaration",
                "scope": 1296,
                "src": "908:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1294,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "908:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "576:7:3",
            "nodeType": "StructDefinition",
            "scope": 1364,
            "src": "569:374:3",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1307,
              "nodeType": "Block",
              "src": "1023:38:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1304,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1299,
                      "src": "1040:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 1305,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1295,
                    "src": "1040:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1303,
                  "id": 1306,
                  "nodeType": "Return",
                  "src": "1033:21:3"
                }
              ]
            },
            "id": 1308,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "958:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1299,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "982:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1308,
                  "src": "966:23:3",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1298,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1297,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1296,
                      "src": "966:7:3"
                    },
                    "referencedDeclaration": 1296,
                    "src": "966:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "965:25:3"
            },
            "returnParameters": {
              "id": 1303,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1302,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1308,
                  "src": "1014:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1301,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:9:3"
            },
            "scope": 1364,
            "src": "949:112:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1321,
              "nodeType": "Block",
              "src": "1120:70:3",
              "statements": [
                {
                  "id": 1320,
                  "nodeType": "UncheckedBlock",
                  "src": "1130:54:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 1318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 1314,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1311,
                            "src": "1154:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 1316,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1295,
                          "src": "1154:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 1317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1172:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1154:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1319,
                      "nodeType": "ExpressionStatement",
                      "src": "1154:19:3"
                    }
                  ]
                }
              ]
            },
            "id": 1322,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1076:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1311,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1102:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1322,
                  "src": "1086:23:3",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1310,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1309,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1296,
                      "src": "1086:7:3"
                    },
                    "referencedDeclaration": 1296,
                    "src": "1086:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1085:25:3"
            },
            "returnParameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:0:3"
            },
            "scope": 1364,
            "src": "1067:123:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1349,
              "nodeType": "Block",
              "src": "1249:176:3",
              "statements": [
                {
                  "assignments": [
                    1329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1329,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1267:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1349,
                      "src": "1259:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1328,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1259:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1332,
                  "initialValue": {
                    "expression": {
                      "id": 1330,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1325,
                      "src": "1275:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1295,
                    "src": "1275:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1259:30:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1334,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1329,
                          "src": "1307:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1315:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1307:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
                        "id": 1337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1318:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
                          "typeString": "literal_string \"Counter: decrement overflow\""
                        },
                        "value": "Counter: decrement overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
                          "typeString": "literal_string \"Counter: decrement overflow\""
                        }
                      ],
                      "id": 1333,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1299:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1299:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1339,
                  "nodeType": "ExpressionStatement",
                  "src": "1299:49:3"
                },
                {
                  "id": 1348,
                  "nodeType": "UncheckedBlock",
                  "src": "1358:61:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 1346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 1340,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1325,
                            "src": "1382:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 1342,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1295,
                          "src": "1382:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1343,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1329,
                            "src": "1399:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1407:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1399:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1382:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1347,
                      "nodeType": "ExpressionStatement",
                      "src": "1382:26:3"
                    }
                  ]
                }
              ]
            },
            "id": 1350,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1205:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1325,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1231:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1350,
                  "src": "1215:23:3",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1324,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1323,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1296,
                      "src": "1215:7:3"
                    },
                    "referencedDeclaration": 1296,
                    "src": "1215:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1214:25:3"
            },
            "returnParameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:0:3"
            },
            "scope": 1364,
            "src": "1196:229:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1362,
              "nodeType": "Block",
              "src": "1480:35:3",
              "statements": [
                {
                  "expression": {
                    "id": 1360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1356,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1353,
                        "src": "1490:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 1358,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1295,
                      "src": "1490:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1507:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1490:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1361,
                  "nodeType": "ExpressionStatement",
                  "src": "1490:18:3"
                }
              ]
            },
            "id": 1363,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reset",
            "nameLocation": "1440:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1353,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1462:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1363,
                  "src": "1446:23:3",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 1352,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1351,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1296,
                      "src": "1446:7:3"
                    },
                    "referencedDeclaration": 1296,
                    "src": "1446:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$1296_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1445:25:3"
            },
            "returnParameters": {
              "id": 1355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1480:0:3"
            },
            "scope": 1364,
            "src": "1431:84:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2999,
        "src": "546:971:3",
        "usedErrors": []
      },
      {
        "id": 1365,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "1626:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Strings",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1366,
          "nodeType": "StructuredDocumentation",
          "src": "1651:34:3",
          "text": " @dev String operations."
        },
        "fullyImplemented": true,
        "id": 1566,
        "linearizedBaseContracts": [
          1566
        ],
        "name": "Strings",
        "nameLocation": "1694:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 1369,
            "mutability": "constant",
            "name": "_HEX_SYMBOLS",
            "nameLocation": "1733:12:3",
            "nodeType": "VariableDeclaration",
            "scope": 1566,
            "src": "1708:58:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes16",
              "typeString": "bytes16"
            },
            "typeName": {
              "id": 1367,
              "name": "bytes16",
              "nodeType": "ElementaryTypeName",
              "src": "1708:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes16",
                "typeString": "bytes16"
              }
            },
            "value": {
              "hexValue": "30313233343536373839616263646566",
              "id": 1368,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1748:18:3",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
                "typeString": "literal_string \"0123456789abcdef\""
              },
              "value": "0123456789abcdef"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1447,
              "nodeType": "Block",
              "src": "1939:632:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1377,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "2141:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2150:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2141:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1383,
                  "nodeType": "IfStatement",
                  "src": "2137:51:3",
                  "trueBody": {
                    "id": 1382,
                    "nodeType": "Block",
                    "src": "2153:35:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2174:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                            "typeString": "literal_string \"0\""
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1376,
                        "id": 1381,
                        "nodeType": "Return",
                        "src": "2167:10:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1385,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "2205:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1447,
                      "src": "2197:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2197:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1387,
                  "initialValue": {
                    "id": 1386,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1372,
                    "src": "2212:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2197:20:3"
                },
                {
                  "assignments": [
                    1389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1389,
                      "mutability": "mutable",
                      "name": "digits",
                      "nameLocation": "2235:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1447,
                      "src": "2227:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1388,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2227:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1390,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2227:14:3"
                },
                {
                  "body": {
                    "id": 1401,
                    "nodeType": "Block",
                    "src": "2269:57:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2283:8:3",
                          "subExpression": {
                            "id": 1394,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1389,
                            "src": "2283:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1396,
                        "nodeType": "ExpressionStatement",
                        "src": "2283:8:3"
                      },
                      {
                        "expression": {
                          "id": 1399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1397,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1385,
                            "src": "2305:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 1398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2313:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2305:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1400,
                        "nodeType": "ExpressionStatement",
                        "src": "2305:10:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1391,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1385,
                      "src": "2258:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2266:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2258:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1402,
                  "nodeType": "WhileStatement",
                  "src": "2251:75:3"
                },
                {
                  "assignments": [
                    1404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1404,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "2348:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1447,
                      "src": "2335:19:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1403,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2335:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1409,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1407,
                        "name": "digits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1389,
                        "src": "2367:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2357:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 1405,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2361:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 1408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2357:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2335:39:3"
                },
                {
                  "body": {
                    "id": 1440,
                    "nodeType": "Block",
                    "src": "2403:131:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1413,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1389,
                            "src": "2417:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2427:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2417:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1416,
                        "nodeType": "ExpressionStatement",
                        "src": "2417:11:3"
                      },
                      {
                        "expression": {
                          "id": 1434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1417,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1404,
                              "src": "2442:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1419,
                            "indexExpression": {
                              "id": 1418,
                              "name": "digits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1389,
                              "src": "2449:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2442:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1431,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3438",
                                      "id": 1424,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2472:2:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_48_by_1",
                                        "typeString": "int_const 48"
                                      },
                                      "value": "48"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1429,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1427,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1372,
                                            "src": "2485:5:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "3130",
                                            "id": 1428,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2493:2:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "src": "2485:10:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1426,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2477:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 1425,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2477:7:3",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 1430,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2477:19:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2472:24:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1423,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2466:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 1422,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2466:5:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2466:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 1421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2459:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 1420,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "2459:6:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2459:39:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "2442:56:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 1435,
                        "nodeType": "ExpressionStatement",
                        "src": "2442:56:3"
                      },
                      {
                        "expression": {
                          "id": 1438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1436,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1372,
                            "src": "2512:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 1437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2521:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2512:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1439,
                        "nodeType": "ExpressionStatement",
                        "src": "2512:11:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1410,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1372,
                      "src": "2391:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2400:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2391:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1441,
                  "nodeType": "WhileStatement",
                  "src": "2384:150:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1444,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1404,
                        "src": "2557:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2550:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 1442,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2550:6:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2550:14:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1376,
                  "id": 1446,
                  "nodeType": "Return",
                  "src": "2543:21:3"
                }
              ]
            },
            "documentation": {
              "id": 1370,
              "nodeType": "StructuredDocumentation",
              "src": "1773:90:3",
              "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
            },
            "id": 1448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toString",
            "nameLocation": "1877:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1372,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1894:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "1886:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1886:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1885:15:3"
            },
            "returnParameters": {
              "id": 1376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1375,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1448,
                  "src": "1924:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1374,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1923:15:3"
            },
            "scope": 1566,
            "src": "1868:703:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1488,
              "nodeType": "Block",
              "src": "2750:255:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1456,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1451,
                      "src": "2764:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2773:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2764:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1462,
                  "nodeType": "IfStatement",
                  "src": "2760:54:3",
                  "trueBody": {
                    "id": 1461,
                    "nodeType": "Block",
                    "src": "2776:38:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30783030",
                          "id": 1459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2797:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
                            "typeString": "literal_string \"0x00\""
                          },
                          "value": "0x00"
                        },
                        "functionReturnParameters": 1455,
                        "id": 1460,
                        "nodeType": "Return",
                        "src": "2790:13:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1464
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1464,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "2831:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1488,
                      "src": "2823:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1463,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2823:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1466,
                  "initialValue": {
                    "id": 1465,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1451,
                    "src": "2838:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2823:20:3"
                },
                {
                  "assignments": [
                    1468
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1468,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2861:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1488,
                      "src": "2853:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1467,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2853:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1470,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2870:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2853:18:3"
                },
                {
                  "body": {
                    "id": 1481,
                    "nodeType": "Block",
                    "src": "2899:57:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2913:8:3",
                          "subExpression": {
                            "id": 1474,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1468,
                            "src": "2913:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1476,
                        "nodeType": "ExpressionStatement",
                        "src": "2913:8:3"
                      },
                      {
                        "expression": {
                          "id": 1479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1477,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1464,
                            "src": "2935:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": ">>=",
                          "rightHandSide": {
                            "hexValue": "38",
                            "id": 1478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2944:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "2935:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1480,
                        "nodeType": "ExpressionStatement",
                        "src": "2935:10:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1471,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1464,
                      "src": "2888:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2896:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2888:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1482,
                  "nodeType": "WhileStatement",
                  "src": "2881:75:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1484,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1451,
                        "src": "2984:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1485,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1468,
                        "src": "2991:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1483,
                      "name": "toHexString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1489,
                        1565
                      ],
                      "referencedDeclaration": 1565,
                      "src": "2972:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,uint256) pure returns (string memory)"
                      }
                    },
                    "id": 1486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2972:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1455,
                  "id": 1487,
                  "nodeType": "Return",
                  "src": "2965:33:3"
                }
              ]
            },
            "documentation": {
              "id": 1449,
              "nodeType": "StructuredDocumentation",
              "src": "2577:94:3",
              "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
            },
            "id": 1489,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toHexString",
            "nameLocation": "2685:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1452,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1451,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2705:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1489,
                  "src": "2697:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2697:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2696:15:3"
            },
            "returnParameters": {
              "id": 1455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1454,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1489,
                  "src": "2735:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1453,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2735:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2734:15:3"
            },
            "scope": 1566,
            "src": "2676:329:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1564,
              "nodeType": "Block",
              "src": "3218:351:3",
              "statements": [
                {
                  "assignments": [
                    1500
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1500,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "3241:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1564,
                      "src": "3228:19:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1499,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3228:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1509,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3260:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1504,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1494,
                            "src": "3264:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3260:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 1506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3273:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "3260:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3250:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 1501,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3254:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 1508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3250:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3228:47:3"
                },
                {
                  "expression": {
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1510,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1500,
                        "src": "3285:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1512,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 1511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3292:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3285:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3297:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                        "typeString": "literal_string \"0\""
                      },
                      "value": "0"
                    },
                    "src": "3285:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1515,
                  "nodeType": "ExpressionStatement",
                  "src": "3285:15:3"
                },
                {
                  "expression": {
                    "id": 1520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1516,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1500,
                        "src": "3310:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 1518,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 1517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3317:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3310:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "78",
                      "id": 1519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3322:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                        "typeString": "literal_string \"x\""
                      },
                      "value": "x"
                    },
                    "src": "3310:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 1521,
                  "nodeType": "ExpressionStatement",
                  "src": "3310:15:3"
                },
                {
                  "body": {
                    "id": 1550,
                    "nodeType": "Block",
                    "src": "3380:87:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1536,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1500,
                              "src": "3394:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1538,
                            "indexExpression": {
                              "id": 1537,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1523,
                              "src": "3401:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3394:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1539,
                              "name": "_HEX_SYMBOLS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1369,
                              "src": "3406:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            "id": 1543,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1540,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1492,
                                "src": "3419:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "hexValue": "307866",
                                "id": 1541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3427:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_15_by_1",
                                  "typeString": "int_const 15"
                                },
                                "value": "0xf"
                              },
                              "src": "3419:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3406:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "3394:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 1545,
                        "nodeType": "ExpressionStatement",
                        "src": "3394:37:3"
                      },
                      {
                        "expression": {
                          "id": 1548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1546,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1492,
                            "src": "3445:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": ">>=",
                          "rightHandSide": {
                            "hexValue": "34",
                            "id": 1547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3455:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "3445:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1549,
                        "nodeType": "ExpressionStatement",
                        "src": "3445:11:3"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1530,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1523,
                      "src": "3368:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3372:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3368:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1551,
                  "initializationExpression": {
                    "assignments": [
                      1523
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1523,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3348:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1551,
                        "src": "3340:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1522,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3340:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1529,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 1524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3352:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 1525,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1494,
                          "src": "3356:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3352:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3365:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3352:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3340:26:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": true,
                      "src": "3375:3:3",
                      "subExpression": {
                        "id": 1533,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1523,
                        "src": "3377:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1535,
                    "nodeType": "ExpressionStatement",
                    "src": "3375:3:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "3335:132:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1553,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1492,
                          "src": "3484:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3493:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3484:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "id": 1556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3496:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                          "typeString": "literal_string \"Strings: hex length insufficient\""
                        },
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                          "typeString": "literal_string \"Strings: hex length insufficient\""
                        }
                      ],
                      "id": 1552,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3476:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3476:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1558,
                  "nodeType": "ExpressionStatement",
                  "src": "3476:55:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1561,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1500,
                        "src": "3555:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3548:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 1559,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3548:6:3",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3548:14:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1498,
                  "id": 1563,
                  "nodeType": "Return",
                  "src": "3541:21:3"
                }
              ]
            },
            "documentation": {
              "id": 1490,
              "nodeType": "StructuredDocumentation",
              "src": "3011:112:3",
              "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
            },
            "id": 1565,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toHexString",
            "nameLocation": "3137:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1492,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3157:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1565,
                  "src": "3149:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1491,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3149:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1494,
                  "mutability": "mutable",
                  "name": "length",
                  "nameLocation": "3172:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1565,
                  "src": "3164:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3164:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3148:31:3"
            },
            "returnParameters": {
              "id": 1498,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1497,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1565,
                  "src": "3203:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1496,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3203:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3202:15:3"
            },
            "scope": 1566,
            "src": "3128:441:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2999,
        "src": "1686:1885:3",
        "usedErrors": []
      },
      {
        "id": 1567,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "3680:23:3"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "Context",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1568,
          "nodeType": "StructuredDocumentation",
          "src": "3705:496:3",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "id": 1587,
        "linearizedBaseContracts": [
          1587
        ],
        "name": "Context",
        "nameLocation": "4220:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1576,
              "nodeType": "Block",
              "src": "4296:34:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1573,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4313:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4313:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1572,
                  "id": 1575,
                  "nodeType": "Return",
                  "src": "4306:17:3"
                }
              ]
            },
            "id": 1577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "4243:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1569,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4253:2:3"
            },
            "returnParameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1577,
                  "src": "4287:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4287:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4286:9:3"
            },
            "scope": 1587,
            "src": "4234:96:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1585,
              "nodeType": "Block",
              "src": "4403:32:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1582,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4420:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "4420:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 1581,
                  "id": 1584,
                  "nodeType": "Return",
                  "src": "4413:15:3"
                }
              ]
            },
            "id": 1586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "4345:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4353:2:3"
            },
            "returnParameters": {
              "id": 1581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1580,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1586,
                  "src": "4387:14:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1579,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4387:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4386:16:3"
            },
            "scope": 1587,
            "src": "4336:99:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2999,
        "src": "4202:235:3",
        "usedErrors": []
      },
      {
        "id": 1588,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "4548:23:3"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1590,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1587,
              "src": "5098:7:3"
            },
            "id": 1591,
            "nodeType": "InheritanceSpecifier",
            "src": "5098:7:3"
          }
        ],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1589,
          "nodeType": "StructuredDocumentation",
          "src": "4574:494:3",
          "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
        },
        "fullyImplemented": true,
        "id": 1690,
        "linearizedBaseContracts": [
          1690,
          1587
        ],
        "name": "Ownable",
        "nameLocation": "5087:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1593,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "5128:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 1690,
            "src": "5112:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1592,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5112:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "id": 1599,
            "name": "OwnershipTransferred",
            "nameLocation": "5147:20:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1595,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "5184:13:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1599,
                  "src": "5168:29:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5168:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1597,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "5215:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1599,
                  "src": "5199:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5199:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5167:57:3"
            },
            "src": "5141:84:3"
          },
          {
            "body": {
              "id": 1608,
              "nodeType": "Block",
              "src": "5341:49:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1604,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1577,
                          "src": "5370:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5370:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1603,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1689,
                      "src": "5351:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5351:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1607,
                  "nodeType": "ExpressionStatement",
                  "src": "5351:32:3"
                }
              ]
            },
            "documentation": {
              "id": 1600,
              "nodeType": "StructuredDocumentation",
              "src": "5231:91:3",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 1609,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5338:2:3"
            },
            "returnParameters": {
              "id": 1602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5341:0:3"
            },
            "scope": 1690,
            "src": "5327:63:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1617,
              "nodeType": "Block",
              "src": "5521:30:3",
              "statements": [
                {
                  "expression": {
                    "id": 1615,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1593,
                    "src": "5538:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1614,
                  "id": 1616,
                  "nodeType": "Return",
                  "src": "5531:13:3"
                }
              ]
            },
            "documentation": {
              "id": 1610,
              "nodeType": "StructuredDocumentation",
              "src": "5396:65:3",
              "text": " @dev Returns the address of the current owner."
            },
            "functionSelector": "8da5cb5b",
            "id": 1618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "5475:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5480:2:3"
            },
            "returnParameters": {
              "id": 1614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1613,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1618,
                  "src": "5512:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1612,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5512:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5511:9:3"
            },
            "scope": 1690,
            "src": "5466:85:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1631,
              "nodeType": "Block",
              "src": "5660:96:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1622,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1618,
                            "src": "5678:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5678:7:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1624,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1577,
                            "src": "5689:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5689:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5678:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 1627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5703:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "id": 1621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5670:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5670:68:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1629,
                  "nodeType": "ExpressionStatement",
                  "src": "5670:68:3"
                },
                {
                  "id": 1630,
                  "nodeType": "PlaceholderStatement",
                  "src": "5748:1:3"
                }
              ]
            },
            "documentation": {
              "id": 1619,
              "nodeType": "StructuredDocumentation",
              "src": "5557:77:3",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 1632,
            "name": "onlyOwner",
            "nameLocation": "5648:9:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5657:2:3"
            },
            "src": "5639:117:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1645,
              "nodeType": "Block",
              "src": "6152:47:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6189:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6181:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1639,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6181:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6181:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1638,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1689,
                      "src": "6162:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6162:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1644,
                  "nodeType": "ExpressionStatement",
                  "src": "6162:30:3"
                }
              ]
            },
            "documentation": {
              "id": 1633,
              "nodeType": "StructuredDocumentation",
              "src": "5762:331:3",
              "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
            },
            "functionSelector": "715018a6",
            "id": 1646,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1636,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1635,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1632,
                  "src": "6142:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "6142:9:3"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "6107:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6124:2:3"
            },
            "returnParameters": {
              "id": 1637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6152:0:3"
            },
            "scope": 1690,
            "src": "6098:101:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1668,
              "nodeType": "Block",
              "src": "6418:128:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1655,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1649,
                          "src": "6436:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6456:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6448:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1656,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6448:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6448:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6436:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 1661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6460:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 1654,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6428:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6428:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1663,
                  "nodeType": "ExpressionStatement",
                  "src": "6428:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1665,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1649,
                        "src": "6530:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1664,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1689,
                      "src": "6511:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6511:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1667,
                  "nodeType": "ExpressionStatement",
                  "src": "6511:28:3"
                }
              ]
            },
            "documentation": {
              "id": 1647,
              "nodeType": "StructuredDocumentation",
              "src": "6205:138:3",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
            },
            "functionSelector": "f2fde38b",
            "id": 1669,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1652,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1651,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1632,
                  "src": "6408:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "6408:9:3"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "6357:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1649,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "6383:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1669,
                  "src": "6375:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6375:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6374:18:3"
            },
            "returnParameters": {
              "id": 1653,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6418:0:3"
            },
            "scope": 1690,
            "src": "6348:198:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1688,
              "nodeType": "Block",
              "src": "6763:124:3",
              "statements": [
                {
                  "assignments": [
                    1676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1676,
                      "mutability": "mutable",
                      "name": "oldOwner",
                      "nameLocation": "6781:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1688,
                      "src": "6773:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1675,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6773:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1678,
                  "initialValue": {
                    "id": 1677,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1593,
                    "src": "6792:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6773:25:3"
                },
                {
                  "expression": {
                    "id": 1681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1679,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1593,
                      "src": "6808:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1680,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1672,
                      "src": "6817:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6808:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1682,
                  "nodeType": "ExpressionStatement",
                  "src": "6808:17:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1684,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1676,
                        "src": "6861:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1685,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1672,
                        "src": "6871:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1683,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1599,
                      "src": "6840:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 1686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6840:40:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1687,
                  "nodeType": "EmitStatement",
                  "src": "6835:45:3"
                }
              ]
            },
            "documentation": {
              "id": 1670,
              "nodeType": "StructuredDocumentation",
              "src": "6552:143:3",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
            },
            "id": 1689,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferOwnership",
            "nameLocation": "6709:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1672,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "6736:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1689,
                  "src": "6728:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6728:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6727:18:3"
            },
            "returnParameters": {
              "id": 1674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6763:0:3"
            },
            "scope": 1690,
            "src": "6700:187:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2999,
        "src": "5069:1820:3",
        "usedErrors": []
      },
      {
        "id": 1691,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "6998:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Address",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1692,
          "nodeType": "StructuredDocumentation",
          "src": "7023:67:3",
          "text": " @dev Collection of functions related to the address type"
        },
        "fullyImplemented": true,
        "id": 1986,
        "linearizedBaseContracts": [
          1986
        ],
        "name": "Address",
        "nameLocation": "7099:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1708,
              "nodeType": "Block",
              "src": "7749:311:3",
              "statements": [
                {
                  "assignments": [
                    1701
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1701,
                      "mutability": "mutable",
                      "name": "size",
                      "nameLocation": "7954:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1708,
                      "src": "7946:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1700,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7946:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1702,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7946:12:3"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "7977:52:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7991:28:3",
                        "value": {
                          "arguments": [
                            {
                              "name": "account",
                              "nodeType": "YulIdentifier",
                              "src": "8011:7:3"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "7999:11:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7999:20:3"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "7991:4:3"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1695,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8011:7:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1701,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "7991:4:3",
                      "valueSize": 1
                    }
                  ],
                  "id": 1703,
                  "nodeType": "InlineAssembly",
                  "src": "7968:61:3"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1704,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1701,
                      "src": "8045:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8052:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8045:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1699,
                  "id": 1707,
                  "nodeType": "Return",
                  "src": "8038:15:3"
                }
              ]
            },
            "documentation": {
              "id": 1693,
              "nodeType": "StructuredDocumentation",
              "src": "7113:565:3",
              "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
            },
            "id": 1709,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "7692:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1695,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7711:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "7703:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7703:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7702:17:3"
            },
            "returnParameters": {
              "id": 1699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1698,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1709,
                  "src": "7743:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1697,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7743:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7742:6:3"
            },
            "scope": 1986,
            "src": "7683:377:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1742,
              "nodeType": "Block",
              "src": "9048:241:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1720,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9074:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Address_$1986",
                                  "typeString": "library Address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Address_$1986",
                                  "typeString": "library Address"
                                }
                              ],
                              "id": 1719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9066:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1718,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9066:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9066:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "9066:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1723,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1714,
                          "src": "9091:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9066:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                        "id": 1725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9099:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        },
                        "value": "Address: insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        }
                      ],
                      "id": 1717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9058:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9058:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1727,
                  "nodeType": "ExpressionStatement",
                  "src": "9058:73:3"
                },
                {
                  "assignments": [
                    1729,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1729,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "9148:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1742,
                      "src": "9143:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1728,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9143:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 1736,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 1734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9191:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 1730,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1712,
                          "src": "9161:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "9161:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1732,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1714,
                          "src": "9183:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "9161:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9161:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9142:52:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1738,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1729,
                        "src": "9212:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                        "id": 1739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9221:60:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        },
                        "value": "Address: unable to send value, recipient may have reverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        }
                      ],
                      "id": 1737,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9204:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9204:78:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1741,
                  "nodeType": "ExpressionStatement",
                  "src": "9204:78:3"
                }
              ]
            },
            "documentation": {
              "id": 1710,
              "nodeType": "StructuredDocumentation",
              "src": "8066:906:3",
              "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
            },
            "id": 1743,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendValue",
            "nameLocation": "8986:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1712,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "9012:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1743,
                  "src": "8996:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8996:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9031:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1743,
                  "src": "9023:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9023:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8995:43:3"
            },
            "returnParameters": {
              "id": 1716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9048:0:3"
            },
            "scope": 1986,
            "src": "8977:312:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1759,
              "nodeType": "Block",
              "src": "10120:84:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1754,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1746,
                        "src": "10150:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1755,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1748,
                        "src": "10158:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10164:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                          "typeString": "literal_string \"Address: low-level call failed\""
                        },
                        "value": "Address: low-level call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                          "typeString": "literal_string \"Address: low-level call failed\""
                        }
                      ],
                      "id": 1753,
                      "name": "functionCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1760,
                        1780
                      ],
                      "referencedDeclaration": 1780,
                      "src": "10137:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 1757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10137:60:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1752,
                  "id": 1758,
                  "nodeType": "Return",
                  "src": "10130:67:3"
                }
              ]
            },
            "documentation": {
              "id": 1744,
              "nodeType": "StructuredDocumentation",
              "src": "9295:731:3",
              "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
            },
            "id": 1760,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCall",
            "nameLocation": "10040:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1746,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "10061:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "10053:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10053:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1748,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10082:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "10069:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1747,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10069:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10052:35:3"
            },
            "returnParameters": {
              "id": 1752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1751,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1760,
                  "src": "10106:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1750,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10106:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10105:14:3"
            },
            "scope": 1986,
            "src": "10031:173:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1779,
              "nodeType": "Block",
              "src": "10573:76:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1773,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "10612:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1774,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "10620:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10626:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1776,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1767,
                        "src": "10629:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1772,
                      "name": "functionCallWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1800,
                        1850
                      ],
                      "referencedDeclaration": 1850,
                      "src": "10590:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 1777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10590:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1771,
                  "id": 1778,
                  "nodeType": "Return",
                  "src": "10583:59:3"
                }
              ]
            },
            "documentation": {
              "id": 1761,
              "nodeType": "StructuredDocumentation",
              "src": "10210:211:3",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
            },
            "id": 1780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCall",
            "nameLocation": "10435:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1763,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "10465:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1780,
                  "src": "10457:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10457:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1765,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10494:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1780,
                  "src": "10481:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1764,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10481:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1767,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "10522:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1780,
                  "src": "10508:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1766,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10508:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10447:93:3"
            },
            "returnParameters": {
              "id": 1771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1780,
                  "src": "10559:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1769,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10559:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10558:14:3"
            },
            "scope": 1986,
            "src": "10426:223:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1799,
              "nodeType": "Block",
              "src": "11154:111:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1793,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "11193:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1794,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1785,
                        "src": "11201:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 1795,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1787,
                        "src": "11207:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                        "id": 1796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11214:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                          "typeString": "literal_string \"Address: low-level call with value failed\""
                        },
                        "value": "Address: low-level call with value failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                          "typeString": "literal_string \"Address: low-level call with value failed\""
                        }
                      ],
                      "id": 1792,
                      "name": "functionCallWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1800,
                        1850
                      ],
                      "referencedDeclaration": 1850,
                      "src": "11171:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 1797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11171:87:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1791,
                  "id": 1798,
                  "nodeType": "Return",
                  "src": "11164:94:3"
                }
              ]
            },
            "documentation": {
              "id": 1781,
              "nodeType": "StructuredDocumentation",
              "src": "10655:351:3",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
            },
            "id": 1800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCallWithValue",
            "nameLocation": "11020:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1783,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "11059:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "11051:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1782,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11051:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1785,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11088:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "11075:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1784,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11075:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1787,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "11110:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "11102:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1786,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11102:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11041:80:3"
            },
            "returnParameters": {
              "id": 1791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1790,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1800,
                  "src": "11140:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1789,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11140:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11139:14:3"
            },
            "scope": 1986,
            "src": "11011:254:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1849,
              "nodeType": "Block",
              "src": "11692:320:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1817,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11718:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Address_$1986",
                                  "typeString": "library Address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Address_$1986",
                                  "typeString": "library Address"
                                }
                              ],
                              "id": 1816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11710:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1815,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11710:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11710:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "11710:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1820,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1807,
                          "src": "11735:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11710:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                        "id": 1822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11742:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                          "typeString": "literal_string \"Address: insufficient balance for call\""
                        },
                        "value": "Address: insufficient balance for call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                          "typeString": "literal_string \"Address: insufficient balance for call\""
                        }
                      ],
                      "id": 1814,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11702:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11702:81:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1824,
                  "nodeType": "ExpressionStatement",
                  "src": "11702:81:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1827,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1803,
                            "src": "11812:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1826,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1709,
                          "src": "11801:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11801:18:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 1829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11821:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                          "typeString": "literal_string \"Address: call to non-contract\""
                        },
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                          "typeString": "literal_string \"Address: call to non-contract\""
                        }
                      ],
                      "id": 1825,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11793:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11793:60:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1831,
                  "nodeType": "ExpressionStatement",
                  "src": "11793:60:3"
                },
                {
                  "assignments": [
                    1833,
                    1835
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1833,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "11870:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1849,
                      "src": "11865:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1832,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11865:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1835,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "11892:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1849,
                      "src": "11879:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1834,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "11879:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1842,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1840,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "11932:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 1836,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1803,
                          "src": "11906:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "11906:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 1839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 1838,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1807,
                          "src": "11925:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "11906:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 1841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11906:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11864:73:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1844,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1833,
                        "src": "11971:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1845,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1835,
                        "src": "11980:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 1846,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1809,
                        "src": "11992:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1843,
                      "name": "verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "11954:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 1847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11954:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1813,
                  "id": 1848,
                  "nodeType": "Return",
                  "src": "11947:58:3"
                }
              ]
            },
            "documentation": {
              "id": 1801,
              "nodeType": "StructuredDocumentation",
              "src": "11271:237:3",
              "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
            },
            "id": 1850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCallWithValue",
            "nameLocation": "11522:21:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1803,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "11561:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1850,
                  "src": "11553:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11553:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1805,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11590:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1850,
                  "src": "11577:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1804,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11577:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1807,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "11612:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1850,
                  "src": "11604:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11604:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1809,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "11641:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1850,
                  "src": "11627:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1808,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11627:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11543:116:3"
            },
            "returnParameters": {
              "id": 1813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1812,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1850,
                  "src": "11678:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1811,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11678:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11677:14:3"
            },
            "scope": 1986,
            "src": "11513:499:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1866,
              "nodeType": "Block",
              "src": "12289:97:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1861,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1853,
                        "src": "12325:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1862,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1855,
                        "src": "12333:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                        "id": 1863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12339:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                          "typeString": "literal_string \"Address: low-level static call failed\""
                        },
                        "value": "Address: low-level static call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                          "typeString": "literal_string \"Address: low-level static call failed\""
                        }
                      ],
                      "id": 1860,
                      "name": "functionStaticCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1867,
                        1902
                      ],
                      "referencedDeclaration": 1902,
                      "src": "12306:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                      }
                    },
                    "id": 1864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12306:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1859,
                  "id": 1865,
                  "nodeType": "Return",
                  "src": "12299:80:3"
                }
              ]
            },
            "documentation": {
              "id": 1851,
              "nodeType": "StructuredDocumentation",
              "src": "12018:166:3",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
            },
            "id": 1867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionStaticCall",
            "nameLocation": "12198:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1853,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "12225:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1867,
                  "src": "12217:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12217:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1855,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12246:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1867,
                  "src": "12233:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1854,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12233:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12216:35:3"
            },
            "returnParameters": {
              "id": 1859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1858,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1867,
                  "src": "12275:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1857,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12275:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12274:14:3"
            },
            "scope": 1986,
            "src": "12189:197:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1901,
              "nodeType": "Block",
              "src": "12728:228:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1881,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1870,
                            "src": "12757:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1880,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1709,
                          "src": "12746:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12746:18:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 1883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12766:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                          "typeString": "literal_string \"Address: static call to non-contract\""
                        },
                        "value": "Address: static call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                          "typeString": "literal_string \"Address: static call to non-contract\""
                        }
                      ],
                      "id": 1879,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12738:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12738:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1885,
                  "nodeType": "ExpressionStatement",
                  "src": "12738:67:3"
                },
                {
                  "assignments": [
                    1887,
                    1889
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1887,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "12822:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1901,
                      "src": "12817:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1886,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12817:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1889,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "12844:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1901,
                      "src": "12831:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1888,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12831:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1894,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1892,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1872,
                        "src": "12876:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1890,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1870,
                        "src": "12858:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1891,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "12858:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 1893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12858:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12816:65:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1896,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1887,
                        "src": "12915:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1897,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1889,
                        "src": "12924:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 1898,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1874,
                        "src": "12936:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1895,
                      "name": "verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "12898:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 1899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12898:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1878,
                  "id": 1900,
                  "nodeType": "Return",
                  "src": "12891:58:3"
                }
              ]
            },
            "documentation": {
              "id": 1868,
              "nodeType": "StructuredDocumentation",
              "src": "12392:173:3",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
            },
            "id": 1902,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionStaticCall",
            "nameLocation": "12579:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "12615:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1902,
                  "src": "12607:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12607:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1872,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12644:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1902,
                  "src": "12631:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1871,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12631:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1874,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "12672:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1902,
                  "src": "12658:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1873,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12658:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12597:93:3"
            },
            "returnParameters": {
              "id": 1878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1877,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1902,
                  "src": "12714:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1876,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12714:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12713:14:3"
            },
            "scope": 1986,
            "src": "12570:386:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1918,
              "nodeType": "Block",
              "src": "13232:101:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1913,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1905,
                        "src": "13270:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1914,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1907,
                        "src": "13278:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                        "id": 1915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13284:41:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                          "typeString": "literal_string \"Address: low-level delegate call failed\""
                        },
                        "value": "Address: low-level delegate call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                          "typeString": "literal_string \"Address: low-level delegate call failed\""
                        }
                      ],
                      "id": 1912,
                      "name": "functionDelegateCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1919,
                        1954
                      ],
                      "referencedDeclaration": 1954,
                      "src": "13249:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 1916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13249:77:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1911,
                  "id": 1917,
                  "nodeType": "Return",
                  "src": "13242:84:3"
                }
              ]
            },
            "documentation": {
              "id": 1903,
              "nodeType": "StructuredDocumentation",
              "src": "12962:168:3",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
            },
            "id": 1919,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionDelegateCall",
            "nameLocation": "13144:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1905,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "13173:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "13165:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1904,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13165:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1907,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13194:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "13181:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1906,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13181:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13164:35:3"
            },
            "returnParameters": {
              "id": 1911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1919,
                  "src": "13218:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13218:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13217:14:3"
            },
            "scope": 1986,
            "src": "13135:198:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1953,
              "nodeType": "Block",
              "src": "13674:232:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1933,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1922,
                            "src": "13703:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1932,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1709,
                          "src": "13692:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13692:18:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 1935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13712:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                          "typeString": "literal_string \"Address: delegate call to non-contract\""
                        },
                        "value": "Address: delegate call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                          "typeString": "literal_string \"Address: delegate call to non-contract\""
                        }
                      ],
                      "id": 1931,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13684:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13684:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1937,
                  "nodeType": "ExpressionStatement",
                  "src": "13684:69:3"
                },
                {
                  "assignments": [
                    1939,
                    1941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1939,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "13770:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1953,
                      "src": "13765:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1938,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13765:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1941,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "13792:10:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1953,
                      "src": "13779:23:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1940,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13779:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1946,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1944,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1924,
                        "src": "13826:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1942,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1922,
                        "src": "13806:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "13806:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13806:25:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13764:67:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1948,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1939,
                        "src": "13865:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1949,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1941,
                        "src": "13874:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 1950,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1926,
                        "src": "13886:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1947,
                      "name": "verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1985,
                      "src": "13848:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 1951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13848:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1930,
                  "id": 1952,
                  "nodeType": "Return",
                  "src": "13841:58:3"
                }
              ]
            },
            "documentation": {
              "id": 1920,
              "nodeType": "StructuredDocumentation",
              "src": "13339:175:3",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
            },
            "id": 1954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionDelegateCall",
            "nameLocation": "13528:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1922,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "13566:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "13558:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13558:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1924,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13595:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "13582:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1923,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13582:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1926,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "13623:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "13609:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1925,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13609:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13548:93:3"
            },
            "returnParameters": {
              "id": 1930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1929,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "13660:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1928,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13660:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13659:14:3"
            },
            "scope": 1986,
            "src": "13519:387:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1984,
              "nodeType": "Block",
              "src": "14286:532:3",
              "statements": [
                {
                  "condition": {
                    "id": 1966,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1957,
                    "src": "14300:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1982,
                    "nodeType": "Block",
                    "src": "14357:455:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1970,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1959,
                              "src": "14441:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14441:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14461:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14441:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1980,
                          "nodeType": "Block",
                          "src": "14749:53:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1977,
                                    "name": "errorMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1961,
                                    "src": "14774:12:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1976,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "14767:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14767:20:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1979,
                              "nodeType": "ExpressionStatement",
                              "src": "14767:20:3"
                            }
                          ]
                        },
                        "id": 1981,
                        "nodeType": "IfStatement",
                        "src": "14437:365:3",
                        "trueBody": {
                          "id": 1975,
                          "nodeType": "Block",
                          "src": "14464:279:3",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "14584:145:3",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "14606:40:3",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "returndata",
                                          "nodeType": "YulIdentifier",
                                          "src": "14635:10:3"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "14629:5:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14629:17:3"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulTypedName",
                                        "src": "14610:15:3",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "14678:2:3",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "14682:10:3"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "14674:3:3"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "14674:19:3"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "14695:15:3"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "14667:6:3"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14667:44:3"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "14667:44:3"
                                  }
                                ]
                              },
                              "evmVersion": "istanbul",
                              "externalReferences": [
                                {
                                  "declaration": 1959,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "14635:10:3",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1959,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "14682:10:3",
                                  "valueSize": 1
                                }
                              ],
                              "id": 1974,
                              "nodeType": "InlineAssembly",
                              "src": "14575:154:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1983,
                  "nodeType": "IfStatement",
                  "src": "14296:516:3",
                  "trueBody": {
                    "id": 1969,
                    "nodeType": "Block",
                    "src": "14309:42:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1967,
                          "name": "returndata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1959,
                          "src": "14330:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1965,
                        "id": 1968,
                        "nodeType": "Return",
                        "src": "14323:17:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1955,
              "nodeType": "StructuredDocumentation",
              "src": "13912:209:3",
              "text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
            },
            "id": 1985,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyCallResult",
            "nameLocation": "14135:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1957,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "14166:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "14161:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1956,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14161:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1959,
                  "mutability": "mutable",
                  "name": "returndata",
                  "nameLocation": "14196:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "14183:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1958,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14183:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1961,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "14230:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "14216:26:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14216:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14151:97:3"
            },
            "returnParameters": {
              "id": 1965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1964,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1985,
                  "src": "14272:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1963,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14272:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14271:14:3"
            },
            "scope": 1986,
            "src": "14126:692:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2999,
        "src": "7091:7729:3",
        "usedErrors": []
      },
      {
        "id": 1987,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "14959:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC721Receiver",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1988,
          "nodeType": "StructuredDocumentation",
          "src": "14984:152:3",
          "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
        },
        "fullyImplemented": false,
        "id": 2003,
        "linearizedBaseContracts": [
          2003
        ],
        "name": "IERC721Receiver",
        "nameLocation": "15147:15:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1989,
              "nodeType": "StructuredDocumentation",
              "src": "15169:485:3",
              "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
            },
            "functionSelector": "150b7a02",
            "id": 2002,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "15668:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1991,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "15702:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "15694:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15694:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1993,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15728:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "15720:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15720:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1995,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15750:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "15742:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15742:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1997,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "15782:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "15767:19:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1996,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15767:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15684:108:3"
            },
            "returnParameters": {
              "id": 2001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2000,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2002,
                  "src": "15811:6:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1999,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "15811:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15810:8:3"
            },
            "scope": 2003,
            "src": "15659:160:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2999,
        "src": "15137:684:3",
        "usedErrors": []
      },
      {
        "id": 2004,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "15958:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC165",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2005,
          "nodeType": "StructuredDocumentation",
          "src": "15983:279:3",
          "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
        },
        "fullyImplemented": false,
        "id": 2014,
        "linearizedBaseContracts": [
          2014
        ],
        "name": "IERC165",
        "nameLocation": "16273:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2006,
              "nodeType": "StructuredDocumentation",
              "src": "16287:340:3",
              "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
            },
            "functionSelector": "01ffc9a7",
            "id": 2013,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "16641:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2008,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "16666:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "16659:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "16659:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16658:20:3"
            },
            "returnParameters": {
              "id": 2012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2011,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2013,
                  "src": "16702:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2010,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16702:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16701:6:3"
            },
            "scope": 2014,
            "src": "16632:76:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2999,
        "src": "16263:447:3",
        "usedErrors": []
      },
      {
        "id": 2015,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "16845:23:3"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2017,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2014,
              "src": "17476:7:3"
            },
            "id": 2018,
            "nodeType": "InheritanceSpecifier",
            "src": "17476:7:3"
          }
        ],
        "canonicalName": "ERC165",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2016,
          "nodeType": "StructuredDocumentation",
          "src": "16871:576:3",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "id": 2036,
        "linearizedBaseContracts": [
          2036,
          2014
        ],
        "name": "ERC165",
        "nameLocation": "17466:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2013
            ],
            "body": {
              "id": 2034,
              "nodeType": "Block",
              "src": "17642:64:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 2032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2027,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2021,
                      "src": "17659:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 2029,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2014,
                            "src": "17679:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$2014_$",
                              "typeString": "type(contract IERC165)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$2014_$",
                              "typeString": "type(contract IERC165)"
                            }
                          ],
                          "id": 2028,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "17674:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 2030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17674:13:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2014",
                          "typeString": "type(contract IERC165)"
                        }
                      },
                      "id": 2031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "17674:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "17659:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2026,
                  "id": 2033,
                  "nodeType": "Return",
                  "src": "17652:47:3"
                }
              ]
            },
            "documentation": {
              "id": 2019,
              "nodeType": "StructuredDocumentation",
              "src": "17490:56:3",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 2035,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "17560:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2023,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17618:8:3"
            },
            "parameters": {
              "id": 2022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2021,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "17585:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "17578:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2020,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "17578:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17577:20:3"
            },
            "returnParameters": {
              "id": 2026,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2025,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2035,
                  "src": "17636:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2024,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17636:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17635:6:3"
            },
            "scope": 2036,
            "src": "17551:155:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 2999,
        "src": "17448:260:3",
        "usedErrors": []
      },
      {
        "id": 2037,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "17831:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2039,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2014,
              "src": "17946:7:3"
            },
            "id": 2040,
            "nodeType": "InheritanceSpecifier",
            "src": "17946:7:3"
          }
        ],
        "canonicalName": "IERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2038,
          "nodeType": "StructuredDocumentation",
          "src": "17857:67:3",
          "text": " @dev Required interface of an ERC721 compliant contract."
        },
        "fullyImplemented": false,
        "id": 2150,
        "linearizedBaseContracts": [
          2150,
          2014
        ],
        "name": "IERC721",
        "nameLocation": "17935:7:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 2041,
              "nodeType": "StructuredDocumentation",
              "src": "17960:88:3",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 2049,
            "name": "Transfer",
            "nameLocation": "18059:8:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2043,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "18084:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "18068:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18068:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2045,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18106:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "18090:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18090:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2047,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "18126:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2049,
                  "src": "18110:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2046,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18110:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18067:67:3"
            },
            "src": "18053:82:3"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2050,
              "nodeType": "StructuredDocumentation",
              "src": "18141:94:3",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 2058,
            "name": "Approval",
            "nameLocation": "18246:8:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2052,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "18271:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "18255:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18255:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2054,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "18294:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "18278:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18278:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2056,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "18320:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2058,
                  "src": "18304:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2055,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18304:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18254:74:3"
            },
            "src": "18240:89:3"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 2059,
              "nodeType": "StructuredDocumentation",
              "src": "18335:117:3",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
            "id": 2067,
            "name": "ApprovalForAll",
            "nameLocation": "18463:14:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2061,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "18494:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2067,
                  "src": "18478:21:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2060,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18478:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2063,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "18517:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2067,
                  "src": "18501:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18501:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2065,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "18532:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2067,
                  "src": "18527:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2064,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18527:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18477:64:3"
            },
            "src": "18457:85:3"
          },
          {
            "documentation": {
              "id": 2068,
              "nodeType": "StructuredDocumentation",
              "src": "18548:76:3",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 2075,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "18638:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2070,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "18656:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2075,
                  "src": "18648:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18648:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18647:15:3"
            },
            "returnParameters": {
              "id": 2074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2073,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "18694:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2075,
                  "src": "18686:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2072,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18686:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18685:17:3"
            },
            "scope": 2150,
            "src": "18629:74:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2076,
              "nodeType": "StructuredDocumentation",
              "src": "18709:131:3",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 2083,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "18854:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2078,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "18870:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "18862:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18862:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18861:17:3"
            },
            "returnParameters": {
              "id": 2082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2081,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "18910:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2083,
                  "src": "18902:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18902:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18901:15:3"
            },
            "scope": 2150,
            "src": "18845:72:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2084,
              "nodeType": "StructuredDocumentation",
              "src": "18923:690:3",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 2093,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "19627:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2086,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "19661:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2093,
                  "src": "19653:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19653:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2088,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "19683:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2093,
                  "src": "19675:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19675:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2090,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "19703:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2093,
                  "src": "19695:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19695:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19643:73:3"
            },
            "returnParameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19725:0:3"
            },
            "scope": 2150,
            "src": "19618:108:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2094,
              "nodeType": "StructuredDocumentation",
              "src": "19732:504:3",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 2103,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "20250:12:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2096,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "20280:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "20272:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20272:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2098,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "20302:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "20294:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20294:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2100,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "20322:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2103,
                  "src": "20314:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2099,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20314:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20262:73:3"
            },
            "returnParameters": {
              "id": 2102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20344:0:3"
            },
            "scope": 2150,
            "src": "20241:104:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2104,
              "nodeType": "StructuredDocumentation",
              "src": "20351:452:3",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 2111,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "20817:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2106,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "20833:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2111,
                  "src": "20825:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2105,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20825:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2108,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "20845:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2111,
                  "src": "20837:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20837:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20824:29:3"
            },
            "returnParameters": {
              "id": 2110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20862:0:3"
            },
            "scope": 2150,
            "src": "20808:55:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2112,
              "nodeType": "StructuredDocumentation",
              "src": "20869:139:3",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 2119,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "21022:11:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2114,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "21042:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2119,
                  "src": "21034:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21034:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21033:17:3"
            },
            "returnParameters": {
              "id": 2118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "21082:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2119,
                  "src": "21074:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21074:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21073:18:3"
            },
            "scope": 2150,
            "src": "21013:79:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2120,
              "nodeType": "StructuredDocumentation",
              "src": "21098:309:3",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 2127,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "21421:17:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2122,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "21447:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2127,
                  "src": "21439:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21439:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2124,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "21462:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2127,
                  "src": "21457:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21457:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21438:34:3"
            },
            "returnParameters": {
              "id": 2126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21481:0:3"
            },
            "scope": 2150,
            "src": "21412:70:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2128,
              "nodeType": "StructuredDocumentation",
              "src": "21488:138:3",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 2137,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "21640:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2130,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "21665:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2137,
                  "src": "21657:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21657:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2132,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "21680:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2137,
                  "src": "21672:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21672:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21656:33:3"
            },
            "returnParameters": {
              "id": 2136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2135,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2137,
                  "src": "21713:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2134,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21713:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21712:6:3"
            },
            "scope": 2150,
            "src": "21631:88:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2138,
              "nodeType": "StructuredDocumentation",
              "src": "21725:556:3",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 2149,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "22295:16:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2140,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "22329:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2149,
                  "src": "22321:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22321:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2142,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "22351:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2149,
                  "src": "22343:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22343:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2144,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "22371:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2149,
                  "src": "22363:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22363:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2146,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "22403:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2149,
                  "src": "22388:19:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2145,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22388:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22311:102:3"
            },
            "returnParameters": {
              "id": 2148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22422:0:3"
            },
            "scope": 2150,
            "src": "22286:137:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2999,
        "src": "17925:4500:3",
        "usedErrors": []
      },
      {
        "id": 2151,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "22586:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2153,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2150,
              "src": "22775:7:3"
            },
            "id": 2154,
            "nodeType": "InheritanceSpecifier",
            "src": "22775:7:3"
          }
        ],
        "canonicalName": "IERC721Metadata",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 2152,
          "nodeType": "StructuredDocumentation",
          "src": "22612:133:3",
          "text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": false,
        "id": 2175,
        "linearizedBaseContracts": [
          2175,
          2150,
          2014
        ],
        "name": "IERC721Metadata",
        "nameLocation": "22756:15:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 2155,
              "nodeType": "StructuredDocumentation",
              "src": "22789:58:3",
              "text": " @dev Returns the token collection name."
            },
            "functionSelector": "06fdde03",
            "id": 2160,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "22861:4:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22865:2:3"
            },
            "returnParameters": {
              "id": 2159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2158,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2160,
                  "src": "22891:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2157,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "22891:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22890:15:3"
            },
            "scope": 2175,
            "src": "22852:54:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2161,
              "nodeType": "StructuredDocumentation",
              "src": "22912:60:3",
              "text": " @dev Returns the token collection symbol."
            },
            "functionSelector": "95d89b41",
            "id": 2166,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "22986:6:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22992:2:3"
            },
            "returnParameters": {
              "id": 2165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2166,
                  "src": "23018:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2163,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23018:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23017:15:3"
            },
            "scope": 2175,
            "src": "22977:56:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 2167,
              "nodeType": "StructuredDocumentation",
              "src": "23039:90:3",
              "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
            },
            "functionSelector": "c87b56dd",
            "id": 2174,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "23143:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2169,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "23160:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "23152:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23152:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23151:17:3"
            },
            "returnParameters": {
              "id": 2173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2172,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "23192:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2171,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23192:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23191:15:3"
            },
            "scope": 2175,
            "src": "23134:73:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2999,
        "src": "22746:463:3",
        "usedErrors": []
      },
      {
        "id": 2176,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "23330:23:3"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2178,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1587,
              "src": "23628:7:3"
            },
            "id": 2179,
            "nodeType": "InheritanceSpecifier",
            "src": "23628:7:3"
          },
          {
            "baseName": {
              "id": 2180,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2036,
              "src": "23637:6:3"
            },
            "id": 2181,
            "nodeType": "InheritanceSpecifier",
            "src": "23637:6:3"
          },
          {
            "baseName": {
              "id": 2182,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2150,
              "src": "23645:7:3"
            },
            "id": 2183,
            "nodeType": "InheritanceSpecifier",
            "src": "23645:7:3"
          },
          {
            "baseName": {
              "id": 2184,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2175,
              "src": "23654:15:3"
            },
            "id": 2185,
            "nodeType": "InheritanceSpecifier",
            "src": "23654:15:3"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2177,
          "nodeType": "StructuredDocumentation",
          "src": "23362:246:3",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 2998,
        "linearizedBaseContracts": [
          2998,
          2175,
          2150,
          2036,
          2014,
          1587
        ],
        "name": "ERC721",
        "nameLocation": "23618:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 2188,
            "libraryName": {
              "id": 2186,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1986,
              "src": "23682:7:3"
            },
            "nodeType": "UsingForDirective",
            "src": "23676:26:3",
            "typeName": {
              "id": 2187,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "23694:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 2191,
            "libraryName": {
              "id": 2189,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1566,
              "src": "23713:7:3"
            },
            "nodeType": "UsingForDirective",
            "src": "23707:26:3",
            "typeName": {
              "id": 2190,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "23725:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 2193,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "23772:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 2998,
            "src": "23757:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2192,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "23757:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2195,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "23819:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 2998,
            "src": "23804:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2194,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "23804:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2199,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "23915:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 2998,
            "src": "23879:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2198,
              "keyType": {
                "id": 2196,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "23887:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "23879:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2197,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "23898:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2203,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "24009:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 2998,
            "src": "23973:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 2202,
              "keyType": {
                "id": 2200,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "23981:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "23973:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 2201,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "23992:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2207,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "24110:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 2998,
            "src": "24074:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 2206,
              "keyType": {
                "id": 2204,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "24082:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "24074:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 2205,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24093:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 2213,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "24233:18:3",
            "nodeType": "VariableDeclaration",
            "scope": 2998,
            "src": "24180:71:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 2212,
              "keyType": {
                "id": 2208,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24188:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "24180:44:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 2211,
                "keyType": {
                  "id": 2209,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "24207:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "24199:24:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 2210,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "24218:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 2229,
              "nodeType": "Block",
              "src": "24427:57:3",
              "statements": [
                {
                  "expression": {
                    "id": 2223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2221,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2193,
                      "src": "24437:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2222,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2216,
                      "src": "24445:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "24437:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2224,
                  "nodeType": "ExpressionStatement",
                  "src": "24437:13:3"
                },
                {
                  "expression": {
                    "id": 2227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2225,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2195,
                      "src": "24460:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2226,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2218,
                      "src": "24470:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "24460:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 2228,
                  "nodeType": "ExpressionStatement",
                  "src": "24460:17:3"
                }
              ]
            },
            "documentation": {
              "id": 2214,
              "nodeType": "StructuredDocumentation",
              "src": "24258:108:3",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 2230,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2216,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "24397:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "24383:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2215,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "24383:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2218,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "24418:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2230,
                  "src": "24404:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2217,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "24404:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24382:44:3"
            },
            "returnParameters": {
              "id": 2220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24427:0:3"
            },
            "scope": 2998,
            "src": "24371:113:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2013,
              2035
            ],
            "body": {
              "id": 2260,
              "nodeType": "Block",
              "src": "24659:192:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 2258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 2253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2241,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2233,
                          "src": "24688:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2243,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2150,
                                "src": "24708:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2150_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$2150_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 2242,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "24703:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24703:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$2150",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 2245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "24703:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "24688:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 2252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2247,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2233,
                          "src": "24744:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 2249,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2175,
                                "src": "24764:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2175_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$2175_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 2248,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "24759:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "24759:21:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$2175",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "24759:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "24744:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "24688:104:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 2256,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2233,
                          "src": "24832:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 2254,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "24808:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$2998_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 2255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2035,
                        "src": "24808:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 2257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "24808:36:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "24688:156:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2240,
                  "id": 2259,
                  "nodeType": "Return",
                  "src": "24669:175:3"
                }
              ]
            },
            "documentation": {
              "id": 2231,
              "nodeType": "StructuredDocumentation",
              "src": "24490:56:3",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 2261,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "24560:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2237,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 2235,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2036,
                  "src": "24627:6:3"
                },
                {
                  "id": 2236,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2014,
                  "src": "24635:7:3"
                }
              ],
              "src": "24618:25:3"
            },
            "parameters": {
              "id": 2234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2233,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "24585:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2261,
                  "src": "24578:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 2232,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "24578:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24577:20:3"
            },
            "returnParameters": {
              "id": 2240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2239,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2261,
                  "src": "24653:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2238,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24653:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24652:6:3"
            },
            "scope": 2998,
            "src": "24551:300:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2075
            ],
            "body": {
              "id": 2284,
              "nodeType": "Block",
              "src": "24991:124:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2271,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2264,
                          "src": "25009:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25026:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25018:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2272,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25018:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25018:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "25009:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 2277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25030:44:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 2270,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25001:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25001:74:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2279,
                  "nodeType": "ExpressionStatement",
                  "src": "25001:74:3"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2280,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2203,
                      "src": "25092:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2282,
                    "indexExpression": {
                      "id": 2281,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2264,
                      "src": "25102:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25092:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2269,
                  "id": 2283,
                  "nodeType": "Return",
                  "src": "25085:23:3"
                }
              ]
            },
            "documentation": {
              "id": 2262,
              "nodeType": "StructuredDocumentation",
              "src": "24857:48:3",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 2285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "24919:9:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2266,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "24964:8:3"
            },
            "parameters": {
              "id": 2265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2264,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "24937:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2285,
                  "src": "24929:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2263,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24929:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24928:15:3"
            },
            "returnParameters": {
              "id": 2269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2268,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2285,
                  "src": "24982:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24982:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24981:9:3"
            },
            "scope": 2998,
            "src": "24910:205:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2083
            ],
            "body": {
              "id": 2312,
              "nodeType": "Block",
              "src": "25253:154:3",
              "statements": [
                {
                  "assignments": [
                    2295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2295,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "25271:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2312,
                      "src": "25263:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2294,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "25263:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2299,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2296,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2199,
                      "src": "25279:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2298,
                    "indexExpression": {
                      "id": 2297,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2288,
                      "src": "25287:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25279:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25263:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2301,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2295,
                          "src": "25313:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25330:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25322:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2302,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25322:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25322:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "25313:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25334:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 2300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25305:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25305:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2309,
                  "nodeType": "ExpressionStatement",
                  "src": "25305:73:3"
                },
                {
                  "expression": {
                    "id": 2310,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2295,
                    "src": "25395:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2293,
                  "id": 2311,
                  "nodeType": "Return",
                  "src": "25388:12:3"
                }
              ]
            },
            "documentation": {
              "id": 2286,
              "nodeType": "StructuredDocumentation",
              "src": "25121:46:3",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 2313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "25181:7:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2290,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25226:8:3"
            },
            "parameters": {
              "id": 2289,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2288,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "25197:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "25189:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2287,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25189:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25188:17:3"
            },
            "returnParameters": {
              "id": 2293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2292,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2313,
                  "src": "25244:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25244:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25243:9:3"
            },
            "scope": 2998,
            "src": "25172:235:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2160
            ],
            "body": {
              "id": 2322,
              "nodeType": "Block",
              "src": "25538:29:3",
              "statements": [
                {
                  "expression": {
                    "id": 2320,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2193,
                    "src": "25555:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2319,
                  "id": 2321,
                  "nodeType": "Return",
                  "src": "25548:12:3"
                }
              ]
            },
            "documentation": {
              "id": 2314,
              "nodeType": "StructuredDocumentation",
              "src": "25413:51:3",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 2323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "25478:4:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2316,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25505:8:3"
            },
            "parameters": {
              "id": 2315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25482:2:3"
            },
            "returnParameters": {
              "id": 2319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2318,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2323,
                  "src": "25523:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2317,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25523:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25522:15:3"
            },
            "scope": 2998,
            "src": "25469:98:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2166
            ],
            "body": {
              "id": 2332,
              "nodeType": "Block",
              "src": "25702:31:3",
              "statements": [
                {
                  "expression": {
                    "id": 2330,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2195,
                    "src": "25719:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 2329,
                  "id": 2331,
                  "nodeType": "Return",
                  "src": "25712:14:3"
                }
              ]
            },
            "documentation": {
              "id": 2324,
              "nodeType": "StructuredDocumentation",
              "src": "25573:53:3",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 2333,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "25640:6:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2326,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25669:8:3"
            },
            "parameters": {
              "id": 2325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25646:2:3"
            },
            "returnParameters": {
              "id": 2329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2328,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2333,
                  "src": "25687:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2327,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25687:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25686:15:3"
            },
            "scope": 2998,
            "src": "25631:102:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2174
            ],
            "body": {
              "id": 2374,
              "nodeType": "Block",
              "src": "25887:241:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2344,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2336,
                            "src": "25913:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2343,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2606,
                          "src": "25905:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "25905:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25923:49:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 2342,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25897:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25897:76:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2348,
                  "nodeType": "ExpressionStatement",
                  "src": "25897:76:3"
                },
                {
                  "assignments": [
                    2350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2350,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "25998:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2374,
                      "src": "25984:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2349,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "25984:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2353,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2351,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2384,
                      "src": "26008:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 2352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26008:10:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25984:34:3"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2356,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2350,
                              "src": "26041:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 2355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26035:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 2354,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "26035:5:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26035:14:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 2358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "26035:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 2359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26059:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "26035:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 2371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26119:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 2372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "26035:86:3",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 2365,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2350,
                              "src": "26087:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2366,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2336,
                                  "src": "26096:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1448,
                                "src": "26096:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 2368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26096:18:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 2363,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "26070:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "26070:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 2369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26070:45:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 2362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26063:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 2361,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "26063:6:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26063:53:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 2341,
                  "id": 2373,
                  "nodeType": "Return",
                  "src": "26028:93:3"
                }
              ]
            },
            "documentation": {
              "id": 2334,
              "nodeType": "StructuredDocumentation",
              "src": "25739:55:3",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 2375,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "25808:8:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2338,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25854:8:3"
            },
            "parameters": {
              "id": 2337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2336,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "25825:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2375,
                  "src": "25817:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2335,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25817:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25816:17:3"
            },
            "returnParameters": {
              "id": 2341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2340,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2375,
                  "src": "25872:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2339,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25872:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25871:15:3"
            },
            "scope": 2998,
            "src": "25799:329:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2383,
              "nodeType": "Block",
              "src": "26435:26:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 2381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "26452:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 2380,
                  "id": 2382,
                  "nodeType": "Return",
                  "src": "26445:9:3"
                }
              ]
            },
            "documentation": {
              "id": 2376,
              "nodeType": "StructuredDocumentation",
              "src": "26134:230:3",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 2384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "26378:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26386:2:3"
            },
            "returnParameters": {
              "id": 2380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2379,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2384,
                  "src": "26420:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2378,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26420:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26419:15:3"
            },
            "scope": 2998,
            "src": "26369:92:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              2111
            ],
            "body": {
              "id": 2426,
              "nodeType": "Block",
              "src": "26588:331:3",
              "statements": [
                {
                  "assignments": [
                    2394
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2394,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "26606:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2426,
                      "src": "26598:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2393,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26598:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2399,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2397,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2389,
                        "src": "26629:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2395,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "26614:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2998_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2313,
                      "src": "26614:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26614:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26598:39:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2401,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2387,
                          "src": "26655:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2402,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2394,
                          "src": "26661:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26655:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 2404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26668:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 2400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26647:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26647:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2406,
                  "nodeType": "ExpressionStatement",
                  "src": "26647:57:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2408,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1577,
                              "src": "26736:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2409,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "26736:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2410,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2394,
                            "src": "26752:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "26736:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2413,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2394,
                              "src": "26778:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2414,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1577,
                                "src": "26785:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26785:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2412,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2483,
                            "src": "26761:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26761:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "26736:62:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 2418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26812:58:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 2407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26715:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26715:165:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2420,
                  "nodeType": "ExpressionStatement",
                  "src": "26715:165:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2422,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2387,
                        "src": "26900:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2423,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2389,
                        "src": "26904:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2421,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2892,
                      "src": "26891:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26891:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2425,
                  "nodeType": "ExpressionStatement",
                  "src": "26891:21:3"
                }
              ]
            },
            "documentation": {
              "id": 2385,
              "nodeType": "StructuredDocumentation",
              "src": "26467:46:3",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 2427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "26527:7:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2391,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26579:8:3"
            },
            "parameters": {
              "id": 2390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2387,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "26543:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2427,
                  "src": "26535:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26535:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2389,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "26555:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2427,
                  "src": "26547:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26547:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26534:29:3"
            },
            "returnParameters": {
              "id": 2392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26588:0:3"
            },
            "scope": 2998,
            "src": "26518:401:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2119
            ],
            "body": {
              "id": 2447,
              "nodeType": "Block",
              "src": "27065:132:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2438,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2430,
                            "src": "27091:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2437,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2606,
                          "src": "27083:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27083:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27101:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 2436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27075:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27075:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2442,
                  "nodeType": "ExpressionStatement",
                  "src": "27075:73:3"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2443,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2207,
                      "src": "27166:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2445,
                    "indexExpression": {
                      "id": 2444,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2430,
                      "src": "27182:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27166:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2435,
                  "id": 2446,
                  "nodeType": "Return",
                  "src": "27159:31:3"
                }
              ]
            },
            "documentation": {
              "id": 2428,
              "nodeType": "StructuredDocumentation",
              "src": "26925:50:3",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 2448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "26989:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2432,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27038:8:3"
            },
            "parameters": {
              "id": 2431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2430,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "27009:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2448,
                  "src": "27001:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27001:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27000:17:3"
            },
            "returnParameters": {
              "id": 2435,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2434,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2448,
                  "src": "27056:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27056:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27055:9:3"
            },
            "scope": 2998,
            "src": "26980:217:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2127
            ],
            "body": {
              "id": 2464,
              "nodeType": "Block",
              "src": "27348:69:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 2458,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1577,
                          "src": "27377:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 2459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27377:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2460,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2451,
                        "src": "27391:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2461,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2453,
                        "src": "27401:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2457,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2924,
                      "src": "27358:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27358:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2463,
                  "nodeType": "ExpressionStatement",
                  "src": "27358:52:3"
                }
              ]
            },
            "documentation": {
              "id": 2449,
              "nodeType": "StructuredDocumentation",
              "src": "27203:56:3",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 2465,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "27273:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2455,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27339:8:3"
            },
            "parameters": {
              "id": 2454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2451,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "27299:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "27291:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27291:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2453,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "27314:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2465,
                  "src": "27309:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2452,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27309:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27290:33:3"
            },
            "returnParameters": {
              "id": 2456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27348:0:3"
            },
            "scope": 2998,
            "src": "27264:153:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2137
            ],
            "body": {
              "id": 2482,
              "nodeType": "Block",
              "src": "27586:59:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 2476,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2213,
                        "src": "27603:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 2478,
                      "indexExpression": {
                        "id": 2477,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2468,
                        "src": "27622:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "27603:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 2480,
                    "indexExpression": {
                      "id": 2479,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2470,
                      "src": "27629:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "27603:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2475,
                  "id": 2481,
                  "nodeType": "Return",
                  "src": "27596:42:3"
                }
              ]
            },
            "documentation": {
              "id": 2466,
              "nodeType": "StructuredDocumentation",
              "src": "27423:55:3",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 2483,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "27492:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2472,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27562:8:3"
            },
            "parameters": {
              "id": 2471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2468,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "27517:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "27509:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27509:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2470,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "27532:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "27524:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27524:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27508:33:3"
            },
            "returnParameters": {
              "id": 2475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2474,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2483,
                  "src": "27580:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2473,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "27580:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27579:6:3"
            },
            "scope": 2998,
            "src": "27483:162:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2103
            ],
            "body": {
              "id": 2509,
              "nodeType": "Block",
              "src": "27826:211:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2496,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1577,
                              "src": "27915:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27915:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2498,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "27929:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2495,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2647,
                          "src": "27896:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 2499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27896:41:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27939:51:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 2494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27888:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27888:103:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2502,
                  "nodeType": "ExpressionStatement",
                  "src": "27888:103:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2504,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2486,
                        "src": "28012:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2505,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2488,
                        "src": "28018:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2506,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2490,
                        "src": "28022:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2503,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2868,
                      "src": "28002:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28002:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2508,
                  "nodeType": "ExpressionStatement",
                  "src": "28002:28:3"
                }
              ]
            },
            "documentation": {
              "id": 2484,
              "nodeType": "StructuredDocumentation",
              "src": "27651:51:3",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 2510,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "27716:12:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2492,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27817:8:3"
            },
            "parameters": {
              "id": 2491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2486,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "27746:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2510,
                  "src": "27738:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27738:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2488,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "27768:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2510,
                  "src": "27760:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27760:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2490,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "27788:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2510,
                  "src": "27780:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27780:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27728:73:3"
            },
            "returnParameters": {
              "id": 2493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27826:0:3"
            },
            "scope": 2998,
            "src": "27707:330:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2093
            ],
            "body": {
              "id": 2528,
              "nodeType": "Block",
              "src": "28226:56:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2522,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2513,
                        "src": "28253:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2523,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2515,
                        "src": "28259:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2524,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2517,
                        "src": "28263:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28272:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2521,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2529,
                        2559
                      ],
                      "referencedDeclaration": 2559,
                      "src": "28236:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28236:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2527,
                  "nodeType": "ExpressionStatement",
                  "src": "28236:39:3"
                }
              ]
            },
            "documentation": {
              "id": 2511,
              "nodeType": "StructuredDocumentation",
              "src": "28043:55:3",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 2529,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "28112:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2519,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28217:8:3"
            },
            "parameters": {
              "id": 2518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2513,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "28146:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "28138:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28138:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2515,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "28168:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "28160:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28160:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2517,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "28188:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2529,
                  "src": "28180:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28180:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28128:73:3"
            },
            "returnParameters": {
              "id": 2520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28226:0:3"
            },
            "scope": 2998,
            "src": "28103:179:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2149
            ],
            "body": {
              "id": 2558,
              "nodeType": "Block",
              "src": "28499:169:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2544,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1577,
                              "src": "28536:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 2545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28536:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2546,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2536,
                            "src": "28550:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2543,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2647,
                          "src": "28517:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 2547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28517:41:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 2548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28560:51:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 2542,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28509:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28509:103:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2550,
                  "nodeType": "ExpressionStatement",
                  "src": "28509:103:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2552,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2532,
                        "src": "28636:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2553,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2534,
                        "src": "28642:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2554,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2536,
                        "src": "28646:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 2555,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2538,
                        "src": "28655:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2551,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2588,
                      "src": "28622:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28622:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2557,
                  "nodeType": "ExpressionStatement",
                  "src": "28622:39:3"
                }
              ]
            },
            "documentation": {
              "id": 2530,
              "nodeType": "StructuredDocumentation",
              "src": "28288:55:3",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 2559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "28357:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2540,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28490:8:3"
            },
            "parameters": {
              "id": 2539,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2532,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "28391:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "28383:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28383:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2534,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "28413:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "28405:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28405:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2536,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "28433:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "28425:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28425:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2538,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "28463:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2559,
                  "src": "28450:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2537,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "28450:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28373:101:3"
            },
            "returnParameters": {
              "id": 2541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28499:0:3"
            },
            "scope": 2998,
            "src": "28348:320:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2587,
              "nodeType": "Block",
              "src": "29671:166:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2572,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "29691:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2573,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2564,
                        "src": "29697:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2574,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2566,
                        "src": "29701:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2571,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2868,
                      "src": "29681:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29681:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2576,
                  "nodeType": "ExpressionStatement",
                  "src": "29681:28:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2579,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2562,
                            "src": "29750:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2580,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2564,
                            "src": "29756:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2581,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2566,
                            "src": "29760:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2582,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2568,
                            "src": "29769:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2578,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2986,
                          "src": "29727:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29727:48:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29777:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29719:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29719:111:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2586,
                  "nodeType": "ExpressionStatement",
                  "src": "29719:111:3"
                }
              ]
            },
            "documentation": {
              "id": 2560,
              "nodeType": "StructuredDocumentation",
              "src": "28674:851:3",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "29539:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2562,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "29570:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2588,
                  "src": "29562:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2561,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29562:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2564,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "29592:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2588,
                  "src": "29584:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2563,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29584:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2566,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "29612:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2588,
                  "src": "29604:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2565,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29604:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2568,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "29642:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2588,
                  "src": "29629:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2567,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "29629:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29552:101:3"
            },
            "returnParameters": {
              "id": 2570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29671:0:3"
            },
            "scope": 2998,
            "src": "29530:307:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2605,
              "nodeType": "Block",
              "src": "30211:54:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 2596,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2199,
                        "src": "30228:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2598,
                      "indexExpression": {
                        "id": 2597,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2591,
                        "src": "30236:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "30228:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "30256:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "30248:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2599,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "30248:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "30248:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "30228:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2595,
                  "id": 2604,
                  "nodeType": "Return",
                  "src": "30221:37:3"
                }
              ]
            },
            "documentation": {
              "id": 2589,
              "nodeType": "StructuredDocumentation",
              "src": "29843:292:3",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 2606,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "30149:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2591,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "30165:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2606,
                  "src": "30157:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2590,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30157:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30156:17:3"
            },
            "returnParameters": {
              "id": 2595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2594,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2606,
                  "src": "30205:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2593,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "30205:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30204:6:3"
            },
            "scope": 2998,
            "src": "30140:125:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2646,
              "nodeType": "Block",
              "src": "30522:245:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2618,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2611,
                            "src": "30548:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2617,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2606,
                          "src": "30540:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30540:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 2620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30558:46:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 2616,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30532:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30532:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2622,
                  "nodeType": "ExpressionStatement",
                  "src": "30532:73:3"
                },
                {
                  "assignments": [
                    2624
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2624,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "30623:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2646,
                      "src": "30615:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2623,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "30615:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2629,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2627,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2611,
                        "src": "30646:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2625,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "30631:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2998_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2313,
                      "src": "30631:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30631:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30615:39:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2632,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2630,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2609,
                              "src": "30672:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2631,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2624,
                              "src": "30683:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "30672:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 2634,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2611,
                                  "src": "30704:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2633,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2448,
                                "src": "30692:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 2635,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "30692:20:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2636,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2609,
                              "src": "30716:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "30692:31:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "30672:51:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 2640,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2624,
                              "src": "30744:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2641,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2609,
                              "src": "30751:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2639,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2483,
                            "src": "30727:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 2642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "30727:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "30672:87:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2644,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "30671:89:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2615,
                  "id": 2645,
                  "nodeType": "Return",
                  "src": "30664:96:3"
                }
              ]
            },
            "documentation": {
              "id": 2607,
              "nodeType": "StructuredDocumentation",
              "src": "30271:147:3",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 2647,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "30432:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2609,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "30459:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2647,
                  "src": "30451:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30451:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2611,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "30476:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2647,
                  "src": "30468:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2610,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30468:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30450:34:3"
            },
            "returnParameters": {
              "id": 2615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2614,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2647,
                  "src": "30516:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2613,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "30516:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30515:6:3"
            },
            "scope": 2998,
            "src": "30423:344:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2661,
              "nodeType": "Block",
              "src": "31162:43:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2656,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2650,
                        "src": "31182:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2657,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2652,
                        "src": "31186:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31195:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2655,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2662,
                        2691
                      ],
                      "referencedDeclaration": 2691,
                      "src": "31172:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 2659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31172:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2660,
                  "nodeType": "ExpressionStatement",
                  "src": "31172:26:3"
                }
              ]
            },
            "documentation": {
              "id": 2648,
              "nodeType": "StructuredDocumentation",
              "src": "30773:319:3",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2662,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "31106:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2650,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "31124:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2662,
                  "src": "31116:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31116:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2652,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "31136:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2662,
                  "src": "31128:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31128:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31115:29:3"
            },
            "returnParameters": {
              "id": 2654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31162:0:3"
            },
            "scope": 2998,
            "src": "31097:108:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2690,
              "nodeType": "Block",
              "src": "31541:196:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2673,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2665,
                        "src": "31557:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2674,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2667,
                        "src": "31561:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2672,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2748,
                      "src": "31551:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31551:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2676,
                  "nodeType": "ExpressionStatement",
                  "src": "31551:18:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "31631:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "31623:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2679,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "31623:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "31623:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2683,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2665,
                            "src": "31635:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2684,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2667,
                            "src": "31639:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2685,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2669,
                            "src": "31648:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2678,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2986,
                          "src": "31600:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31600:54:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31668:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2677,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "31579:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31579:151:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2689,
                  "nodeType": "ExpressionStatement",
                  "src": "31579:151:3"
                }
              ]
            },
            "documentation": {
              "id": 2663,
              "nodeType": "StructuredDocumentation",
              "src": "31211:210:3",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 2691,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "31435:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2665,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "31462:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "31454:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31454:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2667,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "31482:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "31474:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31474:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2669,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "31512:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2691,
                  "src": "31499:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2668,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "31499:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31444:79:3"
            },
            "returnParameters": {
              "id": 2671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31541:0:3"
            },
            "scope": 2998,
            "src": "31426:311:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2747,
              "nodeType": "Block",
              "src": "32120:311:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2700,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2694,
                          "src": "32138:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32152:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "32144:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2701,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "32144:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32144:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "32138:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32156:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 2699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32130:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32130:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2708,
                  "nodeType": "ExpressionStatement",
                  "src": "32130:61:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "32209:17:3",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2711,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2696,
                              "src": "32218:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2710,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2606,
                            "src": "32210:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 2712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32210:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 2714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32228:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 2709,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32201:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32201:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2716,
                  "nodeType": "ExpressionStatement",
                  "src": "32201:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32299:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "32291:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2718,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "32291:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32291:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2722,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2694,
                        "src": "32303:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2723,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "32307:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2717,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2997,
                      "src": "32270:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32270:45:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2725,
                  "nodeType": "ExpressionStatement",
                  "src": "32270:45:3"
                },
                {
                  "expression": {
                    "id": 2730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2726,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2203,
                        "src": "32326:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2728,
                      "indexExpression": {
                        "id": 2727,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2694,
                        "src": "32336:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "32326:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "32343:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "32326:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2731,
                  "nodeType": "ExpressionStatement",
                  "src": "32326:18:3"
                },
                {
                  "expression": {
                    "id": 2736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2732,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2199,
                        "src": "32354:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2734,
                      "indexExpression": {
                        "id": 2733,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "32362:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "32354:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2735,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2694,
                      "src": "32373:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "32354:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2737,
                  "nodeType": "ExpressionStatement",
                  "src": "32354:21:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32408:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "32400:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2739,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "32400:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32400:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2743,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2694,
                        "src": "32412:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2744,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2696,
                        "src": "32416:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2738,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "32391:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32391:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2746,
                  "nodeType": "EmitStatement",
                  "src": "32386:38:3"
                }
              ]
            },
            "documentation": {
              "id": 2692,
              "nodeType": "StructuredDocumentation",
              "src": "31743:311:3",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 2748,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "32068:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2694,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "32082:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2748,
                  "src": "32074:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2693,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32074:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2696,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "32094:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2748,
                  "src": "32086:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32086:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32073:29:3"
            },
            "returnParameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32120:0:3"
            },
            "scope": 2998,
            "src": "32059:372:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2798,
              "nodeType": "Block",
              "src": "32697:299:3",
              "statements": [
                {
                  "assignments": [
                    2755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2755,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "32715:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2798,
                      "src": "32707:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2754,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "32707:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2760,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2758,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2751,
                        "src": "32738:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2756,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2998,
                        "src": "32723:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2998_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2313,
                      "src": "32723:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32723:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "32707:39:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2762,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2755,
                        "src": "32778:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32793:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "32785:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2763,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "32785:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32785:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2767,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2751,
                        "src": "32797:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2761,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2997,
                      "src": "32757:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32757:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2769,
                  "nodeType": "ExpressionStatement",
                  "src": "32757:48:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2773,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32860:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "32852:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2771,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "32852:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32852:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2775,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2751,
                        "src": "32864:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2770,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2892,
                      "src": "32843:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32843:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2777,
                  "nodeType": "ExpressionStatement",
                  "src": "32843:29:3"
                },
                {
                  "expression": {
                    "id": 2782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2778,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2203,
                        "src": "32883:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2780,
                      "indexExpression": {
                        "id": 2779,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2755,
                        "src": "32893:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "32883:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "32903:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "32883:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2783,
                  "nodeType": "ExpressionStatement",
                  "src": "32883:21:3"
                },
                {
                  "expression": {
                    "id": 2787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "32914:23:3",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2784,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2199,
                        "src": "32921:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2786,
                      "indexExpression": {
                        "id": 2785,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2751,
                        "src": "32929:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "32921:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2788,
                  "nodeType": "ExpressionStatement",
                  "src": "32914:23:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2790,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2755,
                        "src": "32962:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "32977:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "32969:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "32969:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32969:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2795,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2751,
                        "src": "32981:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2789,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "32953:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32953:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2797,
                  "nodeType": "EmitStatement",
                  "src": "32948:41:3"
                }
              ]
            },
            "documentation": {
              "id": 2749,
              "nodeType": "StructuredDocumentation",
              "src": "32437:206:3",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 2799,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "32657:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2751,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "32671:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2799,
                  "src": "32663:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32663:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32662:17:3"
            },
            "returnParameters": {
              "id": 2753,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32697:0:3"
            },
            "scope": 2998,
            "src": "32648:348:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2867,
              "nodeType": "Block",
              "src": "33429:451:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2812,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2806,
                              "src": "33462:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2810,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2998,
                              "src": "33447:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2998_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 2811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2313,
                            "src": "33447:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 2813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33447:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2814,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2802,
                          "src": "33474:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "33447:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 2816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33480:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 2809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "33439:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33439:85:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2818,
                  "nodeType": "ExpressionStatement",
                  "src": "33439:85:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2820,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2804,
                          "src": "33542:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "33556:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "33548:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2821,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "33548:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33548:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "33542:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33560:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 2819,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "33534:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33534:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2828,
                  "nodeType": "ExpressionStatement",
                  "src": "33534:65:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2830,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2802,
                        "src": "33631:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2831,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "33637:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2832,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2806,
                        "src": "33641:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2829,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2997,
                      "src": "33610:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33610:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "ExpressionStatement",
                  "src": "33610:39:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33728:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33720:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2836,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33720:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33720:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2840,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2806,
                        "src": "33732:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2835,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2892,
                      "src": "33711:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33711:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2842,
                  "nodeType": "ExpressionStatement",
                  "src": "33711:29:3"
                },
                {
                  "expression": {
                    "id": 2847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2843,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2203,
                        "src": "33751:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2845,
                      "indexExpression": {
                        "id": 2844,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2802,
                        "src": "33761:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33751:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33770:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "33751:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2848,
                  "nodeType": "ExpressionStatement",
                  "src": "33751:20:3"
                },
                {
                  "expression": {
                    "id": 2853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2849,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2203,
                        "src": "33781:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2851,
                      "indexExpression": {
                        "id": 2850,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "33791:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33781:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 2852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33798:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "33781:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2854,
                  "nodeType": "ExpressionStatement",
                  "src": "33781:18:3"
                },
                {
                  "expression": {
                    "id": 2859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2855,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2199,
                        "src": "33809:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2857,
                      "indexExpression": {
                        "id": 2856,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2806,
                        "src": "33817:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33809:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2858,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2804,
                      "src": "33828:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "33809:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2860,
                  "nodeType": "ExpressionStatement",
                  "src": "33809:21:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2862,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2802,
                        "src": "33855:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2863,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2804,
                        "src": "33861:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2864,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2806,
                        "src": "33865:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2861,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2049,
                      "src": "33846:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33846:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2866,
                  "nodeType": "EmitStatement",
                  "src": "33841:32:3"
                }
              ]
            },
            "documentation": {
              "id": 2800,
              "nodeType": "StructuredDocumentation",
              "src": "33002:313:3",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 2868,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "33329:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2802,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "33356:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2868,
                  "src": "33348:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33348:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2804,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "33378:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2868,
                  "src": "33370:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33370:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2806,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "33398:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2868,
                  "src": "33390:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2805,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33390:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33338:73:3"
            },
            "returnParameters": {
              "id": 2808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33429:0:3"
            },
            "scope": 2998,
            "src": "33320:560:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2891,
              "nodeType": "Block",
              "src": "34055:107:3",
              "statements": [
                {
                  "expression": {
                    "id": 2880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2876,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2207,
                        "src": "34065:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2878,
                      "indexExpression": {
                        "id": 2877,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2873,
                        "src": "34081:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "34065:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2879,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2871,
                      "src": "34092:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "34065:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2881,
                  "nodeType": "ExpressionStatement",
                  "src": "34065:29:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2885,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2873,
                            "src": "34133:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2883,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2998,
                            "src": "34118:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$2998_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 2884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2313,
                          "src": "34118:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34118:23:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2887,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2871,
                        "src": "34143:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2888,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2873,
                        "src": "34147:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2882,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2058,
                      "src": "34109:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34109:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2890,
                  "nodeType": "EmitStatement",
                  "src": "34104:51:3"
                }
              ]
            },
            "documentation": {
              "id": 2869,
              "nodeType": "StructuredDocumentation",
              "src": "33886:100:3",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 2892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "34000:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2871,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "34017:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2892,
                  "src": "34009:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34009:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2873,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "34029:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2892,
                  "src": "34021:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34021:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34008:29:3"
            },
            "returnParameters": {
              "id": 2875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34055:0:3"
            },
            "scope": 2998,
            "src": "33991:171:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2923,
              "nodeType": "Block",
              "src": "34420:184:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2903,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2895,
                          "src": "34438:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2904,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2897,
                          "src": "34447:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "34438:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 2906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34457:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 2902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "34430:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34430:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2908,
                  "nodeType": "ExpressionStatement",
                  "src": "34430:55:3"
                },
                {
                  "expression": {
                    "id": 2915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2909,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2213,
                          "src": "34495:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 2912,
                        "indexExpression": {
                          "id": 2910,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2895,
                          "src": "34514:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "34495:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2913,
                      "indexExpression": {
                        "id": 2911,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2897,
                        "src": "34521:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "34495:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2914,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2899,
                      "src": "34533:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "34495:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2916,
                  "nodeType": "ExpressionStatement",
                  "src": "34495:46:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2918,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2895,
                        "src": "34571:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2919,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2897,
                        "src": "34578:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2920,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2899,
                        "src": "34588:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2917,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2067,
                      "src": "34556:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34556:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2922,
                  "nodeType": "EmitStatement",
                  "src": "34551:46:3"
                }
              ]
            },
            "documentation": {
              "id": 2893,
              "nodeType": "StructuredDocumentation",
              "src": "34168:124:3",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 2924,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "34306:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2900,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2895,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "34342:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2924,
                  "src": "34334:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34334:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2897,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "34365:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2924,
                  "src": "34357:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34357:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2899,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "34388:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2924,
                  "src": "34383:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2898,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "34383:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34324:78:3"
            },
            "returnParameters": {
              "id": 2901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34420:0:3"
            },
            "scope": 2998,
            "src": "34297:307:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2985,
              "nodeType": "Block",
              "src": "35313:622:3",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2938,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2929,
                        "src": "35327:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1709,
                      "src": "35327:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 2940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35327:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2983,
                    "nodeType": "Block",
                    "src": "35893:36:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "35914:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2937,
                        "id": 2982,
                        "nodeType": "Return",
                        "src": "35907:11:3"
                      }
                    ]
                  },
                  "id": 2984,
                  "nodeType": "IfStatement",
                  "src": "35323:606:3",
                  "trueBody": {
                    "id": 2980,
                    "nodeType": "Block",
                    "src": "35344:543:3",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 2960,
                              "nodeType": "Block",
                              "src": "35459:91:3",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2958,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2954,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2952,
                                      "src": "35484:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2955,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2003,
                                          "src": "35494:15:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2003_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 2956,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2002,
                                        "src": "35494:32:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 2957,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "35494:41:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "35484:51:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 2937,
                                  "id": 2959,
                                  "nodeType": "Return",
                                  "src": "35477:58:3"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2961,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2953,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2952,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "35451:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2961,
                                  "src": "35444:13:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 2951,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "35444:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "35443:15:3"
                            },
                            "src": "35435:115:3"
                          },
                          {
                            "block": {
                              "id": 2977,
                              "nodeType": "Block",
                              "src": "35579:298:3",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2968,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2965,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2963,
                                        "src": "35601:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 2966,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "35601:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2967,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "35618:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "35601:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 2975,
                                    "nodeType": "Block",
                                    "src": "35728:135:3",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "35759:86:3",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "35796:2:3",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "35800:6:3"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "35792:3:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "35792:15:3"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "35815:6:3"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "35809:5:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "35809:13:3"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "35785:6:3"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "35785:38:3"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "35785:38:3"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 2963,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "35800:6:3",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 2963,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "35815:6:3",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 2974,
                                        "nodeType": "InlineAssembly",
                                        "src": "35750:95:3"
                                      }
                                    ]
                                  },
                                  "id": 2976,
                                  "nodeType": "IfStatement",
                                  "src": "35597:266:3",
                                  "trueBody": {
                                    "id": 2973,
                                    "nodeType": "Block",
                                    "src": "35621:101:3",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 2970,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "35650:52:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 2969,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "35643:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 2971,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "35643:60:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 2972,
                                        "nodeType": "ExpressionStatement",
                                        "src": "35643:60:3"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2978,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2964,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2963,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "35571:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2978,
                                  "src": "35558:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 2962,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "35558:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "35557:21:3"
                            },
                            "src": "35551:326:3"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2945,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1577,
                                "src": "35399:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "35399:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2947,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2927,
                              "src": "35413:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2948,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2931,
                              "src": "35419:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2949,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2933,
                              "src": "35428:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2942,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2929,
                                  "src": "35378:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2941,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2003,
                                "src": "35362:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$2003_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 2943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "35362:19:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$2003",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 2944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2002,
                            "src": "35362:36:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 2950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35362:72:3",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 2979,
                        "nodeType": "TryStatement",
                        "src": "35358:519:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2925,
              "nodeType": "StructuredDocumentation",
              "src": "34610:542:3",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 2986,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "35166:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2927,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "35206:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "35198:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35198:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2929,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "35228:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "35220:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2928,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35220:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2931,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "35248:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "35240:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2930,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "35240:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2933,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "35278:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "35265:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2932,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "35265:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35188:101:3"
            },
            "returnParameters": {
              "id": 2937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2936,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2986,
                  "src": "35307:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2935,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "35307:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35306:6:3"
            },
            "scope": 2998,
            "src": "35157:778:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2996,
              "nodeType": "Block",
              "src": "36611:2:3",
              "statements": []
            },
            "documentation": {
              "id": 2987,
              "nodeType": "StructuredDocumentation",
              "src": "35941:545:3",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "36500:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2989,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "36538:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2997,
                  "src": "36530:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36530:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2991,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "36560:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2997,
                  "src": "36552:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36552:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2993,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "36580:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2997,
                  "src": "36572:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "36572:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36520:73:3"
            },
            "returnParameters": {
              "id": 2995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36611:0:3"
            },
            "scope": 2998,
            "src": "36491:122:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2999,
        "src": "23609:13006:3",
        "usedErrors": []
      }
    ],
    "src": "209:36406:3"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620014e2380380620014e28339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b61125180620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d64565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd9565b61012461011f366004610dec565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e21565b6103a6565b005b61014f61015f366004610e4b565b6104bb565b61014f610172366004610e4b565b6104ec565b610124610185366004610dec565b610507565b61019d610198366004610e87565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610ea2565b610614565b61014f6101d4366004610ef4565b610623565b6101046101e7366004610dec565b61065b565b6100e76101fa366004610fd0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990611003565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590611003565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b81526004016103819061103d565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990611003565b61061f338383610a48565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b81526004016103819061103d565b61065584848484610b16565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b49565b60405160200161072c92919061108e565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b031614806108705750836001600160a01b03166108658461030c565b6001600160a01b0316145b806108a057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b0316146109235760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b0382166109855760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610990600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b99084906110d3565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e79084906110ea565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b218484846108a8565b610b2d84848484610c4a565b6106555760405162461bcd60e51b815260040161038190611102565b606081600003610b705750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b9a5780610b8481611154565b9150610b939050600a83611183565b9150610b74565b60008167ffffffffffffffff811115610bb557610bb5610ede565b6040519080825280601f01601f191660200182016040528015610bdf576020820181803683370190505b5090505b84156108a057610bf46001836110d3565b9150610c01600a86611197565b610c0c9060306110ea565b60f81b818381518110610c2157610c216111ab565b60200101906001600160f81b031916908160001a905350610c43600a86611183565b9450610be3565b60006001600160a01b0384163b15610d4057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8e9033908990889088906004016111c1565b6020604051808303816000875af1925050508015610cc9575060408051601f3d908101601f19168201909252610cc6918101906111fe565b60015b610d26573d808015610cf7576040519150601f19603f3d011682016040523d82523d6000602084013e610cfc565b606091505b508051600003610d1e5760405162461bcd60e51b815260040161038190611102565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d6157600080fd5b50565b600060208284031215610d7657600080fd5b813561073c81610d4b565b60005b83811015610d9c578181015183820152602001610d84565b838111156106555750506000910152565b60008151808452610dc5816020860160208601610d81565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610dad565b600060208284031215610dfe57600080fd5b5035919050565b80356001600160a01b0381168114610e1c57600080fd5b919050565b60008060408385031215610e3457600080fd5b610e3d83610e05565b946020939093013593505050565b600080600060608486031215610e6057600080fd5b610e6984610e05565b9250610e7760208501610e05565b9150604084013590509250925092565b600060208284031215610e9957600080fd5b61073c82610e05565b60008060408385031215610eb557600080fd5b610ebe83610e05565b915060208301358015158114610ed357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0a57600080fd5b610f1385610e05565b9350610f2160208601610e05565b925060408501359150606085013567ffffffffffffffff80821115610f4557600080fd5b818701915087601f830112610f5957600080fd5b813581811115610f6b57610f6b610ede565b604051601f8201601f19908116603f01168101908382118183101715610f9357610f93610ede565b816040528281528a6020848701011115610fac57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fe357600080fd5b610fec83610e05565b9150610ffa60208401610e05565b90509250929050565b600181811c9082168061101757607f821691505b60208210810361103757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600083516110a0818460208801610d81565b8351908301906110b4818360208801610d81565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e5576110e56110bd565b500390565b600082198211156110fd576110fd6110bd565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611166576111666110bd565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111925761119261116d565b500490565b6000826111a6576111a661116d565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f490830184610dad565b9695505050505050565b60006020828403121561121057600080fd5b815161073c81610d4b56fea2646970667358221220938cc062ec60b94d43bff5c11efd6e8b3be5cbdde453e170ef680f0d9dbcff6864736f6c634300080d0033",
  "bytecodeSha1": "43596085351badb8ab66350553dcdb54ddeec964",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "3": {
        "ERC721._checkOnERC721Received": {
          "62": [
            35601,
            35619,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "60": [
            29727,
            29775,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "59": [
            34438,
            34455,
            true
          ]
        },
        "ERC721._transfer": {
          "57": [
            33447,
            33478,
            true
          ],
          "58": [
            33542,
            33558,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            26655,
            26666,
            true
          ],
          "51": [
            26736,
            26757,
            true
          ],
          "52": [
            26761,
            26798,
            true
          ]
        },
        "ERC721.balanceOf": {
          "54": [
            25009,
            25028,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "55": [
            28517,
            28558,
            true
          ]
        },
        "ERC721.tokenURI": {
          "56": [
            26035,
            26060,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            27896,
            27937,
            true
          ]
        },
        "Strings.toString": {
          "61": [
            2141,
            2151,
            false
          ]
        }
      }
    },
    "statements": {
      "3": {
        "Address.isContract": {
          "46": [
            8038,
            8053
          ]
        },
        "Context._msgSender": {
          "8": [
            4306,
            4323
          ]
        },
        "ERC165.supportsInterface": {
          "2": [
            17652,
            17699
          ]
        },
        "ERC721._approve": {
          "24": [
            34065,
            34094
          ],
          "25": [
            34104,
            34155
          ]
        },
        "ERC721._baseURI": {
          "22": [
            26445,
            26454
          ]
        },
        "ERC721._checkOnERC721Received": {
          "47": [
            35643,
            35703
          ],
          "48": [
            35477,
            35535
          ],
          "49": [
            35907,
            35918
          ]
        },
        "ERC721._exists": {
          "4": [
            30221,
            30258
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "26": [
            30532,
            30605
          ],
          "27": [
            30664,
            30760
          ]
        },
        "ERC721._safeTransfer": {
          "38": [
            29681,
            29709
          ],
          "39": [
            29719,
            29830
          ]
        },
        "ERC721._setApprovalForAll": {
          "35": [
            34430,
            34485
          ],
          "36": [
            34495,
            34541
          ],
          "37": [
            34551,
            34597
          ]
        },
        "ERC721._transfer": {
          "28": [
            33439,
            33524
          ],
          "29": [
            33534,
            33599
          ],
          "30": [
            33711,
            33740
          ],
          "31": [
            33751,
            33771
          ],
          "32": [
            33781,
            33799
          ],
          "33": [
            33809,
            33830
          ],
          "34": [
            33841,
            33873
          ]
        },
        "ERC721.approve": {
          "7": [
            26647,
            26704
          ],
          "9": [
            26715,
            26880
          ],
          "10": [
            26891,
            26912
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            25001,
            25075
          ],
          "16": [
            25085,
            25108
          ]
        },
        "ERC721.getApproved": {
          "5": [
            27075,
            27148
          ],
          "6": [
            27159,
            27190
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            27596,
            27638
          ]
        },
        "ERC721.name": {
          "3": [
            25548,
            25560
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            25305,
            25378
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            28236,
            28275
          ],
          "19": [
            28509,
            28612
          ],
          "20": [
            28622,
            28661
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            27358,
            27410
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            24669,
            24844
          ]
        },
        "ERC721.symbol": {
          "17": [
            25712,
            25726
          ]
        },
        "ERC721.tokenURI": {
          "21": [
            25897,
            25973
          ],
          "23": [
            26028,
            26121
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            27888,
            27991
          ],
          "12": [
            28002,
            28030
          ]
        },
        "Strings.toString": {
          "40": [
            2167,
            2177
          ],
          "41": [
            2283,
            2291
          ],
          "42": [
            2305,
            2315
          ],
          "43": [
            2417,
            2428
          ],
          "44": [
            2442,
            2498
          ],
          "45": [
            2512,
            2523
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC165",
    "IERC721",
    "IERC721Metadata",
    "IERC721Receiver",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d64565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd9565b61012461011f366004610dec565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e21565b6103a6565b005b61014f61015f366004610e4b565b6104bb565b61014f610172366004610e4b565b6104ec565b610124610185366004610dec565b610507565b61019d610198366004610e87565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610ea2565b610614565b61014f6101d4366004610ef4565b610623565b6101046101e7366004610dec565b61065b565b6100e76101fa366004610fd0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990611003565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590611003565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b81526004016103819061103d565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990611003565b61061f338383610a48565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b81526004016103819061103d565b61065584848484610b16565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b49565b60405160200161072c92919061108e565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b031614806108705750836001600160a01b03166108658461030c565b6001600160a01b0316145b806108a057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b0316146109235760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b0382166109855760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610990600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b99084906110d3565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e79084906110ea565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b218484846108a8565b610b2d84848484610c4a565b6106555760405162461bcd60e51b815260040161038190611102565b606081600003610b705750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b9a5780610b8481611154565b9150610b939050600a83611183565b9150610b74565b60008167ffffffffffffffff811115610bb557610bb5610ede565b6040519080825280601f01601f191660200182016040528015610bdf576020820181803683370190505b5090505b84156108a057610bf46001836110d3565b9150610c01600a86611197565b610c0c9060306110ea565b60f81b818381518110610c2157610c216111ab565b60200101906001600160f81b031916908160001a905350610c43600a86611183565b9450610be3565b60006001600160a01b0384163b15610d4057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8e9033908990889088906004016111c1565b6020604051808303816000875af1925050508015610cc9575060408051601f3d908101601f19168201909252610cc6918101906111fe565b60015b610d26573d808015610cf7576040519150601f19603f3d011682016040523d82523d6000602084013e610cfc565b606091505b508051600003610d1e5760405162461bcd60e51b815260040161038190611102565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d6157600080fd5b50565b600060208284031215610d7657600080fd5b813561073c81610d4b565b60005b83811015610d9c578181015183820152602001610d84565b838111156106555750506000910152565b60008151808452610dc5816020860160208601610d81565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610dad565b600060208284031215610dfe57600080fd5b5035919050565b80356001600160a01b0381168114610e1c57600080fd5b919050565b60008060408385031215610e3457600080fd5b610e3d83610e05565b946020939093013593505050565b600080600060608486031215610e6057600080fd5b610e6984610e05565b9250610e7760208501610e05565b9150604084013590509250925092565b600060208284031215610e9957600080fd5b61073c82610e05565b60008060408385031215610eb557600080fd5b610ebe83610e05565b915060208301358015158114610ed357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0a57600080fd5b610f1385610e05565b9350610f2160208601610e05565b925060408501359150606085013567ffffffffffffffff80821115610f4557600080fd5b818701915087601f830112610f5957600080fd5b813581811115610f6b57610f6b610ede565b604051601f8201601f19908116603f01168101908382118183101715610f9357610f93610ede565b816040528281528a6020848701011115610fac57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fe357600080fd5b610fec83610e05565b9150610ffa60208401610e05565b90509250929050565b600181811c9082168061101757607f821691505b60208210810361103757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600083516110a0818460208801610d81565b8351908301906110b4818360208801610d81565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e5576110e56110bd565b500390565b600082198211156110fd576110fd6110bd565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611166576111666110bd565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111925761119261116d565b500490565b6000826111a6576111a661116d565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f490830184610dad565b9695505050505050565b60006020828403121561121057600080fd5b815161073c81610d4b56fea2646970667358221220938cc062ec60b94d43bff5c11efd6e8b3be5cbdde453e170ef680f0d9dbcff6864736f6c634300080d0033",
  "deployedSourceMap": "23609:13006:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24551:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:4;;558:22;540:41;;528:2;513:18;24551:300:3;;;;;;;;25469:98;;;:::i;:::-;;;;;;;:::i;26980:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:4;;;1674:51;;1662:2;1647:18;26980:217:3;1528:203:4;26518:401:3;;;;;;:::i;:::-;;:::i;:::-;;27707:330;;;;;;:::i;:::-;;:::i;28103:179::-;;;;;;:::i;:::-;;:::i;25172:235::-;;;;;;:::i;:::-;;:::i;24910:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:4;;;2831:2;2816:18;24910:205:3;2697:177:4;25631:102:3;;;:::i;27264:153::-;;;;;;:::i;:::-;;:::i;28348:320::-;;;;;;:::i;:::-;;:::i;25799:329::-;;;;;;:::i;:::-;;:::i;27483:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;27603:25:3;;;27580:4;27603:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;27483:162;24551:300;24653:4;-1:-1:-1;;;;;;24688:40:3;;-1:-1:-1;;;24688:40:3;;:104;;-1:-1:-1;;;;;;;24744:48:3;;-1:-1:-1;;;24744:48:3;24688:104;:156;;;-1:-1:-1;;;;;;;;;;17659:40:3;;;24808:36;24669:175;24551:300;-1:-1:-1;;24551:300:3:o;25469:98::-;25523:13;25555:5;25548:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25469:98;:::o;26980:217::-;27056:7;30228:16;;;:7;:16;;;;;;-1:-1:-1;;;;;30228:16:3;27075:73;;;;-1:-1:-1;;;27075:73:3;;5358:2:4;27075:73:3;;;5340:21:4;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:4;;;5480:42;5539:19;;27075:73:3;;;;;;;;;-1:-1:-1;27166:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;27166:24:3;;26980:217::o;26518:401::-;26598:13;26614:23;26629:7;26614:14;:23::i;:::-;26598:39;;26661:5;-1:-1:-1;;;;;26655:11:3;:2;-1:-1:-1;;;;;26655:11:3;;26647:57;;;;-1:-1:-1;;;26647:57:3;;5771:2:4;26647:57:3;;;5753:21:4;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:4;;;5893:31;5941:19;;26647:57:3;5569:397:4;26647:57:3;4313:10;-1:-1:-1;;;;;26736:21:3;;;;:62;;-1:-1:-1;26761:37:3;26778:5;4313:10;27483:162;:::i;26761:37::-;26715:165;;;;-1:-1:-1;;;26715:165:3;;6173:2:4;26715:165:3;;;6155:21:4;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;26715:165:3;5971:420:4;26715:165:3;26891:21;26900:2;26904:7;26891:8;:21::i;:::-;26588:331;26518:401;;:::o;27707:330::-;27896:41;4313:10;27929:7;27896:18;:41::i;:::-;27888:103;;;;-1:-1:-1;;;27888:103:3;;;;;;;:::i;:::-;28002:28;28012:4;28018:2;28022:7;28002:9;:28::i;28103:179::-;28236:39;28253:4;28259:2;28263:7;28236:39;;;;;;;;;;;;:16;:39::i;25172:235::-;25244:7;25279:16;;;:7;:16;;;;;;-1:-1:-1;;;;;25279:16:3;;25305:73;;;;-1:-1:-1;;;25305:73:3;;7016:2:4;25305:73:3;;;6998:21:4;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:4;;;7138:39;7194:19;;25305:73:3;6814:405:4;24910:205:3;24982:7;-1:-1:-1;;;;;25009:19:3;;25001:74;;;;-1:-1:-1;;;25001:74:3;;7426:2:4;25001:74:3;;;7408:21:4;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:4;;;7548:40;7605:19;;25001:74:3;7224:406:4;25001:74:3;-1:-1:-1;;;;;;25092:16:3;;;;;:9;:16;;;;;;;24910:205::o;25631:102::-;25687:13;25719:7;25712:14;;;;;:::i;27264:153::-;27358:52;4313:10;27391:8;27401;27358:18;:52::i;:::-;27264:153;;:::o;28348:320::-;28517:41;4313:10;28550:7;28517:18;:41::i;:::-;28509:103;;;;-1:-1:-1;;;28509:103:3;;;;;;;:::i;:::-;28622:39;28636:4;28642:2;28646:7;28655:5;28622:13;:39::i;:::-;28348:320;;;;:::o;25799:329::-;30205:4;30228:16;;;:7;:16;;;;;;25872:13;;-1:-1:-1;;;;;30228:16:3;25897:76;;;;-1:-1:-1;;;25897:76:3;;7837:2:4;25897:76:3;;;7819:21:4;7876:2;7856:18;;;7849:30;7915:34;7895:18;;;7888:62;-1:-1:-1;;;7966:18:4;;;7959:45;8021:19;;25897:76:3;7635:411:4;25897:76:3;25984:21;26008:10;26445:9;;;;;;;;;-1:-1:-1;26445:9:3;;;26369:92;26008:10;25984:34;;26059:1;26041:7;26035:21;:25;:86;;;;;;;;;;;;;;;;;26087:7;26096:18;:7;:16;:18::i;:::-;26070:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26035:86;26028:93;25799:329;-1:-1:-1;;;25799:329:3:o;33991:171::-;34065:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;34065:29:3;-1:-1:-1;;;;;34065:29:3;;;;;;;;:24;;34118:23;34065:24;34118:14;:23::i;:::-;-1:-1:-1;;;;;34109:46:3;;;;;;;;;;;33991:171;;:::o;30423:344::-;30516:4;30228:16;;;:7;:16;;;;;;-1:-1:-1;;;;;30228:16:3;30532:73;;;;-1:-1:-1;;;30532:73:3;;8728:2:4;30532:73:3;;;8710:21:4;8767:2;8747:18;;;8740:30;8806:34;8786:18;;;8779:62;-1:-1:-1;;;8857:18:4;;;8850:42;8909:19;;30532:73:3;8526:408:4;30532:73:3;30615:13;30631:23;30646:7;30631:14;:23::i;:::-;30615:39;;30683:5;-1:-1:-1;;;;;30672:16:3;:7;-1:-1:-1;;;;;30672:16:3;;:51;;;;30716:7;-1:-1:-1;;;;;30692:31:3;:20;30704:7;30692:11;:20::i;:::-;-1:-1:-1;;;;;30692:31:3;;30672:51;:87;;;-1:-1:-1;;;;;;27603:25:3;;;27580:4;27603:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;30727:32;30664:96;30423:344;-1:-1:-1;;;;30423:344:3:o;33320:560::-;33474:4;-1:-1:-1;;;;;33447:31:3;:23;33462:7;33447:14;:23::i;:::-;-1:-1:-1;;;;;33447:31:3;;33439:85;;;;-1:-1:-1;;;33439:85:3;;9141:2:4;33439:85:3;;;9123:21:4;9180:2;9160:18;;;9153:30;9219:34;9199:18;;;9192:62;-1:-1:-1;;;9270:18:4;;;9263:39;9319:19;;33439:85:3;8939:405:4;33439:85:3;-1:-1:-1;;;;;33542:16:3;;33534:65;;;;-1:-1:-1;;;33534:65:3;;9551:2:4;33534:65:3;;;9533:21:4;9590:2;9570:18;;;9563:30;9629:34;9609:18;;;9602:62;-1:-1:-1;;;9680:18:4;;;9673:34;9724:19;;33534:65:3;9349:400:4;33534:65:3;33711:29;33728:1;33732:7;33711:8;:29::i;:::-;-1:-1:-1;;;;;33751:15:3;;;;;;:9;:15;;;;;:20;;33770:1;;33751:15;:20;;33770:1;;33751:20;:::i;:::-;;;;-1:-1:-1;;;;;;;33781:13:3;;;;;;:9;:13;;;;;:18;;33798:1;;33781:13;:18;;33798:1;;33781:18;:::i;:::-;;;;-1:-1:-1;;33809:16:3;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;33809:21:3;-1:-1:-1;;;;;33809:21:3;;;;;;;;;33846:27;;33809:16;;33846:27;;;;;;;33320:560;;;:::o;34297:307::-;34447:8;-1:-1:-1;;;;;34438:17:3;:5;-1:-1:-1;;;;;34438:17:3;;34430:55;;;;-1:-1:-1;;;34430:55:3;;10351:2:4;34430:55:3;;;10333:21:4;10390:2;10370:18;;;10363:30;10429:27;10409:18;;;10402:55;10474:18;;34430:55:3;10149:349:4;34430:55:3;-1:-1:-1;;;;;34495:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;34495:46:3;;;;;;;;;;34556:41;;540::4;;;34556::3;;513:18:4;34556:41:3;;;;;;;34297:307;;;:::o;29530:::-;29681:28;29691:4;29697:2;29701:7;29681:9;:28::i;:::-;29727:48;29750:4;29756:2;29760:7;29769:5;29727:22;:48::i;:::-;29719:111;;;;-1:-1:-1;;;29719:111:3;;;;;;;:::i;1868:703::-;1924:13;2141:5;2150:1;2141:10;2137:51;;-1:-1:-1;;2167:10:3;;;;;;;;;;;;-1:-1:-1;;;2167:10:3;;;;;1868:703::o;2137:51::-;2212:5;2197:12;2251:75;2258:9;;2251:75;;2283:8;;;;:::i;:::-;;-1:-1:-1;2305:10:3;;-1:-1:-1;2313:2:3;2305:10;;:::i;:::-;;;2251:75;;;2335:19;2367:6;2357:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2357:17:3;;2335:39;;2384:150;2391:10;;2384:150;;2417:11;2427:1;2417:11;;:::i;:::-;;-1:-1:-1;2485:10:3;2493:2;2485:5;:10;:::i;:::-;2472:24;;:2;:24;:::i;:::-;2459:39;;2442:6;2449;2442:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;2442:56:3;;;;;;;;-1:-1:-1;2512:11:3;2521:2;2512:11;;:::i;:::-;;;2384:150;;35157:778;35307:4;-1:-1:-1;;;;;35327:13:3;;7999:20;8045:8;35323:606;;35362:72;;-1:-1:-1;;;35362:72:3;;-1:-1:-1;;;;;35362:36:3;;;;;:72;;4313:10;;35413:4;;35419:7;;35428:5;;35362:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35362:72:3;;;;;;;;-1:-1:-1;;35362:72:3;;;;;;;;;;;;:::i;:::-;;;35358:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35601:6;:13;35618:1;35601:18;35597:266;;35643:60;;-1:-1:-1;;;35643:60:3;;;;;;;:::i;35597:266::-;35815:6;35809:13;35800:6;35796:2;35792:15;35785:38;35358:519;-1:-1:-1;;;;;;35484:51:3;-1:-1:-1;;;35484:51:3;;-1:-1:-1;35477:58:3;;35323:606;-1:-1:-1;35914:4:3;35157:778;;;;;;:::o;14:131:4:-;-1:-1:-1;;;;;;88:32:4;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:4;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:4;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:4:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:4;;1343:180;-1:-1:-1;1343:180:4:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:4;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:4:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:4;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:4;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8051:470::-;8230:3;8268:6;8262:13;8284:53;8330:6;8325:3;8318:4;8310:6;8306:17;8284:53;:::i;:::-;8400:13;;8359:16;;;;8422:57;8400:13;8359:16;8456:4;8444:17;;8422:57;:::i;:::-;8495:20;;8051:470;-1:-1:-1;;;;8051:470:4:o;9754:127::-;9815:10;9810:3;9806:20;9803:1;9796:31;9846:4;9843:1;9836:15;9870:4;9867:1;9860:15;9886:125;9926:4;9954:1;9951;9948:8;9945:34;;;9959:18;;:::i;:::-;-1:-1:-1;9996:9:4;;9886:125::o;10016:128::-;10056:3;10087:1;10083:6;10080:1;10077:13;10074:39;;;10093:18;;:::i;:::-;-1:-1:-1;10129:9:4;;10016:128::o;10503:414::-;10705:2;10687:21;;;10744:2;10724:18;;;10717:30;10783:34;10778:2;10763:18;;10756:62;-1:-1:-1;;;10849:2:4;10834:18;;10827:48;10907:3;10892:19;;10503:414::o;10922:135::-;10961:3;10982:17;;;10979:43;;11002:18;;:::i;:::-;-1:-1:-1;11049:1:4;11038:13;;10922:135::o;11062:127::-;11123:10;11118:3;11114:20;11111:1;11104:31;11154:4;11151:1;11144:15;11178:4;11175:1;11168:15;11194:120;11234:1;11260;11250:35;;11265:18;;:::i;:::-;-1:-1:-1;11299:9:4;;11194:120::o;11319:112::-;11351:1;11377;11367:35;;11382:18;;:::i;:::-;-1:-1:-1;11416:9:4;;11319:112::o;11436:127::-;11497:10;11492:3;11488:20;11485:1;11478:31;11528:4;11525:1;11518:15;11552:4;11549:1;11542:15;11568:489;-1:-1:-1;;;;;11837:15:4;;;11819:34;;11889:15;;11884:2;11869:18;;11862:43;11936:2;11921:18;;11914:34;;;11984:3;11979:2;11964:18;;11957:31;;;11762:4;;12005:46;;12031:19;;12023:6;12005:46;:::i;:::-;11997:54;11568:489;-1:-1:-1;;;;;;11568:489:4:o;12062:249::-;12131:6;12184:2;12172:9;12163:7;12159:23;12155:32;12152:52;;;12200:1;12197;12190:12;12152:52;12232:9;12226:16;12251:30;12275:5;12251:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    23609,
    36615
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x1003 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x1003 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43A JUMPI POP PUSH2 0x43A DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 PUSH2 0x743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x623 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x61F CALLER DUP4 DUP4 PUSH2 0xA48 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62D CALLER DUP4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x655 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB16 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73C JUMP JUMPDEST DUP1 PUSH2 0x71B DUP5 PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x778 DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x870 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x865 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x8A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BB DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x985 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x990 PUSH1 0x0 DUP3 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B9 SWAP1 DUP5 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E7 SWAP1 DUP5 SWAP1 PUSH2 0x10EA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB21 DUP5 DUP5 DUP5 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xB2D DUP5 DUP5 DUP5 DUP5 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB70 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB9A JUMPI DUP1 PUSH2 0xB84 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP2 POP PUSH2 0xB93 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1183 JUMP JUMPDEST SWAP2 POP PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB5 JUMPI PUSH2 0xBB5 PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDF JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A0 JUMPI PUSH2 0xBF4 PUSH1 0x1 DUP4 PUSH2 0x10D3 JUMP JUMPDEST SWAP2 POP PUSH2 0xC01 PUSH1 0xA DUP7 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xC0C SWAP1 PUSH1 0x30 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC21 JUMPI PUSH2 0xC21 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC43 PUSH1 0xA DUP7 PUSH2 0x1183 JUMP JUMPDEST SWAP5 POP PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD40 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8E SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC6 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD26 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1102 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73C DUP2 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD9C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD84 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x655 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDC5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3D DUP4 PUSH2 0xE05 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE69 DUP5 PUSH2 0xE05 JUMP JUMPDEST SWAP3 POP PUSH2 0xE77 PUSH1 0x20 DUP6 ADD PUSH2 0xE05 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP3 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBE DUP4 PUSH2 0xE05 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF13 DUP6 PUSH2 0xE05 JUMP JUMPDEST SWAP4 POP PUSH2 0xF21 PUSH1 0x20 DUP7 ADD PUSH2 0xE05 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF6B JUMPI PUSH2 0xF6B PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF93 JUMPI PUSH2 0xF93 PUSH2 0xEDE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFEC DUP4 PUSH2 0xE05 JUMP JUMPDEST SWAP2 POP PUSH2 0xFFA PUSH1 0x20 DUP5 ADD PUSH2 0xE05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1017 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1037 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x10A0 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD81 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10B4 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD81 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E5 JUMPI PUSH2 0x10E5 PUSH2 0x10BD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10FD JUMPI PUSH2 0x10FD PUSH2 0x10BD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1166 JUMPI PUSH2 0x1166 PUSH2 0x10BD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1192 JUMPI PUSH2 0x1192 PUSH2 0x116D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A6 JUMPI PUSH2 0x11A6 PUSH2 0x116D JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F4 SWAP1 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73C DUP2 PUSH2 0xD4B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 DUP13 0xC0 PUSH3 0xEC60B9 0x4D NUMBER 0xBF CREATE2 0xC1 0x1E REVERT PUSH15 0x8B3BE5CBDDE453E170EF680F0D9DBC SELFDESTRUCT PUSH9 0x64736F6C634300080D STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "REVERT",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "REVERT",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "142": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "152": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "153": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "EQ",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "DUP1",
      "path": "3"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        23609,
        36615
      ],
      "op": "REVERT",
      "path": "3"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD64"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        24551,
        24851
      ],
      "op": "JUMP",
      "path": "3"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        24551,
        24851
      ],
      "op": "JUMP",
      "path": "3"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "DUP1",
      "path": "3"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "SUB",
      "path": "3"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "RETURN",
      "path": "3"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        25469,
        25567
      ],
      "op": "JUMP",
      "path": "3"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDD9"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        25469,
        25567
      ],
      "op": "JUMP",
      "path": "3"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDEC"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        26980,
        27197
      ],
      "op": "JUMP",
      "path": "3"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        26980,
        27197
      ],
      "op": "JUMP",
      "path": "3"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE21"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        26518,
        26919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A6"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        26518,
        26919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "STOP",
      "path": "3"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27707,
        28037
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27707,
        28037
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27707,
        28037
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27707,
        28037
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27707,
        28037
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27707,
        28037
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE4B"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        27707,
        28037
      ],
      "op": "JUMP",
      "path": "3"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27707,
        28037
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27707,
        28037
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4BB"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        27707,
        28037
      ],
      "op": "JUMP",
      "path": "3"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28103,
        28282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28103,
        28282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28103,
        28282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28103,
        28282
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28103,
        28282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28103,
        28282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE4B"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        28103,
        28282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28103,
        28282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28103,
        28282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4EC"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        28103,
        28282
      ],
      "op": "JUMP",
      "path": "3"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25172,
        25407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25172,
        25407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25172,
        25407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25172,
        25407
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25172,
        25407
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25172,
        25407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDEC"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        25172,
        25407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25172,
        25407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25172,
        25407
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x507"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        25172,
        25407
      ],
      "op": "JUMP",
      "path": "3"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE87"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        24910,
        25115
      ],
      "op": "JUMP",
      "path": "3"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57E"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        24910,
        25115
      ],
      "op": "JUMP",
      "path": "3"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        25631,
        25733
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        25631,
        25733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        25631,
        25733
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x605"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        25631,
        25733
      ],
      "op": "JUMP",
      "path": "3"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27264,
        27417
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27264,
        27417
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27264,
        27417
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27264,
        27417
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27264,
        27417
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27264,
        27417
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA2"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        27264,
        27417
      ],
      "op": "JUMP",
      "path": "3"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27264,
        27417
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27264,
        27417
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x614"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        27264,
        27417
      ],
      "op": "JUMP",
      "path": "3"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEF4"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        28348,
        28668
      ],
      "op": "JUMP",
      "path": "3"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x623"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        28348,
        28668
      ],
      "op": "JUMP",
      "path": "3"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25799,
        26128
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25799,
        26128
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25799,
        26128
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25799,
        26128
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25799,
        26128
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25799,
        26128
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDEC"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        25799,
        26128
      ],
      "op": "JUMP",
      "path": "3"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25799,
        26128
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25799,
        26128
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x65B"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        25799,
        26128
      ],
      "op": "JUMP",
      "path": "3"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27483,
        27645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27483,
        27645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27483,
        27645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27483,
        27645
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27483,
        27645
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27483,
        27645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFD0"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        27483,
        27645
      ],
      "op": "JUMP",
      "path": "3"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27483,
        27645
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "DUP3",
      "path": "3"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "AND",
      "path": "3"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27580,
        27584
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "DUP2",
      "path": "3"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "DUP2",
      "path": "3"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "DUP1",
      "path": "3"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "DUP4",
      "path": "3"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "AND",
      "path": "3"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "DUP3",
      "path": "3"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "AND",
      "path": "3"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27483,
        27645
      ],
      "op": "JUMP",
      "path": "3"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24653,
        24657
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24688,
        24728
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24688,
        24728
      ],
      "op": "AND",
      "path": "3"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24688,
        24728
      ],
      "op": "EQ",
      "path": "3"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24688,
        24728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24688,
        24792
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24688,
        24792
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24744,
        24792
      ],
      "op": "DUP3",
      "path": "3"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24744,
        24792
      ],
      "op": "AND",
      "path": "3"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24744,
        24792
      ],
      "op": "EQ",
      "path": "3"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24688,
        24792
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24688,
        24844
      ],
      "op": "DUP1",
      "path": "3"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24688,
        24844
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24688,
        24844
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        17659,
        17699
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        17659,
        17699
      ],
      "op": "AND",
      "path": "3"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        17659,
        17699
      ],
      "op": "EQ",
      "path": "3"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24808,
        24844
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24669,
        24844
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        24551,
        24851
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        24551,
        24851
      ],
      "op": "JUMP",
      "path": "3"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        25523,
        25536
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        25555,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1003"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        25548,
        25560
      ],
      "op": "JUMP",
      "path": "3"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "ADD",
      "path": "3"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DIV",
      "path": "3"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "MUL",
      "path": "3"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "ADD",
      "path": "3"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "ADD",
      "path": "3"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "ADD",
      "path": "3"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP3",
      "path": "3"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1003"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        25548,
        25560
      ],
      "op": "JUMP",
      "path": "3"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "LT",
      "path": "3"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP4",
      "path": "3"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DIV",
      "path": "3"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "MUL",
      "path": "3"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP4",
      "path": "3"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "ADD",
      "path": "3"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "JUMP",
      "path": "3"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP3",
      "path": "3"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "ADD",
      "path": "3"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP2",
      "path": "3"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "ADD",
      "path": "3"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "ADD",
      "path": "3"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP1",
      "path": "3"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP4",
      "path": "3"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "GT",
      "path": "3"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP3",
      "path": "3"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SUB",
      "path": "3"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "AND",
      "path": "3"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "DUP3",
      "path": "3"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "ADD",
      "path": "3"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "POP",
      "path": "3"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "POP",
      "path": "3"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "POP",
      "path": "3"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "POP",
      "path": "3"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "POP",
      "path": "3"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        25548,
        25560
      ],
      "op": "POP",
      "path": "3"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        25469,
        25567
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        25469,
        25567
      ],
      "op": "JUMP",
      "path": "3"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        26980,
        27197
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        27056,
        27063
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 4
    },
    "784": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "DUP2",
      "path": "3"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30235
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "791": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "DUP2",
      "path": "3"
    },
    "794": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "AND",
      "path": "3"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 5,
      "value": "0x38A"
    },
    "808": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "DUP2",
      "path": "3"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "823": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "DUP3",
      "path": "3"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "ADD",
      "path": "3"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "DUP1",
      "path": "3"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "SUB",
      "path": "3"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        27075,
        27148
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 6,
      "value": "0x0"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "911": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "DUP2",
      "path": "3"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27181
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "921": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "AND",
      "path": "3"
    },
    "932": {
      "fn": "ERC721.getApproved",
      "offset": [
        27166,
        27190
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        26980,
        27197
      ],
      "op": "JUMP",
      "path": "3"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        26598,
        26611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        26614,
        26637
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        26629,
        26636
      ],
      "op": "DUP3",
      "path": "3"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        26614,
        26628
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x507"
    },
    "944": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        26614,
        26637
      ],
      "op": "JUMP",
      "path": "3"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        26614,
        26637
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        26598,
        26637
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        26598,
        26637
      ],
      "op": "POP",
      "path": "3"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        26661,
        26666
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 7
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        26655,
        26666
      ],
      "op": "AND",
      "path": "3"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        26655,
        26657
      ],
      "op": "DUP4",
      "path": "3"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "ERC721.approve",
      "offset": [
        26655,
        26666
      ],
      "op": "AND",
      "path": "3"
    },
    "968": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        26655,
        26666
      ],
      "op": "SUB",
      "path": "3"
    },
    "969": {
      "fn": "ERC721.approve",
      "offset": [
        26647,
        26704
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x41E"
    },
    "972": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        26647,
        26704
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "973": {
      "fn": "ERC721.approve",
      "offset": [
        26647,
        26704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "975": {
      "fn": "ERC721.approve",
      "offset": [
        26647,
        26704
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "982": {
      "op": "SHL"
    },
    "983": {
      "fn": "ERC721.approve",
      "offset": [
        26647,
        26704
      ],
      "op": "DUP2",
      "path": "3"
    },
    "984": {
      "fn": "ERC721.approve",
      "offset": [
        26647,
        26704
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "987": {
      "fn": "ERC721.approve",
      "offset": [
        26647,
        26704
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "989": {
      "fn": "ERC721.approve",
      "offset": [
        26647,
        26704
      ],
      "op": "DUP3",
      "path": "3"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        26647,
        26704
      ],
      "op": "ADD",
      "path": "3"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "996": {
      "op": "DUP3"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1044": {
      "op": "DUP3"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "op": "MSTORE"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1049": {
      "op": "ADD"
    },
    "1050": {
      "fn": "ERC721.approve",
      "offset": [
        26647,
        26704
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1053": {
      "op": "JUMP"
    },
    "1054": {
      "fn": "ERC721.approve",
      "offset": [
        26647,
        26704
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1055": {
      "fn": "Context._msgSender",
      "offset": [
        4313,
        4323
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 8
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "op": "SUB"
    },
    "1064": {
      "fn": "ERC721.approve",
      "offset": [
        26736,
        26757
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 9
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        26736,
        26757
      ],
      "op": "AND",
      "path": "3"
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        26736,
        26757
      ],
      "op": "EQ",
      "path": "3"
    },
    "1067": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        26736,
        26757
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1068": {
      "fn": "ERC721.approve",
      "offset": [
        26736,
        26798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43A"
    },
    "1071": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        26736,
        26798
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1072": {
      "op": "POP"
    },
    "1073": {
      "fn": "ERC721.approve",
      "offset": [
        26761,
        26798
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43A"
    },
    "1076": {
      "fn": "ERC721.approve",
      "offset": [
        26778,
        26783
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1077": {
      "fn": "Context._msgSender",
      "offset": [
        4313,
        4323
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1078": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27483,
        27645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA"
    },
    "1081": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        27483,
        27645
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1082": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        26761,
        26798
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1083": {
      "fn": "ERC721.approve",
      "offset": [
        26715,
        26880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4AC"
    },
    "1086": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        26715,
        26880
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1087": {
      "fn": "ERC721.approve",
      "offset": [
        26715,
        26880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1089": {
      "fn": "ERC721.approve",
      "offset": [
        26715,
        26880
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        26715,
        26880
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        26715,
        26880
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1101": {
      "fn": "ERC721.approve",
      "offset": [
        26715,
        26880
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        26715,
        26880
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        26715,
        26880
      ],
      "op": "ADD",
      "path": "3"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1110": {
      "op": "DUP3"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "fn": "ERC721.approve",
      "offset": [
        26715,
        26880
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1195": {
      "op": "JUMP"
    },
    "1196": {
      "fn": "ERC721.approve",
      "offset": [
        26715,
        26880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1197": {
      "fn": "ERC721.approve",
      "offset": [
        26891,
        26912
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 10,
      "value": "0x4B6"
    },
    "1200": {
      "fn": "ERC721.approve",
      "offset": [
        26900,
        26902
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        26904,
        26911
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1202": {
      "fn": "ERC721.approve",
      "offset": [
        26891,
        26899
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x743"
    },
    "1205": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        26891,
        26912
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1206": {
      "fn": "ERC721.approve",
      "offset": [
        26891,
        26912
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        26588,
        26919
      ],
      "op": "POP",
      "path": "3"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "POP",
      "path": "3"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        26518,
        26919
      ],
      "op": "POP",
      "path": "3"
    },
    "1210": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        26518,
        26919
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27707,
        28037
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27896,
        27937
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 11,
      "value": "0x4C5"
    },
    "1215": {
      "fn": "Context._msgSender",
      "offset": [
        4313,
        4323
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1216": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27929,
        27936
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27896,
        27914
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B1"
    },
    "1220": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        27896,
        27937
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1221": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        27896,
        27937
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1222": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4E1"
    },
    "1225": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1226": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1235": {
      "op": "SHL"
    },
    "1236": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1240": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "ADD",
      "path": "3"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x103D"
    },
    "1248": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        27888,
        27991
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "offset": [
        27888,
        27991
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28002,
        28030
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0x4B6"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28012,
        28016
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28018,
        28020
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28022,
        28029
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28002,
        28011
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A8"
    },
    "1259": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        28002,
        28030
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1260": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28103,
        28282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1261": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 13,
      "value": "0x4B6"
    },
    "1264": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28253,
        28257
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28259,
        28261
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28263,
        28270
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1269": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1273": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "ADD",
      "path": "3"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1276": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1280": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28275
      ],
      "op": "POP",
      "path": "3"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28236,
        28252
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x623"
    },
    "1286": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        28236,
        28275
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1287": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25172,
        25407
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25244,
        25251
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25295
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25295
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25295
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1295": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1297": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25295
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1300": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25295
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25295
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25295
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "op": "SUB"
    },
    "1311": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25295
      ],
      "op": "AND",
      "path": "3"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25279,
        25295
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1313": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25305,
        25378
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 14,
      "value": "0x274"
    },
    "1316": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25305,
        25378
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1317": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25305,
        25378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1319": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25305,
        25378
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25305,
        25378
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25305,
        25378
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1331": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25305,
        25378
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1333": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25305,
        25378
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25305,
        25378
      ],
      "op": "ADD",
      "path": "3"
    },
    "1335": {
      "op": "MSTORE"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1340": {
      "op": "DUP3"
    },
    "1341": {
      "op": "ADD"
    },
    "1342": {
      "op": "MSTORE"
    },
    "1343": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1378": {
      "op": "DUP3"
    },
    "1379": {
      "op": "ADD"
    },
    "1380": {
      "op": "MSTORE"
    },
    "1381": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1396": {
      "op": "DUP3"
    },
    "1397": {
      "op": "ADD"
    },
    "1398": {
      "op": "MSTORE"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1401": {
      "op": "ADD"
    },
    "1402": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25305,
        25378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1405": {
      "op": "JUMP"
    },
    "1406": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24910,
        25115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        24982,
        24989
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1415": {
      "op": "SHL"
    },
    "1416": {
      "op": "SUB"
    },
    "1417": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25009,
        25028
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 15
    },
    "1418": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        25009,
        25028
      ],
      "op": "AND",
      "path": "3"
    },
    "1419": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25001,
        25075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5E9"
    },
    "1422": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        25001,
        25075
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25001,
        25075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1425": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25001,
        25075
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1426": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1432": {
      "op": "SHL"
    },
    "1433": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25001,
        25075
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25001,
        25075
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1437": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25001,
        25075
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1439": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25001,
        25075
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25001,
        25075
      ],
      "op": "ADD",
      "path": "3"
    },
    "1441": {
      "op": "MSTORE"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1484": {
      "op": "DUP3"
    },
    "1485": {
      "op": "ADD"
    },
    "1486": {
      "op": "MSTORE"
    },
    "1487": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1503": {
      "op": "DUP3"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25001,
        25075
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1512": {
      "op": "JUMP"
    },
    "1513": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25001,
        25075
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1514": {
      "op": "POP"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1521": {
      "op": "SHL"
    },
    "1522": {
      "op": "SUB"
    },
    "1523": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "AND",
      "path": "3",
      "statement": 16
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1526": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25101
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1531": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1533": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1536": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25092,
        25108
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        24910,
        25115
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1541": {
      "fn": "ERC721.symbol",
      "offset": [
        25631,
        25733
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1542": {
      "fn": "ERC721.symbol",
      "offset": [
        25687,
        25700
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1544": {
      "fn": "ERC721.symbol",
      "offset": [
        25719,
        25726
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x1"
    },
    "1546": {
      "fn": "ERC721.symbol",
      "offset": [
        25712,
        25726
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        25712,
        25726
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1548": {
      "fn": "ERC721.symbol",
      "offset": [
        25712,
        25726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x289"
    },
    "1551": {
      "fn": "ERC721.symbol",
      "offset": [
        25712,
        25726
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1552": {
      "fn": "ERC721.symbol",
      "offset": [
        25712,
        25726
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1003"
    },
    "1555": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        25712,
        25726
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1556": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27264,
        27417
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27358,
        27410
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 18,
      "value": "0x61F"
    },
    "1560": {
      "fn": "Context._msgSender",
      "offset": [
        4313,
        4323
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1561": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27391,
        27399
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1562": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27401,
        27409
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1563": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27358,
        27376
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA48"
    },
    "1566": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        27358,
        27410
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27358,
        27410
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27264,
        27417
      ],
      "op": "POP",
      "path": "3"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        27264,
        27417
      ],
      "op": "POP",
      "path": "3"
    },
    "1570": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        27264,
        27417
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1571": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28517,
        28558
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 19,
      "value": "0x62D"
    },
    "1575": {
      "fn": "Context._msgSender",
      "offset": [
        4313,
        4323
      ],
      "op": "CALLER",
      "path": "3"
    },
    "1576": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28550,
        28557
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1577": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28517,
        28535
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7B1"
    },
    "1580": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        28517,
        28558
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1581": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28517,
        28558
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1582": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x649"
    },
    "1585": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1586": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1588": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1597": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1598": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1600": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "ADD",
      "path": "3"
    },
    "1601": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1604": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1605": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x103D"
    },
    "1608": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        28509,
        28612
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1609": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28509,
        28612
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1610": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28622,
        28661
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 20,
      "value": "0x655"
    },
    "1613": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28636,
        28640
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1614": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28642,
        28644
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1615": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28646,
        28653
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1616": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28655,
        28660
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1617": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28622,
        28635
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB16"
    },
    "1620": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        28622,
        28661
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1621": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28622,
        28661
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1622": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "POP",
      "path": "3"
    },
    "1623": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "POP",
      "path": "3"
    },
    "1624": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "POP",
      "path": "3"
    },
    "1625": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28348,
        28668
      ],
      "op": "POP",
      "path": "3"
    },
    "1626": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        28348,
        28668
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1627": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25799,
        26128
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1628": {
      "fn": "ERC721._exists",
      "offset": [
        30205,
        30209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1630": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1631": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1632": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1633": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30235
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1635": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1637": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1638": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1640": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1641": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1642": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1643": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25872,
        25885
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1645": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25872,
        25885
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "op": "SUB"
    },
    "1654": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "AND",
      "path": "3"
    },
    "1655": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25897,
        25973
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 21,
      "value": "0x6DA"
    },
    "1658": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25897,
        25973
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1659": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25897,
        25973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1661": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25897,
        25973
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25897,
        25973
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1670": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25897,
        25973
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1673": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25897,
        25973
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1675": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25897,
        25973
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1676": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25897,
        25973
      ],
      "op": "ADD",
      "path": "3"
    },
    "1677": {
      "op": "MSTORE"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1682": {
      "op": "DUP3"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "MSTORE"
    },
    "1723": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1744": {
      "op": "DUP3"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "MSTORE"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1749": {
      "op": "ADD"
    },
    "1750": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25897,
        25973
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "1753": {
      "op": "JUMP"
    },
    "1754": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25897,
        25973
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25984,
        26005
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1757": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26008,
        26018
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6F1"
    },
    "1760": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 22,
      "value": "0x40"
    },
    "1762": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1763": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1764": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1766": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1767": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "ADD",
      "path": "3"
    },
    "1768": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1769": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1770": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1773": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1774": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1775": {
      "fn": "ERC721._baseURI",
      "offset": [
        26445,
        26454
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1776": {
      "fn": "ERC721._baseURI",
      "offset": [
        26369,
        26461
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1777": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26008,
        26018
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25984,
        26018
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25984,
        26018
      ],
      "op": "POP",
      "path": "3"
    },
    "1780": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26059,
        26060
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 23,
      "value": "0x0"
    },
    "1782": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26041,
        26048
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1783": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26056
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1784": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26060
      ],
      "op": "GT",
      "path": "3"
    },
    "1785": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x711"
    },
    "1788": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1789": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1791": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1792": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1793": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1795": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "ADD",
      "path": "3"
    },
    "1796": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1798": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1800": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1802": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "POP",
      "path": "3"
    },
    "1805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x73C"
    },
    "1808": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1809": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26087,
        26094
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1811": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26096,
        26114
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x71B"
    },
    "1814": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26096,
        26103
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1815": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26096,
        26112
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB49"
    },
    "1818": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        26096,
        26114
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1819": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26096,
        26114
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1820": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1822": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1823": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1825": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "ADD",
      "path": "3"
    },
    "1826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x72C"
    },
    "1829": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1830": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1831": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1832": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x108E"
    },
    "1835": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        26070,
        26115
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1836": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1837": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1839": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1844": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "SUB",
      "path": "3"
    },
    "1845": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "SUB",
      "path": "3"
    },
    "1846": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1847": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1848": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1849": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26070,
        26115
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26035,
        26121
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26028,
        26121
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1854": {
      "fn": "ERC721.tokenURI",
      "offset": [
        25799,
        26128
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1855": {
      "op": "POP"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        25799,
        26128
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1859": {
      "fn": "ERC721._approve",
      "offset": [
        33991,
        34162
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1860": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 24,
      "value": "0x0"
    },
    "1862": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1863": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1864": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1865": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34080
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1867": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1869": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1870": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1872": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1873": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1874": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34094
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1875": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34094
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "op": "SUB"
    },
    "1884": {
      "op": "NOT"
    },
    "1885": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34094
      ],
      "op": "AND",
      "path": "3"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1892": {
      "op": "SHL"
    },
    "1893": {
      "op": "SUB"
    },
    "1894": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34094
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1895": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34094
      ],
      "op": "AND",
      "path": "3"
    },
    "1896": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1897": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34094
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1898": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34094
      ],
      "op": "OR",
      "path": "3"
    },
    "1899": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34094
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1900": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34094
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1901": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34094
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1902": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1903": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1904": {
      "fn": "ERC721._approve",
      "offset": [
        34118,
        34141
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 25,
      "value": "0x778"
    },
    "1907": {
      "fn": "ERC721._approve",
      "offset": [
        34065,
        34089
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1908": {
      "fn": "ERC721._approve",
      "offset": [
        34118,
        34132
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x507"
    },
    "1911": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        34118,
        34141
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1912": {
      "fn": "ERC721._approve",
      "offset": [
        34118,
        34141
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "op": "SUB"
    },
    "1921": {
      "fn": "ERC721._approve",
      "offset": [
        34109,
        34155
      ],
      "op": "AND",
      "path": "3"
    },
    "1922": {
      "fn": "ERC721._approve",
      "offset": [
        34109,
        34155
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1955": {
      "fn": "ERC721._approve",
      "offset": [
        34109,
        34155
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1957": {
      "fn": "ERC721._approve",
      "offset": [
        34109,
        34155
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1958": {
      "fn": "ERC721._approve",
      "offset": [
        34109,
        34155
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1960": {
      "fn": "ERC721._approve",
      "offset": [
        34109,
        34155
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1961": {
      "fn": "ERC721._approve",
      "offset": [
        34109,
        34155
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1962": {
      "fn": "ERC721._approve",
      "offset": [
        34109,
        34155
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1963": {
      "fn": "ERC721._approve",
      "offset": [
        34109,
        34155
      ],
      "op": "SUB",
      "path": "3"
    },
    "1964": {
      "fn": "ERC721._approve",
      "offset": [
        34109,
        34155
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1965": {
      "fn": "ERC721._approve",
      "offset": [
        34109,
        34155
      ],
      "op": "LOG4",
      "path": "3"
    },
    "1966": {
      "fn": "ERC721._approve",
      "offset": [
        33991,
        34162
      ],
      "op": "POP",
      "path": "3"
    },
    "1967": {
      "fn": "ERC721._approve",
      "offset": [
        33991,
        34162
      ],
      "op": "POP",
      "path": "3"
    },
    "1968": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        33991,
        34162
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1969": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30423,
        30767
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1970": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30516,
        30520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1972": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1973": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1974": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1975": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30235
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1977": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1979": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1980": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1982": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1983": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1984": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1991": {
      "op": "SHL"
    },
    "1992": {
      "op": "SUB"
    },
    "1993": {
      "fn": "ERC721._exists",
      "offset": [
        30228,
        30244
      ],
      "op": "AND",
      "path": "3"
    },
    "1994": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30532,
        30605
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 26,
      "value": "0x82A"
    },
    "1997": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30532,
        30605
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1998": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30532,
        30605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2000": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30532,
        30605
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2001": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2007": {
      "op": "SHL"
    },
    "2008": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30532,
        30605
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2009": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30532,
        30605
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2012": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30532,
        30605
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2014": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30532,
        30605
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2015": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30532,
        30605
      ],
      "op": "ADD",
      "path": "3"
    },
    "2016": {
      "op": "MSTORE"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2021": {
      "op": "DUP3"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "op": "MSTORE"
    },
    "2024": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2059": {
      "op": "DUP3"
    },
    "2060": {
      "op": "ADD"
    },
    "2061": {
      "op": "MSTORE"
    },
    "2062": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2077": {
      "op": "SHL"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2080": {
      "op": "DUP3"
    },
    "2081": {
      "op": "ADD"
    },
    "2082": {
      "op": "MSTORE"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2085": {
      "op": "ADD"
    },
    "2086": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30532,
        30605
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "2089": {
      "op": "JUMP"
    },
    "2090": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30532,
        30605
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2091": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30615,
        30628
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2093": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30631,
        30654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x835"
    },
    "2096": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30646,
        30653
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2097": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30631,
        30645
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x507"
    },
    "2100": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        30631,
        30654
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2101": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30631,
        30654
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2102": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30615,
        30654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2103": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30615,
        30654
      ],
      "op": "POP",
      "path": "3"
    },
    "2104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30683,
        30688
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 27
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2111": {
      "op": "SHL"
    },
    "2112": {
      "op": "SUB"
    },
    "2113": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30688
      ],
      "op": "AND",
      "path": "3"
    },
    "2114": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30679
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2121": {
      "op": "SHL"
    },
    "2122": {
      "op": "SUB"
    },
    "2123": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30688
      ],
      "op": "AND",
      "path": "3"
    },
    "2124": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30688
      ],
      "op": "EQ",
      "path": "3"
    },
    "2125": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30723
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2126": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30723
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x870"
    },
    "2129": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30723
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2130": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30723
      ],
      "op": "POP",
      "path": "3"
    },
    "2131": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30716,
        30723
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2138": {
      "op": "SHL"
    },
    "2139": {
      "op": "SUB"
    },
    "2140": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30692,
        30723
      ],
      "op": "AND",
      "path": "3"
    },
    "2141": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30692,
        30712
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x865"
    },
    "2144": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30704,
        30711
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2145": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30692,
        30703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30C"
    },
    "2148": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        30692,
        30712
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2149": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30692,
        30712
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2156": {
      "op": "SHL"
    },
    "2157": {
      "op": "SUB"
    },
    "2158": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30692,
        30723
      ],
      "op": "AND",
      "path": "3"
    },
    "2159": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30692,
        30723
      ],
      "op": "EQ",
      "path": "3"
    },
    "2160": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30723
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2161": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2162": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30759
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A0"
    },
    "2165": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30672,
        30759
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2166": {
      "op": "POP"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2173": {
      "op": "SHL"
    },
    "2174": {
      "op": "SUB"
    },
    "2175": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2176": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2177": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "AND",
      "path": "3"
    },
    "2178": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27580,
        27584
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2180": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2181": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2182": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2183": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27621
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2185": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2187": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2188": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2189": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2190": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2192": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2193": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2194": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27628
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2195": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2196": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2197": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "AND",
      "path": "3"
    },
    "2198": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2199": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2200": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2201": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2202": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2203": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2204": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2205": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "2207": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        27603,
        27638
      ],
      "op": "AND",
      "path": "3"
    },
    "2208": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30727,
        30759
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2209": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30664,
        30760
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2210": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        30423,
        30767
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2211": {
      "op": "POP"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "POP"
    },
    "2215": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        30423,
        30767
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2216": {
      "fn": "ERC721._transfer",
      "offset": [
        33320,
        33880
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        33474,
        33478
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 28
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "op": "SUB"
    },
    "2226": {
      "fn": "ERC721._transfer",
      "offset": [
        33447,
        33478
      ],
      "op": "AND",
      "path": "3"
    },
    "2227": {
      "fn": "ERC721._transfer",
      "offset": [
        33447,
        33470
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8BB"
    },
    "2230": {
      "fn": "ERC721._transfer",
      "offset": [
        33462,
        33469
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2231": {
      "fn": "ERC721._transfer",
      "offset": [
        33447,
        33461
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x507"
    },
    "2234": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        33447,
        33470
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2235": {
      "fn": "ERC721._transfer",
      "offset": [
        33447,
        33470
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2242": {
      "op": "SHL"
    },
    "2243": {
      "op": "SUB"
    },
    "2244": {
      "fn": "ERC721._transfer",
      "offset": [
        33447,
        33478
      ],
      "op": "AND",
      "path": "3"
    },
    "2245": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        33447,
        33478
      ],
      "op": "EQ",
      "path": "3"
    },
    "2246": {
      "fn": "ERC721._transfer",
      "offset": [
        33439,
        33524
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x923"
    },
    "2249": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        33439,
        33524
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2250": {
      "fn": "ERC721._transfer",
      "offset": [
        33439,
        33524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2252": {
      "fn": "ERC721._transfer",
      "offset": [
        33439,
        33524
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2253": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2259": {
      "op": "SHL"
    },
    "2260": {
      "fn": "ERC721._transfer",
      "offset": [
        33439,
        33524
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2261": {
      "fn": "ERC721._transfer",
      "offset": [
        33439,
        33524
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2264": {
      "fn": "ERC721._transfer",
      "offset": [
        33439,
        33524
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2266": {
      "fn": "ERC721._transfer",
      "offset": [
        33439,
        33524
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2267": {
      "fn": "ERC721._transfer",
      "offset": [
        33439,
        33524
      ],
      "op": "ADD",
      "path": "3"
    },
    "2268": {
      "op": "MSTORE"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2273": {
      "op": "DUP3"
    },
    "2274": {
      "op": "ADD"
    },
    "2275": {
      "op": "MSTORE"
    },
    "2276": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2311": {
      "op": "DUP3"
    },
    "2312": {
      "op": "ADD"
    },
    "2313": {
      "op": "MSTORE"
    },
    "2314": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2326": {
      "op": "SHL"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2329": {
      "op": "DUP3"
    },
    "2330": {
      "op": "ADD"
    },
    "2331": {
      "op": "MSTORE"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "fn": "ERC721._transfer",
      "offset": [
        33439,
        33524
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "2338": {
      "op": "JUMP"
    },
    "2339": {
      "fn": "ERC721._transfer",
      "offset": [
        33439,
        33524
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2346": {
      "op": "SHL"
    },
    "2347": {
      "op": "SUB"
    },
    "2348": {
      "fn": "ERC721._transfer",
      "offset": [
        33542,
        33558
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 29
    },
    "2349": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        33542,
        33558
      ],
      "op": "AND",
      "path": "3"
    },
    "2350": {
      "fn": "ERC721._transfer",
      "offset": [
        33534,
        33599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x985"
    },
    "2353": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        33534,
        33599
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2354": {
      "fn": "ERC721._transfer",
      "offset": [
        33534,
        33599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2356": {
      "fn": "ERC721._transfer",
      "offset": [
        33534,
        33599
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2357": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2363": {
      "op": "SHL"
    },
    "2364": {
      "fn": "ERC721._transfer",
      "offset": [
        33534,
        33599
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2365": {
      "fn": "ERC721._transfer",
      "offset": [
        33534,
        33599
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2368": {
      "fn": "ERC721._transfer",
      "offset": [
        33534,
        33599
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2370": {
      "fn": "ERC721._transfer",
      "offset": [
        33534,
        33599
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2371": {
      "fn": "ERC721._transfer",
      "offset": [
        33534,
        33599
      ],
      "op": "ADD",
      "path": "3"
    },
    "2372": {
      "op": "MSTORE"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2375": {
      "op": "DUP1"
    },
    "2376": {
      "op": "DUP3"
    },
    "2377": {
      "op": "ADD"
    },
    "2378": {
      "op": "MSTORE"
    },
    "2379": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2414": {
      "op": "DUP3"
    },
    "2415": {
      "op": "ADD"
    },
    "2416": {
      "op": "MSTORE"
    },
    "2417": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2424": {
      "op": "SHL"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2427": {
      "op": "DUP3"
    },
    "2428": {
      "op": "ADD"
    },
    "2429": {
      "op": "MSTORE"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2432": {
      "op": "ADD"
    },
    "2433": {
      "fn": "ERC721._transfer",
      "offset": [
        33534,
        33599
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "2436": {
      "op": "JUMP"
    },
    "2437": {
      "fn": "ERC721._transfer",
      "offset": [
        33534,
        33599
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2438": {
      "fn": "ERC721._transfer",
      "offset": [
        33711,
        33740
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 30,
      "value": "0x990"
    },
    "2441": {
      "fn": "ERC721._transfer",
      "offset": [
        33728,
        33729
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2443": {
      "fn": "ERC721._transfer",
      "offset": [
        33732,
        33739
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "offset": [
        33711,
        33719
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x743"
    },
    "2447": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        33711,
        33740
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2448": {
      "fn": "ERC721._transfer",
      "offset": [
        33711,
        33740
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2455": {
      "op": "SHL"
    },
    "2456": {
      "op": "SUB"
    },
    "2457": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 31
    },
    "2458": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "AND",
      "path": "3"
    },
    "2459": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2461": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2462": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2463": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2464": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33760
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2466": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2468": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2469": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2471": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2472": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2473": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33771
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2474": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33771
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2475": {
      "fn": "ERC721._transfer",
      "offset": [
        33770,
        33771
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2477": {
      "fn": "ERC721._transfer",
      "offset": [
        33770,
        33771
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2478": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33766
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2479": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33771
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9B9"
    },
    "2482": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33771
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2483": {
      "fn": "ERC721._transfer",
      "offset": [
        33770,
        33771
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2484": {
      "fn": "ERC721._transfer",
      "offset": [
        33770,
        33771
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2485": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33771
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D3"
    },
    "2488": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        33751,
        33771
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2489": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33771
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2490": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33771
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2491": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33771
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2492": {
      "fn": "ERC721._transfer",
      "offset": [
        33751,
        33771
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2493": {
      "op": "POP"
    },
    "2494": {
      "op": "POP"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2501": {
      "op": "SHL"
    },
    "2502": {
      "op": "SUB"
    },
    "2503": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 32
    },
    "2504": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "AND",
      "path": "3"
    },
    "2505": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2507": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2508": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2509": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2510": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33790
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2512": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2514": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2515": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2517": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2518": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2519": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33799
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2520": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33799
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2521": {
      "fn": "ERC721._transfer",
      "offset": [
        33798,
        33799
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2523": {
      "fn": "ERC721._transfer",
      "offset": [
        33798,
        33799
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2524": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33794
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2525": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9E7"
    },
    "2528": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33799
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2529": {
      "fn": "ERC721._transfer",
      "offset": [
        33798,
        33799
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2530": {
      "fn": "ERC721._transfer",
      "offset": [
        33798,
        33799
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2531": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33799
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10EA"
    },
    "2534": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        33781,
        33799
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2535": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33799
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2536": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33799
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2537": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33799
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2538": {
      "fn": "ERC721._transfer",
      "offset": [
        33781,
        33799
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2539": {
      "op": "POP"
    },
    "2540": {
      "op": "POP"
    },
    "2541": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 33,
      "value": "0x0"
    },
    "2543": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2544": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2545": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33816
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2548": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2550": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2553": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2554": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2555": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2556": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2557": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2564": {
      "op": "SHL"
    },
    "2565": {
      "op": "SUB"
    },
    "2566": {
      "op": "NOT"
    },
    "2567": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "AND",
      "path": "3"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2574": {
      "op": "SHL"
    },
    "2575": {
      "op": "SUB"
    },
    "2576": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2577": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2578": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "AND",
      "path": "3"
    },
    "2579": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2580": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2581": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "OR",
      "path": "3"
    },
    "2582": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2583": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2584": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33830
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2585": {
      "fn": "ERC721._transfer",
      "offset": [
        33846,
        33873
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 34
    },
    "2586": {
      "fn": "ERC721._transfer",
      "offset": [
        33846,
        33873
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2587": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2588": {
      "fn": "ERC721._transfer",
      "offset": [
        33809,
        33825
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2589": {
      "fn": "ERC721._transfer",
      "offset": [
        33846,
        33873
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2590": {
      "fn": "ERC721._transfer",
      "offset": [
        33846,
        33873
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2591": {
      "fn": "ERC721._transfer",
      "offset": [
        33846,
        33873
      ],
      "op": "AND",
      "path": "3"
    },
    "2592": {
      "fn": "ERC721._transfer",
      "offset": [
        33846,
        33873
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2593": {
      "fn": "ERC721._transfer",
      "offset": [
        33846,
        33873
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2626": {
      "fn": "ERC721._transfer",
      "offset": [
        33846,
        33873
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2627": {
      "fn": "ERC721._transfer",
      "offset": [
        33846,
        33873
      ],
      "op": "LOG4",
      "path": "3"
    },
    "2628": {
      "fn": "ERC721._transfer",
      "offset": [
        33320,
        33880
      ],
      "op": "POP",
      "path": "3"
    },
    "2629": {
      "fn": "ERC721._transfer",
      "offset": [
        33320,
        33880
      ],
      "op": "POP",
      "path": "3"
    },
    "2630": {
      "fn": "ERC721._transfer",
      "offset": [
        33320,
        33880
      ],
      "op": "POP",
      "path": "3"
    },
    "2631": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        33320,
        33880
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2632": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34297,
        34604
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2633": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34447,
        34455
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 35
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2640": {
      "op": "SHL"
    },
    "2641": {
      "op": "SUB"
    },
    "2642": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34438,
        34455
      ],
      "op": "AND",
      "path": "3"
    },
    "2643": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34438,
        34443
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "op": "SUB"
    },
    "2652": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34438,
        34455
      ],
      "op": "AND",
      "path": "3"
    },
    "2653": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34438,
        34455
      ],
      "op": "SUB",
      "path": "3"
    },
    "2654": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34430,
        34485
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAA9"
    },
    "2657": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34430,
        34485
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2658": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34430,
        34485
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2660": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34430,
        34485
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2667": {
      "op": "SHL"
    },
    "2668": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34430,
        34485
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2669": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34430,
        34485
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2672": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34430,
        34485
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2674": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34430,
        34485
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2675": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34430,
        34485
      ],
      "op": "ADD",
      "path": "3"
    },
    "2676": {
      "op": "MSTORE"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2681": {
      "op": "DUP3"
    },
    "2682": {
      "op": "ADD"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2719": {
      "op": "DUP3"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "op": "MSTORE"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2724": {
      "op": "ADD"
    },
    "2725": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34430,
        34485
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "2728": {
      "op": "JUMP"
    },
    "2729": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34430,
        34485
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "op": "SUB"
    },
    "2738": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 36
    },
    "2739": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2740": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "AND",
      "path": "3"
    },
    "2741": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2743": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2744": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2745": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2746": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34513
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2748": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2750": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2751": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2752": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2753": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2755": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2756": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2757": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34520
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2758": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2759": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2760": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "AND",
      "path": "3"
    },
    "2761": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2762": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2763": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2764": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2765": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2766": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2767": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2768": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2769": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2770": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34530
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2771": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2772": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2775": {
      "op": "NOT"
    },
    "2776": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "AND",
      "path": "3"
    },
    "2777": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2778": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2779": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2780": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2781": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2782": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "OR",
      "path": "3"
    },
    "2783": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2784": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2785": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34495,
        34541
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2786": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34556,
        34597
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 37
    },
    "2787": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34556,
        34597
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2788": {
      "op": "SWAP2"
    },
    "2789": {
      "op": "DUP3"
    },
    "2790": {
      "op": "MSTORE"
    },
    "2791": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34556,
        34597
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2824": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34556,
        34597
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2825": {
      "op": "ADD"
    },
    "2826": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34556,
        34597
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2828": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34556,
        34597
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2829": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34556,
        34597
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2830": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34556,
        34597
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2831": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34556,
        34597
      ],
      "op": "SUB",
      "path": "3"
    },
    "2832": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34556,
        34597
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2833": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34556,
        34597
      ],
      "op": "LOG3",
      "path": "3"
    },
    "2834": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34297,
        34604
      ],
      "op": "POP",
      "path": "3"
    },
    "2835": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34297,
        34604
      ],
      "op": "POP",
      "path": "3"
    },
    "2836": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        34297,
        34604
      ],
      "op": "POP",
      "path": "3"
    },
    "2837": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        34297,
        34604
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2838": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29530,
        29837
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2839": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29681,
        29709
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 38,
      "value": "0xB21"
    },
    "2842": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29691,
        29695
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2843": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29697,
        29699
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2844": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29701,
        29708
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2845": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29681,
        29690
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A8"
    },
    "2848": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        29681,
        29709
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2849": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29681,
        29709
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2850": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29727,
        29775
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 39,
      "value": "0xB2D"
    },
    "2853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29750,
        29754
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2854": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29756,
        29758
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2855": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29760,
        29767
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2856": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29769,
        29774
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2857": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29727,
        29749
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC4A"
    },
    "2860": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        29727,
        29775
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2861": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        29727,
        29775
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2862": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29719,
        29830
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x655"
    },
    "2865": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        29719,
        29830
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2866": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29719,
        29830
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2868": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29719,
        29830
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2875": {
      "op": "SHL"
    },
    "2876": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29719,
        29830
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2877": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29719,
        29830
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2878": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29719,
        29830
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2880": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29719,
        29830
      ],
      "op": "ADD",
      "path": "3"
    },
    "2881": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29719,
        29830
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "2884": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29719,
        29830
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2885": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        29719,
        29830
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1102"
    },
    "2888": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        29719,
        29830
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2889": {
      "fn": "Strings.toString",
      "offset": [
        1868,
        2571
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2890": {
      "fn": "Strings.toString",
      "offset": [
        1924,
        1937
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        2141,
        2146
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2893": {
      "fn": "Strings.toString",
      "offset": [
        2150,
        2151
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2895": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        2141,
        2151
      ],
      "op": "SUB",
      "path": "3"
    },
    "2896": {
      "fn": "Strings.toString",
      "offset": [
        2137,
        2188
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB70"
    },
    "2899": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        2137,
        2188
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2900": {
      "op": "POP"
    },
    "2901": {
      "op": "POP"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 40,
      "value": "0x40"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2905": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "ADD",
      "path": "3"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2910": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2911": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2912": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2915": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2920": {
      "op": "SHL"
    },
    "2921": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "ADD",
      "path": "3"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2926": {
      "fn": "Strings.toString",
      "offset": [
        2167,
        2177
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2927": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        1868,
        2571
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        2137,
        2188
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2929": {
      "fn": "Strings.toString",
      "offset": [
        2212,
        2217
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2930": {
      "fn": "Strings.toString",
      "offset": [
        2197,
        2209
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        2251,
        2326
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        2258,
        2267
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        2258,
        2267
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2935": {
      "fn": "Strings.toString",
      "offset": [
        2251,
        2326
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB9A"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        2251,
        2326
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        2283,
        2291
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 41
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        2283,
        2291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB84"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        2283,
        2291
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2944": {
      "fn": "Strings.toString",
      "offset": [
        2283,
        2291
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1154"
    },
    "2947": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2283,
        2291
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        2283,
        2291
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2949": {
      "fn": "Strings.toString",
      "offset": [
        2283,
        2291
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2950": {
      "op": "POP"
    },
    "2951": {
      "fn": "Strings.toString",
      "offset": [
        2305,
        2315
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 42,
      "value": "0xB93"
    },
    "2954": {
      "fn": "Strings.toString",
      "offset": [
        2305,
        2315
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2955": {
      "op": "POP"
    },
    "2956": {
      "fn": "Strings.toString",
      "offset": [
        2313,
        2315
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        2305,
        2315
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        2305,
        2315
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1183"
    },
    "2962": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2305,
        2315
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2963": {
      "fn": "Strings.toString",
      "offset": [
        2305,
        2315
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        2305,
        2315
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2965": {
      "fn": "Strings.toString",
      "offset": [
        2305,
        2315
      ],
      "op": "POP",
      "path": "3"
    },
    "2966": {
      "fn": "Strings.toString",
      "offset": [
        2251,
        2326
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB74"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        2251,
        2326
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2970": {
      "fn": "Strings.toString",
      "offset": [
        2251,
        2326
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2971": {
      "fn": "Strings.toString",
      "offset": [
        2335,
        2354
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2973": {
      "fn": "Strings.toString",
      "offset": [
        2367,
        2373
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2974": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2984": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "GT",
      "path": "3"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2986": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBB5"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBB5"
    },
    "2993": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEDE"
    },
    "2996": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2357,
        2374
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "ADD",
      "path": "3"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "NOT",
      "path": "3"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "AND",
      "path": "3"
    },
    "3013": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "ADD",
      "path": "3"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "ADD",
      "path": "3"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3021": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3023": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBDF"
    },
    "3026": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3027": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "ADD",
      "path": "3"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3032": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3033": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "3034": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "CALLDATACOPY",
      "path": "3"
    },
    "3036": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "ADD",
      "path": "3"
    },
    "3037": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3038": {
      "op": "POP"
    },
    "3039": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        2357,
        2374
      ],
      "op": "POP",
      "path": "3"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        2335,
        2374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        2335,
        2374
      ],
      "op": "POP",
      "path": "3"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2534
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3044": {
      "fn": "Strings.toString",
      "offset": [
        2391,
        2401
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3045": {
      "fn": "Strings.toString",
      "offset": [
        2391,
        2401
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3046": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A0"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2534
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3050": {
      "fn": "Strings.toString",
      "offset": [
        2417,
        2428
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 43,
      "value": "0xBF4"
    },
    "3053": {
      "fn": "Strings.toString",
      "offset": [
        2427,
        2428
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3055": {
      "fn": "Strings.toString",
      "offset": [
        2417,
        2428
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3056": {
      "fn": "Strings.toString",
      "offset": [
        2417,
        2428
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10D3"
    },
    "3059": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2417,
        2428
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3060": {
      "fn": "Strings.toString",
      "offset": [
        2417,
        2428
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3061": {
      "fn": "Strings.toString",
      "offset": [
        2417,
        2428
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3062": {
      "op": "POP"
    },
    "3063": {
      "fn": "Strings.toString",
      "offset": [
        2485,
        2495
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 44,
      "value": "0xC01"
    },
    "3066": {
      "fn": "Strings.toString",
      "offset": [
        2493,
        2495
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "3068": {
      "fn": "Strings.toString",
      "offset": [
        2485,
        2490
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3069": {
      "fn": "Strings.toString",
      "offset": [
        2485,
        2495
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1197"
    },
    "3072": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2485,
        2495
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3073": {
      "fn": "Strings.toString",
      "offset": [
        2485,
        2495
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3074": {
      "fn": "Strings.toString",
      "offset": [
        2472,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC0C"
    },
    "3077": {
      "fn": "Strings.toString",
      "offset": [
        2472,
        2496
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3078": {
      "fn": "Strings.toString",
      "offset": [
        2472,
        2474
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x30"
    },
    "3080": {
      "fn": "Strings.toString",
      "offset": [
        2472,
        2496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10EA"
    },
    "3083": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2472,
        2496
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3084": {
      "fn": "Strings.toString",
      "offset": [
        2472,
        2496
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3085": {
      "fn": "Strings.toString",
      "offset": [
        2459,
        2498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xF8"
    },
    "3087": {
      "fn": "Strings.toString",
      "offset": [
        2459,
        2498
      ],
      "op": "SHL",
      "path": "3"
    },
    "3088": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2448
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3089": {
      "fn": "Strings.toString",
      "offset": [
        2449,
        2455
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3090": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3091": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3092": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3093": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "LT",
      "path": "3"
    },
    "3094": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC21"
    },
    "3097": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3098": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC21"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11AB"
    },
    "3104": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3105": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3106": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3108": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "3"
    },
    "3109": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2456
      ],
      "op": "ADD",
      "path": "3"
    },
    "3110": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2498
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3117": {
      "op": "SHL"
    },
    "3118": {
      "op": "SUB"
    },
    "3119": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2498
      ],
      "op": "NOT",
      "path": "3"
    },
    "3120": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2498
      ],
      "op": "AND",
      "path": "3"
    },
    "3121": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2498
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3122": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2498
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3123": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3125": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2498
      ],
      "op": "BYTE",
      "path": "3"
    },
    "3126": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2498
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3127": {
      "fn": "Strings.toString",
      "offset": [
        2442,
        2498
      ],
      "op": "MSTORE8",
      "path": "3"
    },
    "3128": {
      "op": "POP"
    },
    "3129": {
      "fn": "Strings.toString",
      "offset": [
        2512,
        2523
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 45,
      "value": "0xC43"
    },
    "3132": {
      "fn": "Strings.toString",
      "offset": [
        2521,
        2523
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA"
    },
    "3134": {
      "fn": "Strings.toString",
      "offset": [
        2512,
        2523
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3135": {
      "fn": "Strings.toString",
      "offset": [
        2512,
        2523
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1183"
    },
    "3138": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2512,
        2523
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3139": {
      "fn": "Strings.toString",
      "offset": [
        2512,
        2523
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3140": {
      "fn": "Strings.toString",
      "offset": [
        2512,
        2523
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3141": {
      "fn": "Strings.toString",
      "offset": [
        2512,
        2523
      ],
      "op": "POP",
      "path": "3"
    },
    "3142": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBE3"
    },
    "3145": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2534
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35157,
        35935
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3147": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35307,
        35311
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3155": {
      "op": "SHL"
    },
    "3156": {
      "op": "SUB"
    },
    "3157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35327,
        35340
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35327,
        35340
      ],
      "op": "AND",
      "path": "3"
    },
    "3159": {
      "fn": "Address.isContract",
      "offset": [
        7999,
        8019
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "3160": {
      "fn": "Address.isContract",
      "offset": [
        8045,
        8053
      ],
      "op": "ISZERO",
      "path": "3",
      "statement": 46
    },
    "3161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35323,
        35929
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD40"
    },
    "3164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35323,
        35929
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3165": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3168": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3175": {
      "op": "SHL"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3184": {
      "op": "SHL"
    },
    "3185": {
      "op": "SUB"
    },
    "3186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35398
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3187": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35398
      ],
      "op": "AND",
      "path": "3"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35398
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35398
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35398
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC8E"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3199": {
      "fn": "Context._msgSender",
      "offset": [
        4313,
        4323
      ],
      "op": "CALLER",
      "path": "3"
    },
    "3200": {
      "fn": "Context._msgSender",
      "offset": [
        4313,
        4323
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35413,
        35417
      ],
      "op": "DUP10",
      "path": "3"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35413,
        35417
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35419,
        35426
      ],
      "op": "DUP9",
      "path": "3"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35419,
        35426
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35428,
        35433
      ],
      "op": "DUP9",
      "path": "3"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35428,
        35433
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "ADD",
      "path": "3"
    },
    "3210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11C1"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        35362,
        35434
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "SUB",
      "path": "3"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "GAS",
      "path": "3"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "CALL",
      "path": "3"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "POP",
      "path": "3"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "POP",
      "path": "3"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "POP",
      "path": "3"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCC9"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3239": {
      "op": "POP"
    },
    "3240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "ADD",
      "path": "3"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3252": {
      "op": "NOT"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "AND",
      "path": "3"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "ADD",
      "path": "3"
    },
    "3256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCC6"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3264": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "ADD",
      "path": "3"
    },
    "3265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11FE"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        35362,
        35434
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35362,
        35434
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD26"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF7"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "POP",
      "path": "3"
    },
    "3291": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "NOT",
      "path": "3"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "ADD",
      "path": "3"
    },
    "3298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "AND",
      "path": "3"
    },
    "3299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "ADD",
      "path": "3"
    },
    "3301": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3305": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3308": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "ADD",
      "path": "3"
    },
    "3314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCFC"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "POP",
      "path": "3"
    },
    "3324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3325": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "POP",
      "path": "3"
    },
    "3326": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35601,
        35607
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35601,
        35614
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3328": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35618,
        35619
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3330": {
      "branch": 62,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35601,
        35619
      ],
      "op": "SUB",
      "path": "3"
    },
    "3331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35597,
        35863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD1E"
    },
    "3334": {
      "branch": 62,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35597,
        35863
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3335": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35643,
        35703
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 47,
      "value": "0x40"
    },
    "3337": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35643,
        35703
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3338": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3344": {
      "op": "SHL"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35643,
        35703
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35643,
        35703
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3347": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35643,
        35703
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3349": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35643,
        35703
      ],
      "op": "ADD",
      "path": "3"
    },
    "3350": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35643,
        35703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x381"
    },
    "3353": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35643,
        35703
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3354": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35643,
        35703
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1102"
    },
    "3357": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        35643,
        35703
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3358": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35597,
        35863
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3359": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35815,
        35821
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35809,
        35822
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35800,
        35806
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3362": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35796,
        35798
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3364": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35792,
        35807
      ],
      "op": "ADD",
      "path": "3"
    },
    "3365": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35785,
        35823
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3366": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35358,
        35877
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3373": {
      "op": "SHL"
    },
    "3374": {
      "op": "SUB"
    },
    "3375": {
      "op": "NOT"
    },
    "3376": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35484,
        35535
      ],
      "op": "AND",
      "path": "3",
      "statement": 48
    },
    "3377": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3384": {
      "op": "SHL"
    },
    "3385": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35484,
        35535
      ],
      "op": "EQ",
      "path": "3"
    },
    "3386": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35484,
        35535
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3387": {
      "op": "POP"
    },
    "3388": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35477,
        35535
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A0"
    },
    "3391": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35477,
        35535
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3392": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35323,
        35929
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3393": {
      "op": "POP"
    },
    "3394": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35914,
        35918
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 49,
      "value": "0x1"
    },
    "3396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35157,
        35935
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3397": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35157,
        35935
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3398": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35157,
        35935
      ],
      "op": "POP",
      "path": "3"
    },
    "3399": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35157,
        35935
      ],
      "op": "POP",
      "path": "3"
    },
    "3400": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35157,
        35935
      ],
      "op": "POP",
      "path": "3"
    },
    "3401": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        35157,
        35935
      ],
      "op": "POP",
      "path": "3"
    },
    "3402": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        35157,
        35935
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3403": {
      "op": "JUMPDEST"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3410": {
      "op": "SHL"
    },
    "3411": {
      "op": "SUB"
    },
    "3412": {
      "op": "NOT"
    },
    "3413": {
      "op": "DUP2"
    },
    "3414": {
      "op": "AND"
    },
    "3415": {
      "op": "DUP2"
    },
    "3416": {
      "op": "EQ"
    },
    "3417": {
      "op": "PUSH2",
      "value": "0xD61"
    },
    "3420": {
      "op": "JUMPI"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3423": {
      "op": "DUP1"
    },
    "3424": {
      "op": "REVERT"
    },
    "3425": {
      "op": "JUMPDEST"
    },
    "3426": {
      "op": "POP"
    },
    "3427": {
      "jump": "o",
      "op": "JUMP"
    },
    "3428": {
      "op": "JUMPDEST"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3433": {
      "op": "DUP3"
    },
    "3434": {
      "op": "DUP5"
    },
    "3435": {
      "op": "SUB"
    },
    "3436": {
      "op": "SLT"
    },
    "3437": {
      "op": "ISZERO"
    },
    "3438": {
      "op": "PUSH2",
      "value": "0xD76"
    },
    "3441": {
      "op": "JUMPI"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3444": {
      "op": "DUP1"
    },
    "3445": {
      "op": "REVERT"
    },
    "3446": {
      "op": "JUMPDEST"
    },
    "3447": {
      "op": "DUP2"
    },
    "3448": {
      "op": "CALLDATALOAD"
    },
    "3449": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "3452": {
      "op": "DUP2"
    },
    "3453": {
      "op": "PUSH2",
      "value": "0xD4B"
    },
    "3456": {
      "jump": "i",
      "op": "JUMP"
    },
    "3457": {
      "op": "JUMPDEST"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3460": {
      "op": "JUMPDEST"
    },
    "3461": {
      "op": "DUP4"
    },
    "3462": {
      "op": "DUP2"
    },
    "3463": {
      "op": "LT"
    },
    "3464": {
      "op": "ISZERO"
    },
    "3465": {
      "op": "PUSH2",
      "value": "0xD9C"
    },
    "3468": {
      "op": "JUMPI"
    },
    "3469": {
      "op": "DUP2"
    },
    "3470": {
      "op": "DUP2"
    },
    "3471": {
      "op": "ADD"
    },
    "3472": {
      "op": "MLOAD"
    },
    "3473": {
      "op": "DUP4"
    },
    "3474": {
      "op": "DUP3"
    },
    "3475": {
      "op": "ADD"
    },
    "3476": {
      "op": "MSTORE"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3479": {
      "op": "ADD"
    },
    "3480": {
      "op": "PUSH2",
      "value": "0xD84"
    },
    "3483": {
      "op": "JUMP"
    },
    "3484": {
      "op": "JUMPDEST"
    },
    "3485": {
      "op": "DUP4"
    },
    "3486": {
      "op": "DUP2"
    },
    "3487": {
      "op": "GT"
    },
    "3488": {
      "op": "ISZERO"
    },
    "3489": {
      "op": "PUSH2",
      "value": "0x655"
    },
    "3492": {
      "op": "JUMPI"
    },
    "3493": {
      "op": "POP"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3497": {
      "op": "SWAP2"
    },
    "3498": {
      "op": "ADD"
    },
    "3499": {
      "op": "MSTORE"
    },
    "3500": {
      "jump": "o",
      "op": "JUMP"
    },
    "3501": {
      "op": "JUMPDEST"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3504": {
      "op": "DUP2"
    },
    "3505": {
      "op": "MLOAD"
    },
    "3506": {
      "op": "DUP1"
    },
    "3507": {
      "op": "DUP5"
    },
    "3508": {
      "op": "MSTORE"
    },
    "3509": {
      "op": "PUSH2",
      "value": "0xDC5"
    },
    "3512": {
      "op": "DUP2"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3515": {
      "op": "DUP7"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3519": {
      "op": "DUP7"
    },
    "3520": {
      "op": "ADD"
    },
    "3521": {
      "op": "PUSH2",
      "value": "0xD81"
    },
    "3524": {
      "jump": "i",
      "op": "JUMP"
    },
    "3525": {
      "op": "JUMPDEST"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3531": {
      "op": "NOT"
    },
    "3532": {
      "op": "AND"
    },
    "3533": {
      "op": "SWAP3"
    },
    "3534": {
      "op": "SWAP1"
    },
    "3535": {
      "op": "SWAP3"
    },
    "3536": {
      "op": "ADD"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3539": {
      "op": "ADD"
    },
    "3540": {
      "op": "SWAP3"
    },
    "3541": {
      "op": "SWAP2"
    },
    "3542": {
      "op": "POP"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "jump": "o",
      "op": "JUMP"
    },
    "3545": {
      "op": "JUMPDEST"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3548": {
      "op": "DUP2"
    },
    "3549": {
      "op": "MSTORE"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3552": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3557": {
      "op": "DUP4"
    },
    "3558": {
      "op": "ADD"
    },
    "3559": {
      "op": "DUP5"
    },
    "3560": {
      "op": "PUSH2",
      "value": "0xDAD"
    },
    "3563": {
      "jump": "i",
      "op": "JUMP"
    },
    "3564": {
      "op": "JUMPDEST"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3569": {
      "op": "DUP3"
    },
    "3570": {
      "op": "DUP5"
    },
    "3571": {
      "op": "SUB"
    },
    "3572": {
      "op": "SLT"
    },
    "3573": {
      "op": "ISZERO"
    },
    "3574": {
      "op": "PUSH2",
      "value": "0xDFE"
    },
    "3577": {
      "op": "JUMPI"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3580": {
      "op": "DUP1"
    },
    "3581": {
      "op": "REVERT"
    },
    "3582": {
      "op": "JUMPDEST"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "op": "CALLDATALOAD"
    },
    "3585": {
      "op": "SWAP2"
    },
    "3586": {
      "op": "SWAP1"
    },
    "3587": {
      "op": "POP"
    },
    "3588": {
      "jump": "o",
      "op": "JUMP"
    },
    "3589": {
      "op": "JUMPDEST"
    },
    "3590": {
      "op": "DUP1"
    },
    "3591": {
      "op": "CALLDATALOAD"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3598": {
      "op": "SHL"
    },
    "3599": {
      "op": "SUB"
    },
    "3600": {
      "op": "DUP2"
    },
    "3601": {
      "op": "AND"
    },
    "3602": {
      "op": "DUP2"
    },
    "3603": {
      "op": "EQ"
    },
    "3604": {
      "op": "PUSH2",
      "value": "0xE1C"
    },
    "3607": {
      "op": "JUMPI"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3610": {
      "op": "DUP1"
    },
    "3611": {
      "op": "REVERT"
    },
    "3612": {
      "op": "JUMPDEST"
    },
    "3613": {
      "op": "SWAP2"
    },
    "3614": {
      "op": "SWAP1"
    },
    "3615": {
      "op": "POP"
    },
    "3616": {
      "jump": "o",
      "op": "JUMP"
    },
    "3617": {
      "op": "JUMPDEST"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3620": {
      "op": "DUP1"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3623": {
      "op": "DUP4"
    },
    "3624": {
      "op": "DUP6"
    },
    "3625": {
      "op": "SUB"
    },
    "3626": {
      "op": "SLT"
    },
    "3627": {
      "op": "ISZERO"
    },
    "3628": {
      "op": "PUSH2",
      "value": "0xE34"
    },
    "3631": {
      "op": "JUMPI"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3634": {
      "op": "DUP1"
    },
    "3635": {
      "op": "REVERT"
    },
    "3636": {
      "op": "JUMPDEST"
    },
    "3637": {
      "op": "PUSH2",
      "value": "0xE3D"
    },
    "3640": {
      "op": "DUP4"
    },
    "3641": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3644": {
      "jump": "i",
      "op": "JUMP"
    },
    "3645": {
      "op": "JUMPDEST"
    },
    "3646": {
      "op": "SWAP5"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3649": {
      "op": "SWAP4"
    },
    "3650": {
      "op": "SWAP1"
    },
    "3651": {
      "op": "SWAP4"
    },
    "3652": {
      "op": "ADD"
    },
    "3653": {
      "op": "CALLDATALOAD"
    },
    "3654": {
      "op": "SWAP4"
    },
    "3655": {
      "op": "POP"
    },
    "3656": {
      "op": "POP"
    },
    "3657": {
      "op": "POP"
    },
    "3658": {
      "jump": "o",
      "op": "JUMP"
    },
    "3659": {
      "op": "JUMPDEST"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3662": {
      "op": "DUP1"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3667": {
      "op": "DUP5"
    },
    "3668": {
      "op": "DUP7"
    },
    "3669": {
      "op": "SUB"
    },
    "3670": {
      "op": "SLT"
    },
    "3671": {
      "op": "ISZERO"
    },
    "3672": {
      "op": "PUSH2",
      "value": "0xE60"
    },
    "3675": {
      "op": "JUMPI"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3678": {
      "op": "DUP1"
    },
    "3679": {
      "op": "REVERT"
    },
    "3680": {
      "op": "JUMPDEST"
    },
    "3681": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3684": {
      "op": "DUP5"
    },
    "3685": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3688": {
      "jump": "i",
      "op": "JUMP"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "SWAP3"
    },
    "3691": {
      "op": "POP"
    },
    "3692": {
      "op": "PUSH2",
      "value": "0xE77"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3697": {
      "op": "DUP6"
    },
    "3698": {
      "op": "ADD"
    },
    "3699": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3702": {
      "jump": "i",
      "op": "JUMP"
    },
    "3703": {
      "op": "JUMPDEST"
    },
    "3704": {
      "op": "SWAP2"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3708": {
      "op": "DUP5"
    },
    "3709": {
      "op": "ADD"
    },
    "3710": {
      "op": "CALLDATALOAD"
    },
    "3711": {
      "op": "SWAP1"
    },
    "3712": {
      "op": "POP"
    },
    "3713": {
      "op": "SWAP3"
    },
    "3714": {
      "op": "POP"
    },
    "3715": {
      "op": "SWAP3"
    },
    "3716": {
      "op": "POP"
    },
    "3717": {
      "op": "SWAP3"
    },
    "3718": {
      "jump": "o",
      "op": "JUMP"
    },
    "3719": {
      "op": "JUMPDEST"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3724": {
      "op": "DUP3"
    },
    "3725": {
      "op": "DUP5"
    },
    "3726": {
      "op": "SUB"
    },
    "3727": {
      "op": "SLT"
    },
    "3728": {
      "op": "ISZERO"
    },
    "3729": {
      "op": "PUSH2",
      "value": "0xE99"
    },
    "3732": {
      "op": "JUMPI"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3735": {
      "op": "DUP1"
    },
    "3736": {
      "op": "REVERT"
    },
    "3737": {
      "op": "JUMPDEST"
    },
    "3738": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "3741": {
      "op": "DUP3"
    },
    "3742": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3745": {
      "jump": "i",
      "op": "JUMP"
    },
    "3746": {
      "op": "JUMPDEST"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3749": {
      "op": "DUP1"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3752": {
      "op": "DUP4"
    },
    "3753": {
      "op": "DUP6"
    },
    "3754": {
      "op": "SUB"
    },
    "3755": {
      "op": "SLT"
    },
    "3756": {
      "op": "ISZERO"
    },
    "3757": {
      "op": "PUSH2",
      "value": "0xEB5"
    },
    "3760": {
      "op": "JUMPI"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3763": {
      "op": "DUP1"
    },
    "3764": {
      "op": "REVERT"
    },
    "3765": {
      "op": "JUMPDEST"
    },
    "3766": {
      "op": "PUSH2",
      "value": "0xEBE"
    },
    "3769": {
      "op": "DUP4"
    },
    "3770": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3773": {
      "jump": "i",
      "op": "JUMP"
    },
    "3774": {
      "op": "JUMPDEST"
    },
    "3775": {
      "op": "SWAP2"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3779": {
      "op": "DUP4"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "CALLDATALOAD"
    },
    "3782": {
      "op": "DUP1"
    },
    "3783": {
      "op": "ISZERO"
    },
    "3784": {
      "op": "ISZERO"
    },
    "3785": {
      "op": "DUP2"
    },
    "3786": {
      "op": "EQ"
    },
    "3787": {
      "op": "PUSH2",
      "value": "0xED3"
    },
    "3790": {
      "op": "JUMPI"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3793": {
      "op": "DUP1"
    },
    "3794": {
      "op": "REVERT"
    },
    "3795": {
      "op": "JUMPDEST"
    },
    "3796": {
      "op": "DUP1"
    },
    "3797": {
      "op": "SWAP2"
    },
    "3798": {
      "op": "POP"
    },
    "3799": {
      "op": "POP"
    },
    "3800": {
      "op": "SWAP3"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "op": "SWAP3"
    },
    "3803": {
      "op": "SWAP1"
    },
    "3804": {
      "op": "POP"
    },
    "3805": {
      "jump": "o",
      "op": "JUMP"
    },
    "3806": {
      "op": "JUMPDEST"
    },
    "3807": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3814": {
      "op": "SHL"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3817": {
      "op": "MSTORE"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3822": {
      "op": "MSTORE"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3827": {
      "op": "REVERT"
    },
    "3828": {
      "op": "JUMPDEST"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3831": {
      "op": "DUP1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3834": {
      "op": "DUP1"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3837": {
      "op": "DUP6"
    },
    "3838": {
      "op": "DUP8"
    },
    "3839": {
      "op": "SUB"
    },
    "3840": {
      "op": "SLT"
    },
    "3841": {
      "op": "ISZERO"
    },
    "3842": {
      "op": "PUSH2",
      "value": "0xF0A"
    },
    "3845": {
      "op": "JUMPI"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3848": {
      "op": "DUP1"
    },
    "3849": {
      "op": "REVERT"
    },
    "3850": {
      "op": "JUMPDEST"
    },
    "3851": {
      "op": "PUSH2",
      "value": "0xF13"
    },
    "3854": {
      "op": "DUP6"
    },
    "3855": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3858": {
      "jump": "i",
      "op": "JUMP"
    },
    "3859": {
      "op": "JUMPDEST"
    },
    "3860": {
      "op": "SWAP4"
    },
    "3861": {
      "op": "POP"
    },
    "3862": {
      "op": "PUSH2",
      "value": "0xF21"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3867": {
      "op": "DUP7"
    },
    "3868": {
      "op": "ADD"
    },
    "3869": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3872": {
      "jump": "i",
      "op": "JUMP"
    },
    "3873": {
      "op": "JUMPDEST"
    },
    "3874": {
      "op": "SWAP3"
    },
    "3875": {
      "op": "POP"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3878": {
      "op": "DUP6"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "op": "CALLDATALOAD"
    },
    "3881": {
      "op": "SWAP2"
    },
    "3882": {
      "op": "POP"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3885": {
      "op": "DUP6"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "CALLDATALOAD"
    },
    "3888": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3897": {
      "op": "DUP1"
    },
    "3898": {
      "op": "DUP3"
    },
    "3899": {
      "op": "GT"
    },
    "3900": {
      "op": "ISZERO"
    },
    "3901": {
      "op": "PUSH2",
      "value": "0xF45"
    },
    "3904": {
      "op": "JUMPI"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3907": {
      "op": "DUP1"
    },
    "3908": {
      "op": "REVERT"
    },
    "3909": {
      "op": "JUMPDEST"
    },
    "3910": {
      "op": "DUP2"
    },
    "3911": {
      "op": "DUP8"
    },
    "3912": {
      "op": "ADD"
    },
    "3913": {
      "op": "SWAP2"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "op": "DUP8"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3918": {
      "op": "DUP4"
    },
    "3919": {
      "op": "ADD"
    },
    "3920": {
      "op": "SLT"
    },
    "3921": {
      "op": "PUSH2",
      "value": "0xF59"
    },
    "3924": {
      "op": "JUMPI"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3927": {
      "op": "DUP1"
    },
    "3928": {
      "op": "REVERT"
    },
    "3929": {
      "op": "JUMPDEST"
    },
    "3930": {
      "op": "DUP2"
    },
    "3931": {
      "op": "CALLDATALOAD"
    },
    "3932": {
      "op": "DUP2"
    },
    "3933": {
      "op": "DUP2"
    },
    "3934": {
      "op": "GT"
    },
    "3935": {
      "op": "ISZERO"
    },
    "3936": {
      "op": "PUSH2",
      "value": "0xF6B"
    },
    "3939": {
      "op": "JUMPI"
    },
    "3940": {
      "op": "PUSH2",
      "value": "0xF6B"
    },
    "3943": {
      "op": "PUSH2",
      "value": "0xEDE"
    },
    "3946": {
      "jump": "i",
      "op": "JUMP"
    },
    "3947": {
      "op": "JUMPDEST"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3950": {
      "op": "MLOAD"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3953": {
      "op": "DUP3"
    },
    "3954": {
      "op": "ADD"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3957": {
      "op": "NOT"
    },
    "3958": {
      "op": "SWAP1"
    },
    "3959": {
      "op": "DUP2"
    },
    "3960": {
      "op": "AND"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3963": {
      "op": "ADD"
    },
    "3964": {
      "op": "AND"
    },
    "3965": {
      "op": "DUP2"
    },
    "3966": {
      "op": "ADD"
    },
    "3967": {
      "op": "SWAP1"
    },
    "3968": {
      "op": "DUP4"
    },
    "3969": {
      "op": "DUP3"
    },
    "3970": {
      "op": "GT"
    },
    "3971": {
      "op": "DUP2"
    },
    "3972": {
      "op": "DUP4"
    },
    "3973": {
      "op": "LT"
    },
    "3974": {
      "op": "OR"
    },
    "3975": {
      "op": "ISZERO"
    },
    "3976": {
      "op": "PUSH2",
      "value": "0xF93"
    },
    "3979": {
      "op": "JUMPI"
    },
    "3980": {
      "op": "PUSH2",
      "value": "0xF93"
    },
    "3983": {
      "op": "PUSH2",
      "value": "0xEDE"
    },
    "3986": {
      "jump": "i",
      "op": "JUMP"
    },
    "3987": {
      "op": "JUMPDEST"
    },
    "3988": {
      "op": "DUP2"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3991": {
      "op": "MSTORE"
    },
    "3992": {
      "op": "DUP3"
    },
    "3993": {
      "op": "DUP2"
    },
    "3994": {
      "op": "MSTORE"
    },
    "3995": {
      "op": "DUP11"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3998": {
      "op": "DUP5"
    },
    "3999": {
      "op": "DUP8"
    },
    "4000": {
      "op": "ADD"
    },
    "4001": {
      "op": "ADD"
    },
    "4002": {
      "op": "GT"
    },
    "4003": {
      "op": "ISZERO"
    },
    "4004": {
      "op": "PUSH2",
      "value": "0xFAC"
    },
    "4007": {
      "op": "JUMPI"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4010": {
      "op": "DUP1"
    },
    "4011": {
      "op": "REVERT"
    },
    "4012": {
      "op": "JUMPDEST"
    },
    "4013": {
      "op": "DUP3"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4016": {
      "op": "DUP7"
    },
    "4017": {
      "op": "ADD"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4020": {
      "op": "DUP4"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "CALLDATACOPY"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4027": {
      "op": "DUP5"
    },
    "4028": {
      "op": "DUP4"
    },
    "4029": {
      "op": "ADD"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "op": "MSTORE"
    },
    "4032": {
      "op": "DUP1"
    },
    "4033": {
      "op": "SWAP6"
    },
    "4034": {
      "op": "POP"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "op": "POP"
    },
    "4037": {
      "op": "POP"
    },
    "4038": {
      "op": "POP"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "op": "SWAP3"
    },
    "4041": {
      "op": "SWAP6"
    },
    "4042": {
      "op": "SWAP2"
    },
    "4043": {
      "op": "SWAP5"
    },
    "4044": {
      "op": "POP"
    },
    "4045": {
      "op": "SWAP3"
    },
    "4046": {
      "op": "POP"
    },
    "4047": {
      "jump": "o",
      "op": "JUMP"
    },
    "4048": {
      "op": "JUMPDEST"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4051": {
      "op": "DUP1"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4054": {
      "op": "DUP4"
    },
    "4055": {
      "op": "DUP6"
    },
    "4056": {
      "op": "SUB"
    },
    "4057": {
      "op": "SLT"
    },
    "4058": {
      "op": "ISZERO"
    },
    "4059": {
      "op": "PUSH2",
      "value": "0xFE3"
    },
    "4062": {
      "op": "JUMPI"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4065": {
      "op": "DUP1"
    },
    "4066": {
      "op": "REVERT"
    },
    "4067": {
      "op": "JUMPDEST"
    },
    "4068": {
      "op": "PUSH2",
      "value": "0xFEC"
    },
    "4071": {
      "op": "DUP4"
    },
    "4072": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "4075": {
      "jump": "i",
      "op": "JUMP"
    },
    "4076": {
      "op": "JUMPDEST"
    },
    "4077": {
      "op": "SWAP2"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "op": "PUSH2",
      "value": "0xFFA"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4084": {
      "op": "DUP5"
    },
    "4085": {
      "op": "ADD"
    },
    "4086": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "4089": {
      "jump": "i",
      "op": "JUMP"
    },
    "4090": {
      "op": "JUMPDEST"
    },
    "4091": {
      "op": "SWAP1"
    },
    "4092": {
      "op": "POP"
    },
    "4093": {
      "op": "SWAP3"
    },
    "4094": {
      "op": "POP"
    },
    "4095": {
      "op": "SWAP3"
    },
    "4096": {
      "op": "SWAP1"
    },
    "4097": {
      "op": "POP"
    },
    "4098": {
      "jump": "o",
      "op": "JUMP"
    },
    "4099": {
      "op": "JUMPDEST"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4102": {
      "op": "DUP2"
    },
    "4103": {
      "op": "DUP2"
    },
    "4104": {
      "op": "SHR"
    },
    "4105": {
      "op": "SWAP1"
    },
    "4106": {
      "op": "DUP3"
    },
    "4107": {
      "op": "AND"
    },
    "4108": {
      "op": "DUP1"
    },
    "4109": {
      "op": "PUSH2",
      "value": "0x1017"
    },
    "4112": {
      "op": "JUMPI"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4115": {
      "op": "DUP3"
    },
    "4116": {
      "op": "AND"
    },
    "4117": {
      "op": "SWAP2"
    },
    "4118": {
      "op": "POP"
    },
    "4119": {
      "op": "JUMPDEST"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4122": {
      "op": "DUP3"
    },
    "4123": {
      "op": "LT"
    },
    "4124": {
      "op": "DUP2"
    },
    "4125": {
      "op": "SUB"
    },
    "4126": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "4129": {
      "op": "JUMPI"
    },
    "4130": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4140": {
      "op": "MSTORE"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4145": {
      "op": "MSTORE"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4150": {
      "op": "REVERT"
    },
    "4151": {
      "op": "JUMPDEST"
    },
    "4152": {
      "op": "POP"
    },
    "4153": {
      "op": "SWAP2"
    },
    "4154": {
      "op": "SWAP1"
    },
    "4155": {
      "op": "POP"
    },
    "4156": {
      "jump": "o",
      "op": "JUMP"
    },
    "4157": {
      "op": "JUMPDEST"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4160": {
      "op": "DUP1"
    },
    "4161": {
      "op": "DUP3"
    },
    "4162": {
      "op": "MSTORE"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4165": {
      "op": "SWAP1"
    },
    "4166": {
      "op": "DUP3"
    },
    "4167": {
      "op": "ADD"
    },
    "4168": {
      "op": "MSTORE"
    },
    "4169": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4204": {
      "op": "DUP3"
    },
    "4205": {
      "op": "ADD"
    },
    "4206": {
      "op": "MSTORE"
    },
    "4207": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4227": {
      "op": "SHL"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "ADD"
    },
    "4232": {
      "op": "MSTORE"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4235": {
      "op": "ADD"
    },
    "4236": {
      "op": "SWAP1"
    },
    "4237": {
      "jump": "o",
      "op": "JUMP"
    },
    "4238": {
      "op": "JUMPDEST"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4241": {
      "op": "DUP4"
    },
    "4242": {
      "op": "MLOAD"
    },
    "4243": {
      "op": "PUSH2",
      "value": "0x10A0"
    },
    "4246": {
      "op": "DUP2"
    },
    "4247": {
      "op": "DUP5"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4250": {
      "op": "DUP9"
    },
    "4251": {
      "op": "ADD"
    },
    "4252": {
      "op": "PUSH2",
      "value": "0xD81"
    },
    "4255": {
      "jump": "i",
      "op": "JUMP"
    },
    "4256": {
      "op": "JUMPDEST"
    },
    "4257": {
      "op": "DUP4"
    },
    "4258": {
      "op": "MLOAD"
    },
    "4259": {
      "op": "SWAP1"
    },
    "4260": {
      "op": "DUP4"
    },
    "4261": {
      "op": "ADD"
    },
    "4262": {
      "op": "SWAP1"
    },
    "4263": {
      "op": "PUSH2",
      "value": "0x10B4"
    },
    "4266": {
      "op": "DUP2"
    },
    "4267": {
      "op": "DUP4"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4270": {
      "op": "DUP9"
    },
    "4271": {
      "op": "ADD"
    },
    "4272": {
      "op": "PUSH2",
      "value": "0xD81"
    },
    "4275": {
      "jump": "i",
      "op": "JUMP"
    },
    "4276": {
      "op": "JUMPDEST"
    },
    "4277": {
      "op": "ADD"
    },
    "4278": {
      "op": "SWAP5"
    },
    "4279": {
      "op": "SWAP4"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "op": "POP"
    },
    "4282": {
      "op": "POP"
    },
    "4283": {
      "op": "POP"
    },
    "4284": {
      "jump": "o",
      "op": "JUMP"
    },
    "4285": {
      "op": "JUMPDEST"
    },
    "4286": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4293": {
      "op": "SHL"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4296": {
      "op": "MSTORE"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4301": {
      "op": "MSTORE"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4306": {
      "op": "REVERT"
    },
    "4307": {
      "op": "JUMPDEST"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4310": {
      "op": "DUP3"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "LT"
    },
    "4313": {
      "op": "ISZERO"
    },
    "4314": {
      "op": "PUSH2",
      "value": "0x10E5"
    },
    "4317": {
      "op": "JUMPI"
    },
    "4318": {
      "op": "PUSH2",
      "value": "0x10E5"
    },
    "4321": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4324": {
      "jump": "i",
      "op": "JUMP"
    },
    "4325": {
      "op": "JUMPDEST"
    },
    "4326": {
      "op": "POP"
    },
    "4327": {
      "op": "SUB"
    },
    "4328": {
      "op": "SWAP1"
    },
    "4329": {
      "jump": "o",
      "op": "JUMP"
    },
    "4330": {
      "op": "JUMPDEST"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4333": {
      "op": "DUP3"
    },
    "4334": {
      "op": "NOT"
    },
    "4335": {
      "op": "DUP3"
    },
    "4336": {
      "op": "GT"
    },
    "4337": {
      "op": "ISZERO"
    },
    "4338": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "4341": {
      "op": "JUMPI"
    },
    "4342": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4348": {
      "jump": "i",
      "op": "JUMP"
    },
    "4349": {
      "op": "JUMPDEST"
    },
    "4350": {
      "op": "POP"
    },
    "4351": {
      "op": "ADD"
    },
    "4352": {
      "op": "SWAP1"
    },
    "4353": {
      "jump": "o",
      "op": "JUMP"
    },
    "4354": {
      "op": "JUMPDEST"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4357": {
      "op": "DUP1"
    },
    "4358": {
      "op": "DUP3"
    },
    "4359": {
      "op": "MSTORE"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4362": {
      "op": "SWAP1"
    },
    "4363": {
      "op": "DUP3"
    },
    "4364": {
      "op": "ADD"
    },
    "4365": {
      "op": "MSTORE"
    },
    "4366": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4401": {
      "op": "DUP3"
    },
    "4402": {
      "op": "ADD"
    },
    "4403": {
      "op": "MSTORE"
    },
    "4404": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4425": {
      "op": "SHL"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4428": {
      "op": "DUP3"
    },
    "4429": {
      "op": "ADD"
    },
    "4430": {
      "op": "MSTORE"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4433": {
      "op": "ADD"
    },
    "4434": {
      "op": "SWAP1"
    },
    "4435": {
      "jump": "o",
      "op": "JUMP"
    },
    "4436": {
      "op": "JUMPDEST"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4441": {
      "op": "DUP3"
    },
    "4442": {
      "op": "ADD"
    },
    "4443": {
      "op": "PUSH2",
      "value": "0x1166"
    },
    "4446": {
      "op": "JUMPI"
    },
    "4447": {
      "op": "PUSH2",
      "value": "0x1166"
    },
    "4450": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4453": {
      "jump": "i",
      "op": "JUMP"
    },
    "4454": {
      "op": "JUMPDEST"
    },
    "4455": {
      "op": "POP"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4458": {
      "op": "ADD"
    },
    "4459": {
      "op": "SWAP1"
    },
    "4460": {
      "jump": "o",
      "op": "JUMP"
    },
    "4461": {
      "op": "JUMPDEST"
    },
    "4462": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4469": {
      "op": "SHL"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4472": {
      "op": "MSTORE"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4477": {
      "op": "MSTORE"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4482": {
      "op": "REVERT"
    },
    "4483": {
      "op": "JUMPDEST"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4486": {
      "op": "DUP3"
    },
    "4487": {
      "op": "PUSH2",
      "value": "0x1192"
    },
    "4490": {
      "op": "JUMPI"
    },
    "4491": {
      "op": "PUSH2",
      "value": "0x1192"
    },
    "4494": {
      "op": "PUSH2",
      "value": "0x116D"
    },
    "4497": {
      "jump": "i",
      "op": "JUMP"
    },
    "4498": {
      "op": "JUMPDEST"
    },
    "4499": {
      "op": "POP"
    },
    "4500": {
      "op": "DIV"
    },
    "4501": {
      "op": "SWAP1"
    },
    "4502": {
      "jump": "o",
      "op": "JUMP"
    },
    "4503": {
      "op": "JUMPDEST"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4506": {
      "op": "DUP3"
    },
    "4507": {
      "op": "PUSH2",
      "value": "0x11A6"
    },
    "4510": {
      "op": "JUMPI"
    },
    "4511": {
      "op": "PUSH2",
      "value": "0x11A6"
    },
    "4514": {
      "op": "PUSH2",
      "value": "0x116D"
    },
    "4517": {
      "jump": "i",
      "op": "JUMP"
    },
    "4518": {
      "op": "JUMPDEST"
    },
    "4519": {
      "op": "POP"
    },
    "4520": {
      "op": "MOD"
    },
    "4521": {
      "op": "SWAP1"
    },
    "4522": {
      "jump": "o",
      "op": "JUMP"
    },
    "4523": {
      "op": "JUMPDEST"
    },
    "4524": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4531": {
      "op": "SHL"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4534": {
      "op": "MSTORE"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4539": {
      "op": "MSTORE"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4544": {
      "op": "REVERT"
    },
    "4545": {
      "op": "JUMPDEST"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4552": {
      "op": "SHL"
    },
    "4553": {
      "op": "SUB"
    },
    "4554": {
      "op": "DUP6"
    },
    "4555": {
      "op": "DUP2"
    },
    "4556": {
      "op": "AND"
    },
    "4557": {
      "op": "DUP3"
    },
    "4558": {
      "op": "MSTORE"
    },
    "4559": {
      "op": "DUP5"
    },
    "4560": {
      "op": "AND"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4563": {
      "op": "DUP3"
    },
    "4564": {
      "op": "ADD"
    },
    "4565": {
      "op": "MSTORE"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4568": {
      "op": "DUP2"
    },
    "4569": {
      "op": "ADD"
    },
    "4570": {
      "op": "DUP4"
    },
    "4571": {
      "op": "SWAP1"
    },
    "4572": {
      "op": "MSTORE"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4577": {
      "op": "DUP3"
    },
    "4578": {
      "op": "ADD"
    },
    "4579": {
      "op": "DUP2"
    },
    "4580": {
      "op": "SWAP1"
    },
    "4581": {
      "op": "MSTORE"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4584": {
      "op": "SWAP1"
    },
    "4585": {
      "op": "PUSH2",
      "value": "0x11F4"
    },
    "4588": {
      "op": "SWAP1"
    },
    "4589": {
      "op": "DUP4"
    },
    "4590": {
      "op": "ADD"
    },
    "4591": {
      "op": "DUP5"
    },
    "4592": {
      "op": "PUSH2",
      "value": "0xDAD"
    },
    "4595": {
      "jump": "i",
      "op": "JUMP"
    },
    "4596": {
      "op": "JUMPDEST"
    },
    "4597": {
      "op": "SWAP7"
    },
    "4598": {
      "op": "SWAP6"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "POP"
    },
    "4601": {
      "op": "POP"
    },
    "4602": {
      "op": "POP"
    },
    "4603": {
      "op": "POP"
    },
    "4604": {
      "op": "POP"
    },
    "4605": {
      "jump": "o",
      "op": "JUMP"
    },
    "4606": {
      "op": "JUMPDEST"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4611": {
      "op": "DUP3"
    },
    "4612": {
      "op": "DUP5"
    },
    "4613": {
      "op": "SUB"
    },
    "4614": {
      "op": "SLT"
    },
    "4615": {
      "op": "ISZERO"
    },
    "4616": {
      "op": "PUSH2",
      "value": "0x1210"
    },
    "4619": {
      "op": "JUMPI"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4622": {
      "op": "DUP1"
    },
    "4623": {
      "op": "REVERT"
    },
    "4624": {
      "op": "JUMPDEST"
    },
    "4625": {
      "op": "DUP2"
    },
    "4626": {
      "op": "MLOAD"
    },
    "4627": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "4630": {
      "op": "DUP2"
    },
    "4631": {
      "op": "PUSH2",
      "value": "0xD4B"
    },
    "4634": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "ba7a8c5e970e35039834d52545eeac711d7bf49f",
  "source": "/**\n *Submitted for verification at Etherscan.io on 2022-01-07\n*/\n\n// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/utils/Counters.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}",
  "sourceMap": "23609:13006:3:-:0;;;24371:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24437:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;24460:17:3;;;;:7;;:17;;;;;:::i;:::-;;24371:113;;23609:13006;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;23609:13006:3;;;-1:-1:-1;23609:13006:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:4;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:4;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:4;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:4:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:4;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;23609:13006:3;;;;;;",
  "sourcePath": "contracts/libraries.sol",
  "type": "contract"
}