{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/libraries.sol"
  },
  "ast": {
    "absolutePath": "contracts/libraries.sol",
    "exportedSymbols": {
      "Address": [
        1117
      ],
      "Context": [
        718
      ],
      "Counters": [
        495
      ],
      "ERC165": [
        1167
      ],
      "ERC721": [
        2129
      ],
      "IERC165": [
        1145
      ],
      "IERC721": [
        1281
      ],
      "IERC721Metadata": [
        1306
      ],
      "IERC721Receiver": [
        1134
      ],
      "Ownable": [
        821
      ],
      "Strings": [
        697
      ]
    },
    "id": 2130,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 423,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "220:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 424,
          "nodeType": "StructuredDocumentation",
          "src": "247:318:1",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
        },
        "fullyImplemented": true,
        "id": 495,
        "linearizedBaseContracts": [
          495
        ],
        "name": "Counters",
        "nameLocation": "575:8:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Counters.Counter",
            "id": 427,
            "members": [
              {
                "constant": false,
                "id": 426,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "942:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 427,
                "src": "934:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 425,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "934:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "598:7:1",
            "nodeType": "StructDefinition",
            "scope": 495,
            "src": "591:379:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "1052:40:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 435,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 430,
                      "src": "1070:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 426,
                    "src": "1070:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 434,
                  "id": 437,
                  "nodeType": "Return",
                  "src": "1063:21:1"
                }
              ]
            },
            "id": 439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "987:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 430,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1011:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "995:23:1",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 429,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 428,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 427,
                      "src": "995:7:1"
                    },
                    "referencedDeclaration": 427,
                    "src": "995:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "994:25:1"
            },
            "returnParameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "1043:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:9:1"
            },
            "scope": 495,
            "src": "978:114:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 452,
              "nodeType": "Block",
              "src": "1153:74:1",
              "statements": [
                {
                  "id": 451,
                  "nodeType": "UncheckedBlock",
                  "src": "1164:56:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 445,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "1189:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 426,
                          "src": "1189:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1207:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1189:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 450,
                      "nodeType": "ExpressionStatement",
                      "src": "1189:19:1"
                    }
                  ]
                }
              ]
            },
            "id": 453,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1109:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1135:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 453,
                  "src": "1119:23:1",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 441,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 440,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 427,
                      "src": "1119:7:1"
                    },
                    "referencedDeclaration": 427,
                    "src": "1119:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1118:25:1"
            },
            "returnParameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1153:0:1"
            },
            "scope": 495,
            "src": "1100:127:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "1288:182:1",
              "statements": [
                {
                  "assignments": [
                    460
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 460,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1307:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 480,
                      "src": "1299:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 459,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 463,
                  "initialValue": {
                    "expression": {
                      "id": 461,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 456,
                      "src": "1315:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 426,
                    "src": "1315:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1299:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 465,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "1348:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1356:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1348:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1359:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
                          "typeString": "literal_string \"Counter: decrement overflow\""
                        },
                        "value": "Counter: decrement overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
                          "typeString": "literal_string \"Counter: decrement overflow\""
                        }
                      ],
                      "id": 464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1340:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1340:49:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:49:1"
                },
                {
                  "id": 479,
                  "nodeType": "UncheckedBlock",
                  "src": "1400:63:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 471,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "1425:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 426,
                          "src": "1425:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 474,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 460,
                            "src": "1442:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1450:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1442:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1425:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 478,
                      "nodeType": "ExpressionStatement",
                      "src": "1425:26:1"
                    }
                  ]
                }
              ]
            },
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1244:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 456,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1270:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "1254:23:1",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 455,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 454,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 427,
                      "src": "1254:7:1"
                    },
                    "referencedDeclaration": 427,
                    "src": "1254:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1253:25:1"
            },
            "returnParameters": {
              "id": 458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1288:0:1"
            },
            "scope": 495,
            "src": "1235:235:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "1527:37:1",
              "statements": [
                {
                  "expression": {
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 487,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 484,
                        "src": "1538:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 489,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 426,
                      "src": "1538:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1555:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1538:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "1538:18:1"
                }
              ]
            },
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reset",
            "nameLocation": "1487:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1509:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 494,
                  "src": "1493:23:1",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 483,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 482,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 427,
                      "src": "1493:7:1"
                    },
                    "referencedDeclaration": 427,
                    "src": "1493:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$427_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1492:25:1"
            },
            "returnParameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1527:0:1"
            },
            "scope": 495,
            "src": "1478:86:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2130,
        "src": "567:1000:1",
        "usedErrors": []
      },
      {
        "id": 496,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "1683:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Strings",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 497,
          "nodeType": "StructuredDocumentation",
          "src": "1710:36:1",
          "text": " @dev String operations."
        },
        "fullyImplemented": true,
        "id": 697,
        "linearizedBaseContracts": [
          697
        ],
        "name": "Strings",
        "nameLocation": "1756:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 500,
            "mutability": "constant",
            "name": "_HEX_SYMBOLS",
            "nameLocation": "1796:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 697,
            "src": "1771:58:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes16",
              "typeString": "bytes16"
            },
            "typeName": {
              "id": 498,
              "name": "bytes16",
              "nodeType": "ElementaryTypeName",
              "src": "1771:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes16",
                "typeString": "bytes16"
              }
            },
            "value": {
              "hexValue": "30313233343536373839616263646566",
              "id": 499,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1811:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
                "typeString": "literal_string \"0123456789abcdef\""
              },
              "value": "0123456789abcdef"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 578,
              "nodeType": "Block",
              "src": "2007:652:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 508,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "2213:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2222:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2213:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 514,
                  "nodeType": "IfStatement",
                  "src": "2209:53:1",
                  "trueBody": {
                    "id": 513,
                    "nodeType": "Block",
                    "src": "2225:37:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2247:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                            "typeString": "literal_string \"0\""
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 507,
                        "id": 512,
                        "nodeType": "Return",
                        "src": "2240:10:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 516,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "2280:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 578,
                      "src": "2272:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 515,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2272:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 518,
                  "initialValue": {
                    "id": 517,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 503,
                    "src": "2287:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2272:20:1"
                },
                {
                  "assignments": [
                    520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 520,
                      "mutability": "mutable",
                      "name": "digits",
                      "nameLocation": "2311:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 578,
                      "src": "2303:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 519,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2303:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 521,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2303:14:1"
                },
                {
                  "body": {
                    "id": 532,
                    "nodeType": "Block",
                    "src": "2346:60:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2361:8:1",
                          "subExpression": {
                            "id": 525,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "2361:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "2361:8:1"
                      },
                      {
                        "expression": {
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 528,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "2384:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2392:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2384:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 531,
                        "nodeType": "ExpressionStatement",
                        "src": "2384:10:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 522,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 516,
                      "src": "2335:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2343:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2335:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 533,
                  "nodeType": "WhileStatement",
                  "src": "2328:78:1"
                },
                {
                  "assignments": [
                    535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 535,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "2429:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 578,
                      "src": "2416:19:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 534,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2416:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 540,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 538,
                        "name": "digits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "2448:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2438:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 536,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2442:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2416:39:1"
                },
                {
                  "body": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "2485:135:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 544,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "2500:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2510:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "2500:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 547,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:11:1"
                      },
                      {
                        "expression": {
                          "id": 565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 548,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "2526:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 550,
                            "indexExpression": {
                              "id": 549,
                              "name": "digits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "2533:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2526:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 562,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3438",
                                      "id": 555,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2556:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_48_by_1",
                                        "typeString": "int_const 48"
                                      },
                                      "value": "48"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 560,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 558,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 503,
                                            "src": "2569:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "3130",
                                            "id": 559,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2577:2:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "src": "2569:10:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 557,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2561:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 556,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2561:7:1",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 561,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2561:19:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "2556:24:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 554,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2550:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 553,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2550:5:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2550:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2543:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 551,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "2543:6:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2543:39:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "2526:56:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 566,
                        "nodeType": "ExpressionStatement",
                        "src": "2526:56:1"
                      },
                      {
                        "expression": {
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 567,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 503,
                            "src": "2597:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2606:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "2597:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 570,
                        "nodeType": "ExpressionStatement",
                        "src": "2597:11:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 541,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "2473:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2482:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2473:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 572,
                  "nodeType": "WhileStatement",
                  "src": "2466:154:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 575,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 535,
                        "src": "2644:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2637:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 573,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2637:6:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2637:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 507,
                  "id": 577,
                  "nodeType": "Return",
                  "src": "2630:21:1"
                }
              ]
            },
            "documentation": {
              "id": 501,
              "nodeType": "StructuredDocumentation",
              "src": "1838:92:1",
              "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
            },
            "id": 579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toString",
            "nameLocation": "1945:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 504,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 503,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1962:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "1954:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 502,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1954:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1953:15:1"
            },
            "returnParameters": {
              "id": 507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 579,
                  "src": "1992:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 505,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1992:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1991:15:1"
            },
            "scope": 697,
            "src": "1936:723:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 619,
              "nodeType": "Block",
              "src": "2843:266:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 587,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "2858:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2867:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2858:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 593,
                  "nodeType": "IfStatement",
                  "src": "2854:56:1",
                  "trueBody": {
                    "id": 592,
                    "nodeType": "Block",
                    "src": "2870:40:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30783030",
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2892:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
                            "typeString": "literal_string \"0x00\""
                          },
                          "value": "0x00"
                        },
                        "functionReturnParameters": 586,
                        "id": 591,
                        "nodeType": "Return",
                        "src": "2885:13:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    595
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 595,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "2928:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 619,
                      "src": "2920:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 594,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2920:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 597,
                  "initialValue": {
                    "id": 596,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 582,
                    "src": "2935:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2920:20:1"
                },
                {
                  "assignments": [
                    599
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 599,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2959:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 619,
                      "src": "2951:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 598,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2951:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 601,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2968:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2951:18:1"
                },
                {
                  "body": {
                    "id": 612,
                    "nodeType": "Block",
                    "src": "2998:60:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3013:8:1",
                          "subExpression": {
                            "id": 605,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 599,
                            "src": "3013:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 607,
                        "nodeType": "ExpressionStatement",
                        "src": "3013:8:1"
                      },
                      {
                        "expression": {
                          "id": 610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 608,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 595,
                            "src": "3036:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": ">>=",
                          "rightHandSide": {
                            "hexValue": "38",
                            "id": 609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3045:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "3036:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 611,
                        "nodeType": "ExpressionStatement",
                        "src": "3036:10:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 602,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 595,
                      "src": "2987:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2995:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2987:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 613,
                  "nodeType": "WhileStatement",
                  "src": "2980:78:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 615,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 582,
                        "src": "3087:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 616,
                        "name": "length",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 599,
                        "src": "3094:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 614,
                      "name": "toHexString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        620,
                        696
                      ],
                      "referencedDeclaration": 696,
                      "src": "3075:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,uint256) pure returns (string memory)"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3075:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 586,
                  "id": 618,
                  "nodeType": "Return",
                  "src": "3068:33:1"
                }
              ]
            },
            "documentation": {
              "id": 580,
              "nodeType": "StructuredDocumentation",
              "src": "2667:96:1",
              "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
            },
            "id": 620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toHexString",
            "nameLocation": "2778:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2798:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "2790:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2790:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2789:15:1"
            },
            "returnParameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "2828:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2827:15:1"
            },
            "scope": 697,
            "src": "2769:340:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 695,
              "nodeType": "Block",
              "src": "3327:361:1",
              "statements": [
                {
                  "assignments": [
                    631
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 631,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "3351:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 695,
                      "src": "3338:19:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 630,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3338:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 640,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "32",
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3370:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 635,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "3374:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3370:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3383:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "3370:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "3360:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 632,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3364:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3360:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3338:47:1"
                },
                {
                  "expression": {
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 641,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "3396:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 643,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3403:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3396:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3408:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                        "typeString": "literal_string \"0\""
                      },
                      "value": "0"
                    },
                    "src": "3396:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:15:1"
                },
                {
                  "expression": {
                    "id": 651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 647,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "3422:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 649,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3429:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3422:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes1",
                        "typeString": "bytes1"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "78",
                      "id": 650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3434:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
                        "typeString": "literal_string \"x\""
                      },
                      "value": "x"
                    },
                    "src": "3422:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes1",
                      "typeString": "bytes1"
                    }
                  },
                  "id": 652,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:15:1"
                },
                {
                  "body": {
                    "id": 681,
                    "nodeType": "Block",
                    "src": "3493:90:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 667,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 631,
                              "src": "3508:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 669,
                            "indexExpression": {
                              "id": 668,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 654,
                              "src": "3515:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3508:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 670,
                              "name": "_HEX_SYMBOLS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 500,
                              "src": "3520:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            "id": 674,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 673,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 671,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 623,
                                "src": "3533:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "hexValue": "307866",
                                "id": 672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3541:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_15_by_1",
                                  "typeString": "int_const 15"
                                },
                                "value": "0xf"
                              },
                              "src": "3533:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3520:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "3508:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 676,
                        "nodeType": "ExpressionStatement",
                        "src": "3508:37:1"
                      },
                      {
                        "expression": {
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 677,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "3560:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": ">>=",
                          "rightHandSide": {
                            "hexValue": "34",
                            "id": 678,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3570:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          "src": "3560:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 680,
                        "nodeType": "ExpressionStatement",
                        "src": "3560:11:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 661,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 654,
                      "src": "3481:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3485:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3481:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 682,
                  "initializationExpression": {
                    "assignments": [
                      654
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 654,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3461:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "3453:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 653,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3453:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 660,
                    "initialValue": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3465:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 656,
                          "name": "length",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 625,
                          "src": "3469:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3465:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3478:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "3465:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3453:26:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": true,
                      "src": "3488:3:1",
                      "subExpression": {
                        "id": 664,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 654,
                        "src": "3490:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 666,
                    "nodeType": "ExpressionStatement",
                    "src": "3488:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "3448:135:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 684,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 623,
                          "src": "3601:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3610:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3601:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3613:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                          "typeString": "literal_string \"Strings: hex length insufficient\""
                        },
                        "value": "Strings: hex length insufficient"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
                          "typeString": "literal_string \"Strings: hex length insufficient\""
                        }
                      ],
                      "id": 683,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3593:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3593:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 689,
                  "nodeType": "ExpressionStatement",
                  "src": "3593:55:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 692,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "3673:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3666:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 690,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3666:6:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3666:14:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 629,
                  "id": 694,
                  "nodeType": "Return",
                  "src": "3659:21:1"
                }
              ]
            },
            "documentation": {
              "id": 621,
              "nodeType": "StructuredDocumentation",
              "src": "3117:114:1",
              "text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
            },
            "id": 696,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toHexString",
            "nameLocation": "3246:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 623,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3266:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "3258:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3258:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 625,
                  "mutability": "mutable",
                  "name": "length",
                  "nameLocation": "3281:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "3273:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3273:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3257:31:1"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 628,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 696,
                  "src": "3312:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 627,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3312:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3311:15:1"
            },
            "scope": 697,
            "src": "3237:451:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2130,
        "src": "1748:1943:1",
        "usedErrors": []
      },
      {
        "id": 698,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "3807:23:1"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "Context",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 699,
          "nodeType": "StructuredDocumentation",
          "src": "3834:505:1",
          "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
        },
        "fullyImplemented": true,
        "id": 718,
        "linearizedBaseContracts": [
          718
        ],
        "name": "Context",
        "nameLocation": "4359:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 707,
              "nodeType": "Block",
              "src": "4436:36:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 704,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4454:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4454:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 703,
                  "id": 706,
                  "nodeType": "Return",
                  "src": "4447:17:1"
                }
              ]
            },
            "id": 708,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "4383:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4393:2:1"
            },
            "returnParameters": {
              "id": 703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "4427:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4427:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4426:9:1"
            },
            "scope": 718,
            "src": "4374:98:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 716,
              "nodeType": "Block",
              "src": "4547:34:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 713,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4565:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "4565:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 712,
                  "id": 715,
                  "nodeType": "Return",
                  "src": "4558:15:1"
                }
              ]
            },
            "id": 717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "4489:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4497:2:1"
            },
            "returnParameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 717,
                  "src": "4531:14:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4531:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4530:16:1"
            },
            "scope": 718,
            "src": "4480:101:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2130,
        "src": "4341:243:1",
        "usedErrors": []
      },
      {
        "id": 719,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "4702:23:1"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 721,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 718,
              "src": "5267:7:1"
            },
            "id": 722,
            "nodeType": "InheritanceSpecifier",
            "src": "5267:7:1"
          }
        ],
        "canonicalName": "Ownable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 720,
          "nodeType": "StructuredDocumentation",
          "src": "4731:505:1",
          "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
        },
        "fullyImplemented": true,
        "id": 821,
        "linearizedBaseContracts": [
          821,
          718
        ],
        "name": "Ownable",
        "nameLocation": "5256:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 724,
            "mutability": "mutable",
            "name": "_owner",
            "nameLocation": "5298:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 821,
            "src": "5282:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 723,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5282:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "id": 730,
            "name": "OwnershipTransferred",
            "nameLocation": "5319:20:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 726,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "5356:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 730,
                  "src": "5340:29:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5340:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 728,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "5387:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 730,
                  "src": "5371:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 727,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5371:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5339:57:1"
            },
            "src": "5313:84:1"
          },
          {
            "body": {
              "id": 739,
              "nodeType": "Block",
              "src": "5518:51:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 735,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 708,
                          "src": "5548:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5548:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 734,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "5529:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5529:32:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 738,
                  "nodeType": "ExpressionStatement",
                  "src": "5529:32:1"
                }
              ]
            },
            "documentation": {
              "id": 731,
              "nodeType": "StructuredDocumentation",
              "src": "5405:93:1",
              "text": " @dev Initializes the contract setting the deployer as the initial owner."
            },
            "id": 740,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5515:2:1"
            },
            "returnParameters": {
              "id": 733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5518:0:1"
            },
            "scope": 821,
            "src": "5504:65:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 748,
              "nodeType": "Block",
              "src": "5705:32:1",
              "statements": [
                {
                  "expression": {
                    "id": 746,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 724,
                    "src": "5723:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 745,
                  "id": 747,
                  "nodeType": "Return",
                  "src": "5716:13:1"
                }
              ]
            },
            "documentation": {
              "id": 741,
              "nodeType": "StructuredDocumentation",
              "src": "5577:67:1",
              "text": " @dev Returns the address of the current owner."
            },
            "functionSelector": "8da5cb5b",
            "id": 749,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "owner",
            "nameLocation": "5659:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5664:2:1"
            },
            "returnParameters": {
              "id": 745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 749,
                  "src": "5696:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5696:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5695:9:1"
            },
            "scope": 821,
            "src": "5650:87:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 762,
              "nodeType": "Block",
              "src": "5851:99:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 753,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "5870:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5870:7:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 755,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 708,
                            "src": "5881:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5881:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5870:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5895:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "id": 752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5862:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5862:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 760,
                  "nodeType": "ExpressionStatement",
                  "src": "5862:68:1"
                },
                {
                  "id": 761,
                  "nodeType": "PlaceholderStatement",
                  "src": "5941:1:1"
                }
              ]
            },
            "documentation": {
              "id": 750,
              "nodeType": "StructuredDocumentation",
              "src": "5745:79:1",
              "text": " @dev Throws if called by any account other than the owner."
            },
            "id": 763,
            "name": "onlyOwner",
            "nameLocation": "5839:9:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5848:2:1"
            },
            "src": "5830:120:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 776,
              "nodeType": "Block",
              "src": "6355:49:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6393:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6385:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 770,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6385:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6385:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 769,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "6366:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6366:30:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "6366:30:1"
                }
              ]
            },
            "documentation": {
              "id": 764,
              "nodeType": "StructuredDocumentation",
              "src": "5958:337:1",
              "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
            },
            "functionSelector": "715018a6",
            "id": 777,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 767,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 766,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 763,
                  "src": "6345:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6345:9:1"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "6310:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6327:2:1"
            },
            "returnParameters": {
              "id": 768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6355:0:1"
            },
            "scope": 821,
            "src": "6301:103:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 799,
              "nodeType": "Block",
              "src": "6629:131:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 786,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 780,
                          "src": "6648:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6668:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6660:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 787,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6660:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6660:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6648:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6672:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        },
                        "value": "Ownable: new owner is the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                          "typeString": "literal_string \"Ownable: new owner is the zero address\""
                        }
                      ],
                      "id": 785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6640:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6640:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 794,
                  "nodeType": "ExpressionStatement",
                  "src": "6640:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 796,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "6743:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 795,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 820,
                      "src": "6724:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6724:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 798,
                  "nodeType": "ExpressionStatement",
                  "src": "6724:28:1"
                }
              ]
            },
            "documentation": {
              "id": 778,
              "nodeType": "StructuredDocumentation",
              "src": "6412:141:1",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
            },
            "functionSelector": "f2fde38b",
            "id": 800,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 783,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 782,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 763,
                  "src": "6619:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6619:9:1"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "6568:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "6594:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 800,
                  "src": "6586:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6586:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6585:18:1"
            },
            "returnParameters": {
              "id": 784,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6629:0:1"
            },
            "scope": 821,
            "src": "6559:201:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 819,
              "nodeType": "Block",
              "src": "6983:128:1",
              "statements": [
                {
                  "assignments": [
                    807
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 807,
                      "mutability": "mutable",
                      "name": "oldOwner",
                      "nameLocation": "7002:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 819,
                      "src": "6994:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 806,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6994:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 809,
                  "initialValue": {
                    "id": 808,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 724,
                    "src": "7013:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6994:25:1"
                },
                {
                  "expression": {
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 810,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 724,
                      "src": "7030:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 811,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 803,
                      "src": "7039:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7030:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "7030:17:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 815,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 807,
                        "src": "7084:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 816,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 803,
                        "src": "7094:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 814,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "7063:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7063:40:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 818,
                  "nodeType": "EmitStatement",
                  "src": "7058:45:1"
                }
              ]
            },
            "documentation": {
              "id": 801,
              "nodeType": "StructuredDocumentation",
              "src": "6768:146:1",
              "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
            },
            "id": 820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferOwnership",
            "nameLocation": "6929:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "6956:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "6948:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6948:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6947:18:1"
            },
            "returnParameters": {
              "id": 805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6983:0:1"
            },
            "scope": 821,
            "src": "6920:191:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2130,
        "src": "5238:1876:1",
        "usedErrors": []
      },
      {
        "id": 822,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "7230:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Address",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 823,
          "nodeType": "StructuredDocumentation",
          "src": "7257:69:1",
          "text": " @dev Collection of functions related to the address type"
        },
        "fullyImplemented": true,
        "id": 1117,
        "linearizedBaseContracts": [
          1117
        ],
        "name": "Address",
        "nameLocation": "7336:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 839,
              "nodeType": "Block",
              "src": "8004:321:1",
              "statements": [
                {
                  "assignments": [
                    832
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 832,
                      "mutability": "mutable",
                      "name": "size",
                      "nameLocation": "8214:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 839,
                      "src": "8206:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 831,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8206:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 833,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8206:12:1"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "8238:54:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "8253:28:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "account",
                              "nodeType": "YulIdentifier",
                              "src": "8273:7:1"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "8261:11:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8261:20:1"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "8253:4:1"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 826,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8273:7:1",
                      "valueSize": 1
                    },
                    {
                      "declaration": 832,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "8253:4:1",
                      "valueSize": 1
                    }
                  ],
                  "id": 834,
                  "nodeType": "InlineAssembly",
                  "src": "8229:63:1"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 835,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 832,
                      "src": "8309:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8316:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8309:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 830,
                  "id": 838,
                  "nodeType": "Return",
                  "src": "8302:15:1"
                }
              ]
            },
            "documentation": {
              "id": 824,
              "nodeType": "StructuredDocumentation",
              "src": "7351:581:1",
              "text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
            },
            "id": 840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "7947:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 826,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7966:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "7958:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7958:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7957:17:1"
            },
            "returnParameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 829,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "7998:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 828,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7998:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7997:6:1"
            },
            "scope": 1117,
            "src": "7938:387:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 873,
              "nodeType": "Block",
              "src": "9331:246:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 851,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9358:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Address_$1117",
                                  "typeString": "library Address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Address_$1117",
                                  "typeString": "library Address"
                                }
                              ],
                              "id": 850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9350:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 849,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9350:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9350:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "9350:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 854,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "9375:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9350:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9383:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        },
                        "value": "Address: insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                          "typeString": "literal_string \"Address: insufficient balance\""
                        }
                      ],
                      "id": 848,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9342:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9342:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 858,
                  "nodeType": "ExpressionStatement",
                  "src": "9342:73:1"
                },
                {
                  "assignments": [
                    860,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 860,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "9434:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 873,
                      "src": "9429:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 859,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9429:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 867,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9477:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 861,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 843,
                          "src": "9447:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "9447:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 863,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 845,
                          "src": "9469:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "9447:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9447:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9428:52:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 869,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 860,
                        "src": "9499:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                        "id": 870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9508:60:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        },
                        "value": "Address: unable to send value, recipient may have reverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                          "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                        }
                      ],
                      "id": 868,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9491:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9491:78:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "9491:78:1"
                }
              ]
            },
            "documentation": {
              "id": 841,
              "nodeType": "StructuredDocumentation",
              "src": "8333:921:1",
              "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
            },
            "id": 874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendValue",
            "nameLocation": "9269:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "9295:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "9279:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9279:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9314:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 874,
                  "src": "9306:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9306:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9278:43:1"
            },
            "returnParameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9331:0:1"
            },
            "scope": 1117,
            "src": "9260:317:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "10428:86:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 885,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 877,
                        "src": "10459:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 886,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 879,
                        "src": "10467:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
                        "id": 887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10473:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                          "typeString": "literal_string \"Address: low-level call failed\""
                        },
                        "value": "Address: low-level call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
                          "typeString": "literal_string \"Address: low-level call failed\""
                        }
                      ],
                      "id": 884,
                      "name": "functionCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        891,
                        911
                      ],
                      "referencedDeclaration": 911,
                      "src": "10446:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10446:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 883,
                  "id": 889,
                  "nodeType": "Return",
                  "src": "10439:67:1"
                }
              ]
            },
            "documentation": {
              "id": 875,
              "nodeType": "StructuredDocumentation",
              "src": "9585:748:1",
              "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
            },
            "id": 891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCall",
            "nameLocation": "10348:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 877,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "10369:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "10361:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 876,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10361:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10390:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "10377:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10377:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10360:35:1"
            },
            "returnParameters": {
              "id": 883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "10414:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10414:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10413:14:1"
            },
            "scope": 1117,
            "src": "10339:175:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 910,
              "nodeType": "Block",
              "src": "10895:78:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 904,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "10935:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 905,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "10943:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10949:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 907,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "10952:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 903,
                      "name": "functionCallWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        931,
                        981
                      ],
                      "referencedDeclaration": 981,
                      "src": "10913:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10913:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 902,
                  "id": 909,
                  "nodeType": "Return",
                  "src": "10906:59:1"
                }
              ]
            },
            "documentation": {
              "id": 892,
              "nodeType": "StructuredDocumentation",
              "src": "10522:216:1",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
            },
            "id": 911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCall",
            "nameLocation": "10753:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "10784:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "10776:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10776:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "10814:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "10801:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10801:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "10843:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "10829:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10829:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10765:97:1"
            },
            "returnParameters": {
              "id": 902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 901,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 911,
                  "src": "10881:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 900,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10881:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10880:14:1"
            },
            "scope": 1117,
            "src": "10744:229:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 930,
              "nodeType": "Block",
              "src": "11495:113:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 924,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "11535:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 925,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 916,
                        "src": "11543:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 926,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 918,
                        "src": "11549:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
                        "id": 927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11556:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                          "typeString": "literal_string \"Address: low-level call with value failed\""
                        },
                        "value": "Address: low-level call with value failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
                          "typeString": "literal_string \"Address: low-level call with value failed\""
                        }
                      ],
                      "id": 923,
                      "name": "functionCallWithValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        931,
                        981
                      ],
                      "referencedDeclaration": 981,
                      "src": "11513:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11513:87:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 922,
                  "id": 929,
                  "nodeType": "Return",
                  "src": "11506:94:1"
                }
              ]
            },
            "documentation": {
              "id": 912,
              "nodeType": "StructuredDocumentation",
              "src": "10981:361:1",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
            },
            "id": 931,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCallWithValue",
            "nameLocation": "11357:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "11397:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "11389:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11389:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11427:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "11414:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11414:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 918,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "11450:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "11442:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 917,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11442:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11378:84:1"
            },
            "returnParameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 931,
                  "src": "11481:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 920,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11481:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11480:14:1"
            },
            "scope": 1117,
            "src": "11348:260:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 980,
              "nodeType": "Block",
              "src": "12048:326:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 948,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "12075:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Address_$1117",
                                  "typeString": "library Address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Address_$1117",
                                  "typeString": "library Address"
                                }
                              ],
                              "id": 947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12067:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 946,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12067:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12067:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "12067:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 951,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 938,
                          "src": "12092:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12067:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
                        "id": 953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12099:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                          "typeString": "literal_string \"Address: insufficient balance for call\""
                        },
                        "value": "Address: insufficient balance for call"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
                          "typeString": "literal_string \"Address: insufficient balance for call\""
                        }
                      ],
                      "id": 945,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12059:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12059:81:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 955,
                  "nodeType": "ExpressionStatement",
                  "src": "12059:81:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 958,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 934,
                            "src": "12170:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 957,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 840,
                          "src": "12159:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12159:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12179:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                          "typeString": "literal_string \"Address: call to non-contract\""
                        },
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
                          "typeString": "literal_string \"Address: call to non-contract\""
                        }
                      ],
                      "id": 956,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12151:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12151:60:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 962,
                  "nodeType": "ExpressionStatement",
                  "src": "12151:60:1"
                },
                {
                  "assignments": [
                    964,
                    966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 964,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "12230:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 980,
                      "src": "12225:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 963,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12225:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 966,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "12252:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 980,
                      "src": "12239:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 965,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "12239:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 973,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 971,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 936,
                        "src": "12292:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 967,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 934,
                          "src": "12266:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "12266:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 969,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 938,
                          "src": "12285:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "12266:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12266:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12224:73:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 975,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "12332:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 976,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 966,
                        "src": "12341:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 977,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 940,
                        "src": "12353:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 974,
                      "name": "verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1116,
                      "src": "12315:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12315:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 944,
                  "id": 979,
                  "nodeType": "Return",
                  "src": "12308:58:1"
                }
              ]
            },
            "documentation": {
              "id": 932,
              "nodeType": "StructuredDocumentation",
              "src": "11616:242:1",
              "text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
            },
            "id": 981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionCallWithValue",
            "nameLocation": "11873:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 934,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "11913:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "11905:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 933,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11905:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "11943:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "11930:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11930:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 938,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "11966:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "11958:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11958:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 940,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "11996:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "11982:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 939,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "11982:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11894:121:1"
            },
            "returnParameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 943,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 981,
                  "src": "12034:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12034:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12033:14:1"
            },
            "scope": 1117,
            "src": "11864:510:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 997,
              "nodeType": "Block",
              "src": "12659:99:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 992,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 984,
                        "src": "12696:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 993,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 986,
                        "src": "12704:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12710:39:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                          "typeString": "literal_string \"Address: low-level static call failed\""
                        },
                        "value": "Address: low-level static call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
                          "typeString": "literal_string \"Address: low-level static call failed\""
                        }
                      ],
                      "id": 991,
                      "name": "functionStaticCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        998,
                        1033
                      ],
                      "referencedDeclaration": 1033,
                      "src": "12677:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
                      }
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12677:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 990,
                  "id": 996,
                  "nodeType": "Return",
                  "src": "12670:80:1"
                }
              ]
            },
            "documentation": {
              "id": 982,
              "nodeType": "StructuredDocumentation",
              "src": "12382:171:1",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
            },
            "id": 998,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionStaticCall",
            "nameLocation": "12568:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 984,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "12595:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "12587:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12587:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 986,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12616:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "12603:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 985,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12603:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12586:35:1"
            },
            "returnParameters": {
              "id": 990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 989,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "12645:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 988,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12645:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12644:14:1"
            },
            "scope": 1117,
            "src": "12559:199:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1032,
              "nodeType": "Block",
              "src": "13112:233:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1012,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "13142:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1011,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 840,
                          "src": "13131:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13131:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 1014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13151:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                          "typeString": "literal_string \"Address: static call to non-contract\""
                        },
                        "value": "Address: static call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
                          "typeString": "literal_string \"Address: static call to non-contract\""
                        }
                      ],
                      "id": 1010,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13123:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13123:67:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "13123:67:1"
                },
                {
                  "assignments": [
                    1018,
                    1020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1018,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "13209:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1032,
                      "src": "13204:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1017,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13204:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1020,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "13231:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1032,
                      "src": "13218:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1019,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "13218:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1025,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1023,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1003,
                        "src": "13263:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1021,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "13245:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "staticcall",
                      "nodeType": "MemberAccess",
                      "src": "13245:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 1024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13245:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13203:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1027,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "13303:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1028,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "13312:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 1029,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "13324:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1026,
                      "name": "verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1116,
                      "src": "13286:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13286:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1009,
                  "id": 1031,
                  "nodeType": "Return",
                  "src": "13279:58:1"
                }
              ]
            },
            "documentation": {
              "id": 999,
              "nodeType": "StructuredDocumentation",
              "src": "12766:178:1",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
            },
            "id": 1033,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionStaticCall",
            "nameLocation": "12959:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1001,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "12996:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "12988:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12988:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1003,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13026:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "13013:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13013:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "13055:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "13041:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13041:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12977:97:1"
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1033,
                  "src": "13098:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13098:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13097:14:1"
            },
            "scope": 1117,
            "src": "12950:395:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1049,
              "nodeType": "Block",
              "src": "13629:103:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1044,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1036,
                        "src": "13668:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1045,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1038,
                        "src": "13676:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13682:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                          "typeString": "literal_string \"Address: low-level delegate call failed\""
                        },
                        "value": "Address: low-level delegate call failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
                          "typeString": "literal_string \"Address: low-level delegate call failed\""
                        }
                      ],
                      "id": 1043,
                      "name": "functionDelegateCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1050,
                        1085
                      ],
                      "referencedDeclaration": 1085,
                      "src": "13647:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13647:77:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1042,
                  "id": 1048,
                  "nodeType": "Return",
                  "src": "13640:84:1"
                }
              ]
            },
            "documentation": {
              "id": 1034,
              "nodeType": "StructuredDocumentation",
              "src": "13353:173:1",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
            },
            "id": 1050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionDelegateCall",
            "nameLocation": "13541:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1036,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "13570:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "13562:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13562:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1038,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13591:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "13578:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1037,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13578:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13561:35:1"
            },
            "returnParameters": {
              "id": 1042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1041,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1050,
                  "src": "13615:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1040,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13615:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13614:14:1"
            },
            "scope": 1117,
            "src": "13532:200:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1084,
              "nodeType": "Block",
              "src": "14085:237:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1064,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1053,
                            "src": "14115:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1063,
                          "name": "isContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 840,
                          "src": "14104:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14104:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
                        "id": 1066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14124:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                          "typeString": "literal_string \"Address: delegate call to non-contract\""
                        },
                        "value": "Address: delegate call to non-contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
                          "typeString": "literal_string \"Address: delegate call to non-contract\""
                        }
                      ],
                      "id": 1062,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14096:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14096:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1068,
                  "nodeType": "ExpressionStatement",
                  "src": "14096:69:1"
                },
                {
                  "assignments": [
                    1070,
                    1072
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1070,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "14184:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1084,
                      "src": "14179:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1069,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "14179:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1072,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "14206:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1084,
                      "src": "14193:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1071,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "14193:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1077,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1075,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "14240:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1073,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1053,
                        "src": "14220:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "14220:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14220:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14178:67:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1079,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "14280:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 1080,
                        "name": "returndata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "14289:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 1081,
                        "name": "errorMessage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1057,
                        "src": "14301:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1078,
                      "name": "verifyCallResult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1116,
                      "src": "14263:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
                      }
                    },
                    "id": 1082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14263:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 1061,
                  "id": 1083,
                  "nodeType": "Return",
                  "src": "14256:58:1"
                }
              ]
            },
            "documentation": {
              "id": 1051,
              "nodeType": "StructuredDocumentation",
              "src": "13740:180:1",
              "text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
            },
            "id": 1085,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "functionDelegateCall",
            "nameLocation": "13935:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1053,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "13974:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "13966:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13966:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1055,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14004:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "13991:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1054,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13991:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1057,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "14033:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "14019:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1056,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14019:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13955:97:1"
            },
            "returnParameters": {
              "id": 1061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1085,
                  "src": "14071:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1059,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14071:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14070:14:1"
            },
            "scope": 1117,
            "src": "13926:396:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1115,
              "nodeType": "Block",
              "src": "14714:548:1",
              "statements": [
                {
                  "condition": {
                    "id": 1097,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1088,
                    "src": "14729:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1113,
                    "nodeType": "Block",
                    "src": "14788:467:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1101,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1090,
                              "src": "14874:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "14874:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14894:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14874:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1111,
                          "nodeType": "Block",
                          "src": "15189:55:1",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1108,
                                    "name": "errorMessage",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1092,
                                    "src": "15215:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1107,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "15208:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15208:20:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1110,
                              "nodeType": "ExpressionStatement",
                              "src": "15208:20:1"
                            }
                          ]
                        },
                        "id": 1112,
                        "nodeType": "IfStatement",
                        "src": "14870:374:1",
                        "trueBody": {
                          "id": 1106,
                          "nodeType": "Block",
                          "src": "14897:286:1",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "15020:148:1",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "15043:40:1",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "returndata",
                                          "nodeType": "YulIdentifier",
                                          "src": "15072:10:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "15066:5:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15066:17:1"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulTypedName",
                                        "src": "15047:15:1",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "15116:2:1",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "15120:10:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "15112:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "15112:19:1"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "15133:15:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "15105:6:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "15105:44:1"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "15105:44:1"
                                  }
                                ]
                              },
                              "evmVersion": "istanbul",
                              "externalReferences": [
                                {
                                  "declaration": 1090,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "15072:10:1",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 1090,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "15120:10:1",
                                  "valueSize": 1
                                }
                              ],
                              "id": 1105,
                              "nodeType": "InlineAssembly",
                              "src": "15011:157:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1114,
                  "nodeType": "IfStatement",
                  "src": "14725:530:1",
                  "trueBody": {
                    "id": 1100,
                    "nodeType": "Block",
                    "src": "14738:44:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 1098,
                          "name": "returndata",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1090,
                          "src": "14760:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 1096,
                        "id": 1099,
                        "nodeType": "Return",
                        "src": "14753:17:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1086,
              "nodeType": "StructuredDocumentation",
              "src": "14330:214:1",
              "text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
            },
            "id": 1116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verifyCallResult",
            "nameLocation": "14559:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1088,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "14591:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "14586:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1087,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14586:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "returndata",
                  "nameLocation": "14622:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "14609:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14609:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "errorMessage",
                  "nameLocation": "14657:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "14643:26:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1091,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "14643:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14575:101:1"
            },
            "returnParameters": {
              "id": 1096,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1095,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1116,
                  "src": "14700:12:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1094,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14700:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14699:14:1"
            },
            "scope": 1117,
            "src": "14550:712:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2130,
        "src": "7328:7937:1",
        "usedErrors": []
      },
      {
        "id": 1118,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "15411:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC721Receiver",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1119,
          "nodeType": "StructuredDocumentation",
          "src": "15438:156:1",
          "text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
        },
        "fullyImplemented": false,
        "id": 1134,
        "linearizedBaseContracts": [
          1134
        ],
        "name": "IERC721Receiver",
        "nameLocation": "15606:15:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1120,
              "nodeType": "StructuredDocumentation",
              "src": "15629:493:1",
              "text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
            },
            "functionSelector": "150b7a02",
            "id": 1133,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "16137:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "16172:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "16164:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16164:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16199:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "16191:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16191:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "16222:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "16214:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16214:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "16255:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "16240:19:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16240:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16153:113:1"
            },
            "returnParameters": {
              "id": 1132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1131,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "16285:6:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1130,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "16285:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16284:8:1"
            },
            "scope": 1134,
            "src": "16128:165:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2130,
        "src": "15596:700:1",
        "usedErrors": []
      },
      {
        "id": 1135,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "16440:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC165",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1136,
          "nodeType": "StructuredDocumentation",
          "src": "16467:287:1",
          "text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
        },
        "fullyImplemented": false,
        "id": 1145,
        "linearizedBaseContracts": [
          1145
        ],
        "name": "IERC165",
        "nameLocation": "16766:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1137,
              "nodeType": "StructuredDocumentation",
              "src": "16781:347:1",
              "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
            },
            "functionSelector": "01ffc9a7",
            "id": 1144,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "17143:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1139,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "17168:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "17161:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1138,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "17161:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17160:20:1"
            },
            "returnParameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "17204:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1141,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17204:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17203:6:1"
            },
            "scope": 1145,
            "src": "17134:76:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2130,
        "src": "16756:457:1",
        "usedErrors": []
      },
      {
        "id": 1146,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "17355:23:1"
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 1148,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1145,
              "src": "18003:7:1"
            },
            "id": 1149,
            "nodeType": "InheritanceSpecifier",
            "src": "18003:7:1"
          }
        ],
        "canonicalName": "ERC165",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1147,
          "nodeType": "StructuredDocumentation",
          "src": "17384:589:1",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "id": 1167,
        "linearizedBaseContracts": [
          1167,
          1145
        ],
        "name": "ERC165",
        "nameLocation": "17993:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              1144
            ],
            "body": {
              "id": 1165,
              "nodeType": "Block",
              "src": "18173:66:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1158,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1152,
                      "src": "18191:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1160,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1145,
                            "src": "18211:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$1145_$",
                              "typeString": "type(contract IERC165)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$1145_$",
                              "typeString": "type(contract IERC165)"
                            }
                          ],
                          "id": 1159,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "18206:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18206:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1145",
                          "typeString": "type(contract IERC165)"
                        }
                      },
                      "id": 1162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "18206:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "18191:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1157,
                  "id": 1164,
                  "nodeType": "Return",
                  "src": "18184:47:1"
                }
              ]
            },
            "documentation": {
              "id": 1150,
              "nodeType": "StructuredDocumentation",
              "src": "18018:58:1",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 1166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "18091:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1154,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18149:8:1"
            },
            "parameters": {
              "id": 1153,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "18116:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "18109:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "18109:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18108:20:1"
            },
            "returnParameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1166,
                  "src": "18167:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18167:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18166:6:1"
            },
            "scope": 1167,
            "src": "18082:157:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 2130,
        "src": "17975:267:1",
        "usedErrors": []
      },
      {
        "id": 1168,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "18372:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1170,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1145,
              "src": "18493:7:1"
            },
            "id": 1171,
            "nodeType": "InheritanceSpecifier",
            "src": "18493:7:1"
          }
        ],
        "canonicalName": "IERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1169,
          "nodeType": "StructuredDocumentation",
          "src": "18401:69:1",
          "text": " @dev Required interface of an ERC721 compliant contract."
        },
        "fullyImplemented": false,
        "id": 1281,
        "linearizedBaseContracts": [
          1281,
          1145
        ],
        "name": "IERC721",
        "nameLocation": "18482:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 1172,
              "nodeType": "StructuredDocumentation",
              "src": "18508:90:1",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 1180,
            "name": "Transfer",
            "nameLocation": "18610:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1174,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "18635:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1180,
                  "src": "18619:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18619:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1176,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18657:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1180,
                  "src": "18641:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18641:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1178,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "18677:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1180,
                  "src": "18661:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1177,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18661:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18618:67:1"
            },
            "src": "18604:82:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1181,
              "nodeType": "StructuredDocumentation",
              "src": "18694:96:1",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 1189,
            "name": "Approval",
            "nameLocation": "18802:8:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1183,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "18827:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "18811:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18811:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1185,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "18850:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "18834:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18834:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1187,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "18876:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "18860:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18860:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18810:74:1"
            },
            "src": "18796:89:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1190,
              "nodeType": "StructuredDocumentation",
              "src": "18893:119:1",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
            "id": 1198,
            "name": "ApprovalForAll",
            "nameLocation": "19024:14:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1192,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "19055:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1198,
                  "src": "19039:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19039:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1194,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "19078:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1198,
                  "src": "19062:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19062:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1196,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "19093:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1198,
                  "src": "19088:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19088:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19038:64:1"
            },
            "src": "19018:85:1"
          },
          {
            "documentation": {
              "id": 1199,
              "nodeType": "StructuredDocumentation",
              "src": "19111:78:1",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 1206,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "19204:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1201,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "19222:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "19214:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19214:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19213:15:1"
            },
            "returnParameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1204,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "19260:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1206,
                  "src": "19252:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19252:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19251:17:1"
            },
            "scope": 1281,
            "src": "19195:74:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1207,
              "nodeType": "StructuredDocumentation",
              "src": "19277:137:1",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 1214,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "19429:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1209,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "19445:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "19437:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1208,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19437:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19436:17:1"
            },
            "returnParameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1212,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "19485:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1214,
                  "src": "19477:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19477:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19476:15:1"
            },
            "scope": 1281,
            "src": "19420:72:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1215,
              "nodeType": "StructuredDocumentation",
              "src": "19500:703:1",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 1224,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "20218:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1217,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "20253:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "20245:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1216,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20245:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "20276:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "20268:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20268:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1221,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "20297:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1224,
                  "src": "20289:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20289:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20234:77:1"
            },
            "returnParameters": {
              "id": 1223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20320:0:1"
            },
            "scope": 1281,
            "src": "20209:112:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1225,
              "nodeType": "StructuredDocumentation",
              "src": "20329:517:1",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 1234,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "20861:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1227,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "20892:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "20884:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1226,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20884:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1229,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "20915:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "20907:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20907:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1231,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "20936:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1234,
                  "src": "20928:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20928:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20873:77:1"
            },
            "returnParameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20959:0:1"
            },
            "scope": 1281,
            "src": "20852:108:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1235,
              "nodeType": "StructuredDocumentation",
              "src": "20968:464:1",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 1242,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "21447:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1237,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "21463:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1242,
                  "src": "21455:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21455:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1239,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "21475:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1242,
                  "src": "21467:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21467:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21454:29:1"
            },
            "returnParameters": {
              "id": 1241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21492:0:1"
            },
            "scope": 1281,
            "src": "21438:55:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1243,
              "nodeType": "StructuredDocumentation",
              "src": "21501:145:1",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 1250,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "21661:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1245,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "21681:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "21673:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21673:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21672:17:1"
            },
            "returnParameters": {
              "id": 1249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1248,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "21721:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1250,
                  "src": "21713:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21713:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21712:18:1"
            },
            "scope": 1281,
            "src": "21652:79:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1251,
              "nodeType": "StructuredDocumentation",
              "src": "21739:318:1",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 1258,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "22072:17:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "22098:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1258,
                  "src": "22090:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22090:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "22113:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1258,
                  "src": "22108:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22108:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22089:34:1"
            },
            "returnParameters": {
              "id": 1257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22132:0:1"
            },
            "scope": 1281,
            "src": "22063:70:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1259,
              "nodeType": "StructuredDocumentation",
              "src": "22141:142:1",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 1268,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "22298:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1261,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "22323:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "22315:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22315:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1263,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "22338:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "22330:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22330:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22314:33:1"
            },
            "returnParameters": {
              "id": 1267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1266,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1268,
                  "src": "22371:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1265,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22371:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22370:6:1"
            },
            "scope": 1281,
            "src": "22289:88:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1269,
              "nodeType": "StructuredDocumentation",
              "src": "22385:568:1",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 1280,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "22968:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1271,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "23003:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "22995:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22995:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1273,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "23026:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "23018:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23018:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1275,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "23047:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "23039:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23039:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1277,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "23080:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1280,
                  "src": "23065:19:1",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1276,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "23065:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22984:107:1"
            },
            "returnParameters": {
              "id": 1279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23100:0:1"
            },
            "scope": 1281,
            "src": "22959:142:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2130,
        "src": "18472:4632:1",
        "usedErrors": []
      },
      {
        "id": 1282,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "23272:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1284,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1281,
              "src": "23468:7:1"
            },
            "id": 1285,
            "nodeType": "InheritanceSpecifier",
            "src": "23468:7:1"
          }
        ],
        "canonicalName": "IERC721Metadata",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1283,
          "nodeType": "StructuredDocumentation",
          "src": "23301:136:1",
          "text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": false,
        "id": 1306,
        "linearizedBaseContracts": [
          1306,
          1281,
          1145
        ],
        "name": "IERC721Metadata",
        "nameLocation": "23449:15:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1286,
              "nodeType": "StructuredDocumentation",
              "src": "23483:60:1",
              "text": " @dev Returns the token collection name."
            },
            "functionSelector": "06fdde03",
            "id": 1291,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "23558:4:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23562:2:1"
            },
            "returnParameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1291,
                  "src": "23588:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23588:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23587:15:1"
            },
            "scope": 1306,
            "src": "23549:54:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1292,
              "nodeType": "StructuredDocumentation",
              "src": "23611:62:1",
              "text": " @dev Returns the token collection symbol."
            },
            "functionSelector": "95d89b41",
            "id": 1297,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "23688:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23694:2:1"
            },
            "returnParameters": {
              "id": 1296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1297,
                  "src": "23720:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23720:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23719:15:1"
            },
            "scope": 1306,
            "src": "23679:56:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1298,
              "nodeType": "StructuredDocumentation",
              "src": "23743:92:1",
              "text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
            },
            "functionSelector": "c87b56dd",
            "id": 1305,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "23850:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1300,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "23867:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "23859:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1299,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23859:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23858:17:1"
            },
            "returnParameters": {
              "id": 1304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1303,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1305,
                  "src": "23899:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1302,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23899:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23898:15:1"
            },
            "scope": 1306,
            "src": "23841:73:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2130,
        "src": "23439:478:1",
        "usedErrors": []
      },
      {
        "id": 1307,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "24045:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1309,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 718,
              "src": "24357:7:1"
            },
            "id": 1310,
            "nodeType": "InheritanceSpecifier",
            "src": "24357:7:1"
          },
          {
            "baseName": {
              "id": 1311,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1167,
              "src": "24366:6:1"
            },
            "id": 1312,
            "nodeType": "InheritanceSpecifier",
            "src": "24366:6:1"
          },
          {
            "baseName": {
              "id": 1313,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1281,
              "src": "24374:7:1"
            },
            "id": 1314,
            "nodeType": "InheritanceSpecifier",
            "src": "24374:7:1"
          },
          {
            "baseName": {
              "id": 1315,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1306,
              "src": "24383:15:1"
            },
            "id": 1316,
            "nodeType": "InheritanceSpecifier",
            "src": "24383:15:1"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1308,
          "nodeType": "StructuredDocumentation",
          "src": "24086:250:1",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 2129,
        "linearizedBaseContracts": [
          2129,
          1306,
          1281,
          1167,
          1145,
          718
        ],
        "name": "ERC721",
        "nameLocation": "24347:6:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1319,
            "libraryName": {
              "id": 1317,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1117,
              "src": "24412:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "24406:26:1",
            "typeName": {
              "id": 1318,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "24424:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 1322,
            "libraryName": {
              "id": 1320,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 697,
              "src": "24444:7:1"
            },
            "nodeType": "UsingForDirective",
            "src": "24438:26:1",
            "typeName": {
              "id": 1321,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "24456:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1324,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "24506:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 2129,
            "src": "24491:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1323,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "24491:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1326,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "24556:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 2129,
            "src": "24541:22:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1325,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "24541:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1330,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "24655:7:1",
            "nodeType": "VariableDeclaration",
            "scope": 2129,
            "src": "24619:43:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1329,
              "keyType": {
                "id": 1327,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "24627:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "24619:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1328,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24638:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1334,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "24752:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 2129,
            "src": "24716:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1333,
              "keyType": {
                "id": 1331,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24724:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "24716:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1332,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "24735:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1338,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "24856:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 2129,
            "src": "24820:51:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1337,
              "keyType": {
                "id": 1335,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "24828:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "24820:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1336,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24839:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1344,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "24982:18:1",
            "nodeType": "VariableDeclaration",
            "scope": 2129,
            "src": "24929:71:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 1343,
              "keyType": {
                "id": 1339,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "24937:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "24929:44:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 1342,
                "keyType": {
                  "id": 1340,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "24956:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "24948:24:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1341,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "24967:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1360,
              "nodeType": "Block",
              "src": "25181:60:1",
              "statements": [
                {
                  "expression": {
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1352,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1324,
                      "src": "25192:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1353,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1347,
                      "src": "25200:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "25192:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1355,
                  "nodeType": "ExpressionStatement",
                  "src": "25192:13:1"
                },
                {
                  "expression": {
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1356,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1326,
                      "src": "25216:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1357,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1349,
                      "src": "25226:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "25216:17:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1359,
                  "nodeType": "ExpressionStatement",
                  "src": "25216:17:1"
                }
              ]
            },
            "documentation": {
              "id": 1345,
              "nodeType": "StructuredDocumentation",
              "src": "25009:110:1",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 1361,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1347,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "25151:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "25137:19:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1346,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25137:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1349,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "25172:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1361,
                  "src": "25158:21:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1348,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "25158:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25136:44:1"
            },
            "returnParameters": {
              "id": 1351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25181:0:1"
            },
            "scope": 2129,
            "src": "25125:116:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1144,
              1166
            ],
            "body": {
              "id": 1391,
              "nodeType": "Block",
              "src": "25421:197:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1372,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1364,
                          "src": "25452:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1374,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1281,
                                "src": "25472:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1281_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1281_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 1373,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25467:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25467:13:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1281",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 1376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "25467:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "25452:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1378,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1364,
                          "src": "25509:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1380,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1306,
                                "src": "25529:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1306_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1306_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 1379,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "25524:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "25524:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1306",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 1382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "25524:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "25509:48:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "25452:105:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1387,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1364,
                          "src": "25598:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 1385,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "25574:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$2129_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 1386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1166,
                        "src": "25574:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 1388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25574:36:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "25452:158:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1371,
                  "id": 1390,
                  "nodeType": "Return",
                  "src": "25432:178:1"
                }
              ]
            },
            "documentation": {
              "id": 1362,
              "nodeType": "StructuredDocumentation",
              "src": "25249:58:1",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 1392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "25322:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1368,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1366,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1167,
                  "src": "25389:6:1"
                },
                {
                  "id": 1367,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1145,
                  "src": "25397:7:1"
                }
              ],
              "src": "25380:25:1"
            },
            "parameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1364,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "25347:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1392,
                  "src": "25340:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "25340:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25339:20:1"
            },
            "returnParameters": {
              "id": 1371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1370,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1392,
                  "src": "25415:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1369,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "25415:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25414:6:1"
            },
            "scope": 2129,
            "src": "25313:305:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1206
            ],
            "body": {
              "id": 1415,
              "nodeType": "Block",
              "src": "25763:127:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1402,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1395,
                          "src": "25782:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "25799:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "25791:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1403,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "25791:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25791:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "25782:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 1408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25803:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 1401,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25774:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25774:74:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1410,
                  "nodeType": "ExpressionStatement",
                  "src": "25774:74:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1411,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1334,
                      "src": "25866:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1413,
                    "indexExpression": {
                      "id": 1412,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1395,
                      "src": "25876:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "25866:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1400,
                  "id": 1414,
                  "nodeType": "Return",
                  "src": "25859:23:1"
                }
              ]
            },
            "documentation": {
              "id": 1393,
              "nodeType": "StructuredDocumentation",
              "src": "25626:50:1",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1416,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "25691:9:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1397,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "25736:8:1"
            },
            "parameters": {
              "id": 1396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1395,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "25709:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1416,
                  "src": "25701:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25701:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25700:15:1"
            },
            "returnParameters": {
              "id": 1400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1416,
                  "src": "25754:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1398,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25754:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25753:9:1"
            },
            "scope": 2129,
            "src": "25682:208:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1214
            ],
            "body": {
              "id": 1443,
              "nodeType": "Block",
              "src": "26033:158:1",
              "statements": [
                {
                  "assignments": [
                    1426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1426,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "26052:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1443,
                      "src": "26044:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1425,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "26044:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1430,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1427,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1330,
                      "src": "26060:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1429,
                    "indexExpression": {
                      "id": 1428,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1419,
                      "src": "26068:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "26060:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26044:32:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1432,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1426,
                          "src": "26095:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "26112:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26104:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1433,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "26104:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26104:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "26095:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26116:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 1431,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26087:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26087:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1440,
                  "nodeType": "ExpressionStatement",
                  "src": "26087:73:1"
                },
                {
                  "expression": {
                    "id": 1441,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1426,
                    "src": "26178:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1424,
                  "id": 1442,
                  "nodeType": "Return",
                  "src": "26171:12:1"
                }
              ]
            },
            "documentation": {
              "id": 1417,
              "nodeType": "StructuredDocumentation",
              "src": "25898:48:1",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 1444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "25961:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1421,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26006:8:1"
            },
            "parameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1419,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "25977:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1444,
                  "src": "25969:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25969:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25968:17:1"
            },
            "returnParameters": {
              "id": 1424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1423,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1444,
                  "src": "26024:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "26024:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26023:9:1"
            },
            "scope": 2129,
            "src": "25952:239:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1291
            ],
            "body": {
              "id": 1453,
              "nodeType": "Block",
              "src": "26327:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 1451,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1324,
                    "src": "26345:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1450,
                  "id": 1452,
                  "nodeType": "Return",
                  "src": "26338:12:1"
                }
              ]
            },
            "documentation": {
              "id": 1445,
              "nodeType": "StructuredDocumentation",
              "src": "26199:53:1",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 1454,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "26267:4:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1447,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26294:8:1"
            },
            "parameters": {
              "id": 1446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26271:2:1"
            },
            "returnParameters": {
              "id": 1450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1449,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1454,
                  "src": "26312:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1448,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26312:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26311:15:1"
            },
            "scope": 2129,
            "src": "26258:100:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1297
            ],
            "body": {
              "id": 1463,
              "nodeType": "Block",
              "src": "26498:33:1",
              "statements": [
                {
                  "expression": {
                    "id": 1461,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1326,
                    "src": "26516:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1460,
                  "id": 1462,
                  "nodeType": "Return",
                  "src": "26509:14:1"
                }
              ]
            },
            "documentation": {
              "id": 1455,
              "nodeType": "StructuredDocumentation",
              "src": "26366:55:1",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 1464,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "26436:6:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1457,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26465:8:1"
            },
            "parameters": {
              "id": 1456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26442:2:1"
            },
            "returnParameters": {
              "id": 1460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1459,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1464,
                  "src": "26483:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1458,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26483:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26482:15:1"
            },
            "scope": 2129,
            "src": "26427:104:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1305
            ],
            "body": {
              "id": 1505,
              "nodeType": "Block",
              "src": "26690:246:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1475,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1467,
                            "src": "26717:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1474,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1737,
                          "src": "26709:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "26709:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26727:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 1473,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "26701:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26701:76:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1479,
                  "nodeType": "ExpressionStatement",
                  "src": "26701:76:1"
                },
                {
                  "assignments": [
                    1481
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1481,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "26804:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1505,
                      "src": "26790:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1480,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "26790:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1484,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1482,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1515,
                      "src": "26814:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 1483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26814:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "26790:34:1"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1487,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1481,
                              "src": "26848:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "26842:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 1485,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "26842:5:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26842:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "26842:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26866:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "26842:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "26926:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 1503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "26842:86:1",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1496,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1481,
                              "src": "26894:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1497,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1467,
                                  "src": "26903:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 579,
                                "src": "26903:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 1499,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "26903:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1494,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "26877:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "26877:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "26877:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "26870:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 1492,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "26870:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "26870:53:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1472,
                  "id": 1504,
                  "nodeType": "Return",
                  "src": "26835:93:1"
                }
              ]
            },
            "documentation": {
              "id": 1465,
              "nodeType": "StructuredDocumentation",
              "src": "26539:57:1",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 1506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "26611:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1469,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "26657:8:1"
            },
            "parameters": {
              "id": 1468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1467,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "26628:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1506,
                  "src": "26620:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26620:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26619:17:1"
            },
            "returnParameters": {
              "id": 1472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1471,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1506,
                  "src": "26675:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1470,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26675:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "26674:15:1"
            },
            "scope": 2129,
            "src": "26602:334:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1514,
              "nodeType": "Block",
              "src": "27250:28:1",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 1512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "27268:2:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 1511,
                  "id": 1513,
                  "nodeType": "Return",
                  "src": "27261:9:1"
                }
              ]
            },
            "documentation": {
              "id": 1507,
              "nodeType": "StructuredDocumentation",
              "src": "26944:234:1",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 1515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "27193:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27201:2:1"
            },
            "returnParameters": {
              "id": 1511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1510,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1515,
                  "src": "27235:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1509,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "27235:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27234:15:1"
            },
            "scope": 2129,
            "src": "27184:94:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1242
            ],
            "body": {
              "id": 1557,
              "nodeType": "Block",
              "src": "27410:341:1",
              "statements": [
                {
                  "assignments": [
                    1525
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1525,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "27429:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1557,
                      "src": "27421:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1524,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "27421:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1530,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1528,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1520,
                        "src": "27452:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1526,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2129,
                        "src": "27437:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2129_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1444,
                      "src": "27437:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27437:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "27421:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1532,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1518,
                          "src": "27479:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1533,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1525,
                          "src": "27485:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "27479:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 1535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27492:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 1531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27471:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27471:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1537,
                  "nodeType": "ExpressionStatement",
                  "src": "27471:57:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1539,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "27563:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "27563:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1541,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1525,
                            "src": "27579:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "27563:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1544,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1525,
                              "src": "27605:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1545,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 708,
                                "src": "27612:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "27612:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1543,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1614,
                            "src": "27588:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "27588:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "27563:62:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27640:58:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 1538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27541:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27541:168:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1551,
                  "nodeType": "ExpressionStatement",
                  "src": "27541:168:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1553,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1518,
                        "src": "27731:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1554,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1520,
                        "src": "27735:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1552,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2023,
                      "src": "27722:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27722:21:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1556,
                  "nodeType": "ExpressionStatement",
                  "src": "27722:21:1"
                }
              ]
            },
            "documentation": {
              "id": 1516,
              "nodeType": "StructuredDocumentation",
              "src": "27286:48:1",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 1558,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "27349:7:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1522,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27401:8:1"
            },
            "parameters": {
              "id": 1521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1518,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "27365:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "27357:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27357:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1520,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "27377:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1558,
                  "src": "27369:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1519,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27369:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27356:29:1"
            },
            "returnParameters": {
              "id": 1523,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27410:0:1"
            },
            "scope": 2129,
            "src": "27340:411:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1250
            ],
            "body": {
              "id": 1578,
              "nodeType": "Block",
              "src": "27902:136:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1569,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1561,
                            "src": "27929:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1568,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1737,
                          "src": "27921:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "27921:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27939:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 1567,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27913:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27913:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1573,
                  "nodeType": "ExpressionStatement",
                  "src": "27913:73:1"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1574,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1338,
                      "src": "28006:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1576,
                    "indexExpression": {
                      "id": 1575,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1561,
                      "src": "28022:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28006:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1566,
                  "id": 1577,
                  "nodeType": "Return",
                  "src": "27999:31:1"
                }
              ]
            },
            "documentation": {
              "id": 1559,
              "nodeType": "StructuredDocumentation",
              "src": "27759:52:1",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 1579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "27826:11:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1563,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "27875:8:1"
            },
            "parameters": {
              "id": 1562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1561,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "27846:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1579,
                  "src": "27838:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "27838:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27837:17:1"
            },
            "returnParameters": {
              "id": 1566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1579,
                  "src": "27893:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27893:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27892:9:1"
            },
            "scope": 2129,
            "src": "27817:221:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1258
            ],
            "body": {
              "id": 1595,
              "nodeType": "Block",
              "src": "28194:71:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1589,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 708,
                          "src": "28224:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28224:12:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1591,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1582,
                        "src": "28238:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1592,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1584,
                        "src": "28248:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1588,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2055,
                      "src": "28205:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28205:52:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1594,
                  "nodeType": "ExpressionStatement",
                  "src": "28205:52:1"
                }
              ]
            },
            "documentation": {
              "id": 1580,
              "nodeType": "StructuredDocumentation",
              "src": "28046:58:1",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1596,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "28119:17:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1586,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28185:8:1"
            },
            "parameters": {
              "id": 1585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1582,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "28145:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1596,
                  "src": "28137:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28137:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1584,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "28160:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1596,
                  "src": "28155:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1583,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28155:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28136:33:1"
            },
            "returnParameters": {
              "id": 1587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28194:0:1"
            },
            "scope": 2129,
            "src": "28110:155:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1268
            ],
            "body": {
              "id": 1613,
              "nodeType": "Block",
              "src": "28439:61:1",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1607,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1344,
                        "src": "28457:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 1609,
                      "indexExpression": {
                        "id": 1608,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1599,
                        "src": "28476:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "28457:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1611,
                    "indexExpression": {
                      "id": 1610,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1601,
                      "src": "28483:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "28457:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1606,
                  "id": 1612,
                  "nodeType": "Return",
                  "src": "28450:42:1"
                }
              ]
            },
            "documentation": {
              "id": 1597,
              "nodeType": "StructuredDocumentation",
              "src": "28273:57:1",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 1614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "28345:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1603,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28415:8:1"
            },
            "parameters": {
              "id": 1602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1599,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "28370:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "28362:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28362:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1601,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "28385:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "28377:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28377:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28361:33:1"
            },
            "returnParameters": {
              "id": 1606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1614,
                  "src": "28433:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1604,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "28433:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28432:6:1"
            },
            "scope": 2129,
            "src": "28336:164:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1234
            ],
            "body": {
              "id": 1640,
              "nodeType": "Block",
              "src": "28690:216:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1627,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "28781:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "28781:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1629,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1621,
                            "src": "28795:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1626,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1778,
                          "src": "28762:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "28762:41:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28805:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1625,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28754:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28754:103:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1633,
                  "nodeType": "ExpressionStatement",
                  "src": "28754:103:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1635,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1617,
                        "src": "28880:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1636,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1619,
                        "src": "28886:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1637,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1621,
                        "src": "28890:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1634,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1999,
                      "src": "28870:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28870:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1639,
                  "nodeType": "ExpressionStatement",
                  "src": "28870:28:1"
                }
              ]
            },
            "documentation": {
              "id": 1615,
              "nodeType": "StructuredDocumentation",
              "src": "28508:53:1",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 1641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "28576:12:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1623,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "28681:8:1"
            },
            "parameters": {
              "id": 1622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1617,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "28607:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "28599:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28599:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1619,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "28630:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "28622:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "28622:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1621,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "28651:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1641,
                  "src": "28643:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1620,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "28643:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "28588:77:1"
            },
            "returnParameters": {
              "id": 1624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "28690:0:1"
            },
            "scope": 2129,
            "src": "28567:339:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1224
            ],
            "body": {
              "id": 1659,
              "nodeType": "Block",
              "src": "29104:58:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1653,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1644,
                        "src": "29132:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1654,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1646,
                        "src": "29138:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1655,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1648,
                        "src": "29142:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29151:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1652,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1660,
                        1690
                      ],
                      "referencedDeclaration": 1690,
                      "src": "29115:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29115:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1658,
                  "nodeType": "ExpressionStatement",
                  "src": "29115:39:1"
                }
              ]
            },
            "documentation": {
              "id": 1642,
              "nodeType": "StructuredDocumentation",
              "src": "28914:57:1",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 1660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "28986:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1650,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29095:8:1"
            },
            "parameters": {
              "id": 1649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1644,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "29021:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1660,
                  "src": "29013:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29013:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1646,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "29044:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1660,
                  "src": "29036:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29036:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1648,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "29065:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1660,
                  "src": "29057:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29057:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29002:77:1"
            },
            "returnParameters": {
              "id": 1651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29104:0:1"
            },
            "scope": 2129,
            "src": "28977:185:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1280
            ],
            "body": {
              "id": 1689,
              "nodeType": "Block",
              "src": "29389:172:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1675,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "29427:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "29427:12:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1677,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1667,
                            "src": "29441:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1674,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1778,
                          "src": "29408:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "29408:41:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 1679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "29451:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 1673,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "29400:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29400:103:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1681,
                  "nodeType": "ExpressionStatement",
                  "src": "29400:103:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1683,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1663,
                        "src": "29528:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1684,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1665,
                        "src": "29534:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1685,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1667,
                        "src": "29538:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1686,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1669,
                        "src": "29547:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1682,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1719,
                      "src": "29514:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29514:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1688,
                  "nodeType": "ExpressionStatement",
                  "src": "29514:39:1"
                }
              ]
            },
            "documentation": {
              "id": 1661,
              "nodeType": "StructuredDocumentation",
              "src": "29170:57:1",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 1690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "29242:16:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1671,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "29380:8:1"
            },
            "parameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1663,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "29277:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1690,
                  "src": "29269:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29269:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1665,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "29300:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1690,
                  "src": "29292:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "29292:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1667,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "29321:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1690,
                  "src": "29313:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29313:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1669,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "29352:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1690,
                  "src": "29339:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1668,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "29339:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29258:106:1"
            },
            "returnParameters": {
              "id": 1672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29389:0:1"
            },
            "scope": 2129,
            "src": "29233:328:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1718,
              "nodeType": "Block",
              "src": "30589:169:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1703,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1693,
                        "src": "30610:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1704,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1695,
                        "src": "30616:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1705,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1697,
                        "src": "30620:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1702,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1999,
                      "src": "30600:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30600:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1707,
                  "nodeType": "ExpressionStatement",
                  "src": "30600:28:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1710,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1693,
                            "src": "30670:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1711,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1695,
                            "src": "30676:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1712,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1697,
                            "src": "30680:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1713,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1699,
                            "src": "30689:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1709,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2117,
                          "src": "30647:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 1714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "30647:48:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 1715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "30697:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 1708,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "30639:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30639:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1717,
                  "nodeType": "ExpressionStatement",
                  "src": "30639:111:1"
                }
              ]
            },
            "documentation": {
              "id": 1691,
              "nodeType": "StructuredDocumentation",
              "src": "29569:868:1",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 1719,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "30452:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1700,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1693,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "30484:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1719,
                  "src": "30476:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30476:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1695,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "30507:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1719,
                  "src": "30499:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30499:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1697,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "30528:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1719,
                  "src": "30520:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "30520:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1699,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "30559:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1719,
                  "src": "30546:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1698,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "30546:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30465:106:1"
            },
            "returnParameters": {
              "id": 1701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30589:0:1"
            },
            "scope": 2129,
            "src": "30443:315:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1736,
              "nodeType": "Block",
              "src": "31142:56:1",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1727,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "31160:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1729,
                      "indexExpression": {
                        "id": 1728,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1722,
                        "src": "31168:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "31160:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "31188:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "31180:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "31180:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "31180:10:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "31160:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1726,
                  "id": 1735,
                  "nodeType": "Return",
                  "src": "31153:37:1"
                }
              ]
            },
            "documentation": {
              "id": 1720,
              "nodeType": "StructuredDocumentation",
              "src": "30766:299:1",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 1737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "31080:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1723,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1722,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "31096:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1737,
                  "src": "31088:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1721,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31088:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31087:17:1"
            },
            "returnParameters": {
              "id": 1726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1725,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1737,
                  "src": "31136:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1724,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "31136:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31135:6:1"
            },
            "scope": 2129,
            "src": "31071:127:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1777,
              "nodeType": "Block",
              "src": "31464:249:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1749,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1742,
                            "src": "31491:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1748,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1737,
                          "src": "31483:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "31483:16:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 1751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "31501:46:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 1747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "31475:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31475:73:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1753,
                  "nodeType": "ExpressionStatement",
                  "src": "31475:73:1"
                },
                {
                  "assignments": [
                    1755
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1755,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "31567:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1777,
                      "src": "31559:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1754,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "31559:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1760,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1758,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1742,
                        "src": "31590:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1756,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2129,
                        "src": "31575:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2129_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1444,
                      "src": "31575:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "31575:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31559:39:1"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1761,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1740,
                              "src": "31617:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1762,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1755,
                              "src": "31628:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "31617:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 1765,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1742,
                                  "src": "31649:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1764,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1579,
                                "src": "31637:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 1766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "31637:20:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1767,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1740,
                              "src": "31661:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "31637:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "31617:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1771,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1755,
                              "src": "31689:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1772,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1740,
                              "src": "31696:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1770,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1614,
                            "src": "31672:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "31672:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "31617:87:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1775,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "31616:89:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1746,
                  "id": 1776,
                  "nodeType": "Return",
                  "src": "31609:96:1"
                }
              ]
            },
            "documentation": {
              "id": 1738,
              "nodeType": "StructuredDocumentation",
              "src": "31206:153:1",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 1778,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "31374:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1740,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "31401:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1778,
                  "src": "31393:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "31393:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "31418:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1778,
                  "src": "31410:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "31410:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31392:34:1"
            },
            "returnParameters": {
              "id": 1746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1745,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1778,
                  "src": "31458:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1744,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "31458:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31457:6:1"
            },
            "scope": 2129,
            "src": "31365:348:1",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1792,
              "nodeType": "Block",
              "src": "32120:45:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1787,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1781,
                        "src": "32141:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1788,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1783,
                        "src": "32145:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32154:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1786,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1793,
                        1822
                      ],
                      "referencedDeclaration": 1822,
                      "src": "32131:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32131:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1791,
                  "nodeType": "ExpressionStatement",
                  "src": "32131:26:1"
                }
              ]
            },
            "documentation": {
              "id": 1779,
              "nodeType": "StructuredDocumentation",
              "src": "31721:328:1",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 1793,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "32064:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1781,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "32082:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "32074:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1780,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32074:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1783,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "32094:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1793,
                  "src": "32086:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32086:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32073:29:1"
            },
            "returnParameters": {
              "id": 1785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32120:0:1"
            },
            "scope": 2129,
            "src": "32055:110:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1821,
              "nodeType": "Block",
              "src": "32511:202:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1804,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1796,
                        "src": "32528:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1805,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1798,
                        "src": "32532:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1803,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1879,
                      "src": "32522:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32522:18:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1807,
                  "nodeType": "ExpressionStatement",
                  "src": "32522:18:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "32604:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "32596:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1810,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "32596:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "32596:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1814,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1796,
                            "src": "32608:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1815,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1798,
                            "src": "32612:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1816,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1800,
                            "src": "32621:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1809,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2117,
                          "src": "32573:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 1817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "32573:54:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 1818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32642:52:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 1808,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32551:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32551:154:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1820,
                  "nodeType": "ExpressionStatement",
                  "src": "32551:154:1"
                }
              ]
            },
            "documentation": {
              "id": 1794,
              "nodeType": "StructuredDocumentation",
              "src": "32173:213:1",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 1822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "32401:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1796,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "32429:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1822,
                  "src": "32421:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32421:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1798,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "32450:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1822,
                  "src": "32442:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32442:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1800,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "32481:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1822,
                  "src": "32468:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1799,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "32468:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32410:83:1"
            },
            "returnParameters": {
              "id": 1802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32511:0:1"
            },
            "scope": 2129,
            "src": "32392:321:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1878,
              "nodeType": "Block",
              "src": "33110:321:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1831,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1825,
                          "src": "33129:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "33143:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "33135:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1832,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "33135:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33135:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "33129:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 1837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33147:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 1830,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "33121:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33121:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1839,
                  "nodeType": "ExpressionStatement",
                  "src": "33121:61:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "33201:17:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1842,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1827,
                              "src": "33210:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1841,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1737,
                            "src": "33202:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33202:16:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 1845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "33220:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 1840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "33193:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33193:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1847,
                  "nodeType": "ExpressionStatement",
                  "src": "33193:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33293:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33285:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1849,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33285:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33285:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1853,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "33297:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1854,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1827,
                        "src": "33301:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1848,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2128,
                      "src": "33264:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33264:45:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1856,
                  "nodeType": "ExpressionStatement",
                  "src": "33264:45:1"
                },
                {
                  "expression": {
                    "id": 1861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1857,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1334,
                        "src": "33322:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1859,
                      "indexExpression": {
                        "id": 1858,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "33332:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33322:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1860,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33339:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "33322:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1862,
                  "nodeType": "ExpressionStatement",
                  "src": "33322:18:1"
                },
                {
                  "expression": {
                    "id": 1867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1863,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "33351:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1865,
                      "indexExpression": {
                        "id": 1864,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1827,
                        "src": "33359:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33351:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1866,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1825,
                      "src": "33370:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "33351:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1868,
                  "nodeType": "ExpressionStatement",
                  "src": "33351:21:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33407:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33399:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1870,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33399:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33399:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1874,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1825,
                        "src": "33411:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1875,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1827,
                        "src": "33415:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1869,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1180,
                      "src": "33390:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33390:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1877,
                  "nodeType": "EmitStatement",
                  "src": "33385:38:1"
                }
              ]
            },
            "documentation": {
              "id": 1823,
              "nodeType": "StructuredDocumentation",
              "src": "32721:322:1",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 1879,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "33058:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1825,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "33072:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "33064:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1824,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33064:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1827,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "33084:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1879,
                  "src": "33076:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1826,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33076:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33063:29:1"
            },
            "returnParameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33110:0:1"
            },
            "scope": 2129,
            "src": "33049:382:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1929,
              "nodeType": "Block",
              "src": "33709:311:1",
              "statements": [
                {
                  "assignments": [
                    1886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1886,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "33728:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1929,
                      "src": "33720:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1885,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "33720:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1891,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1889,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1882,
                        "src": "33751:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1887,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2129,
                        "src": "33736:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2129_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1444,
                      "src": "33736:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33736:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "33720:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1893,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "33793:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33808:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33800:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1894,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33800:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33800:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1898,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1882,
                        "src": "33812:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1892,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2128,
                      "src": "33772:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33772:48:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1900,
                  "nodeType": "ExpressionStatement",
                  "src": "33772:48:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "33878:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33870:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1902,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33870:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33870:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1906,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1882,
                        "src": "33882:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1901,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2023,
                      "src": "33861:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33861:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1908,
                  "nodeType": "ExpressionStatement",
                  "src": "33861:29:1"
                },
                {
                  "expression": {
                    "id": 1913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1909,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1334,
                        "src": "33903:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1911,
                      "indexExpression": {
                        "id": 1910,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "33913:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33903:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "33923:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "33903:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1914,
                  "nodeType": "ExpressionStatement",
                  "src": "33903:21:1"
                },
                {
                  "expression": {
                    "id": 1918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "33935:23:1",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1915,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "33942:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1917,
                      "indexExpression": {
                        "id": 1916,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1882,
                        "src": "33950:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33942:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1919,
                  "nodeType": "ExpressionStatement",
                  "src": "33935:23:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1921,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1886,
                        "src": "33985:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34000:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "33992:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1922,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "33992:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "33992:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1926,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1882,
                        "src": "34004:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1920,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1180,
                      "src": "33976:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33976:36:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1928,
                  "nodeType": "EmitStatement",
                  "src": "33971:41:1"
                }
              ]
            },
            "documentation": {
              "id": 1880,
              "nodeType": "StructuredDocumentation",
              "src": "33439:215:1",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 1930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "33669:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1882,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "33683:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1930,
                  "src": "33675:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33675:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33674:17:1"
            },
            "returnParameters": {
              "id": 1884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "33709:0:1"
            },
            "scope": 2129,
            "src": "33660:360:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1998,
              "nodeType": "Block",
              "src": "34470:465:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1943,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1937,
                              "src": "34504:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1941,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2129,
                              "src": "34489:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2129_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 1942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1444,
                            "src": "34489:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34489:23:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1945,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1933,
                          "src": "34516:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "34489:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 1947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34522:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 1940,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "34481:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34481:85:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1949,
                  "nodeType": "ExpressionStatement",
                  "src": "34481:85:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1951,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1935,
                          "src": "34585:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "34599:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "34591:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1952,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "34591:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "34591:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "34585:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 1957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "34603:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 1950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "34577:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34577:65:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1959,
                  "nodeType": "ExpressionStatement",
                  "src": "34577:65:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1961,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "34676:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1962,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1935,
                        "src": "34682:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1963,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1937,
                        "src": "34686:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1960,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2128,
                      "src": "34655:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34655:39:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1965,
                  "nodeType": "ExpressionStatement",
                  "src": "34655:39:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "34776:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "34768:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1967,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "34768:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34768:10:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1971,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1937,
                        "src": "34780:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1966,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2023,
                      "src": "34759:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34759:29:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1973,
                  "nodeType": "ExpressionStatement",
                  "src": "34759:29:1"
                },
                {
                  "expression": {
                    "id": 1978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1974,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1334,
                        "src": "34801:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1976,
                      "indexExpression": {
                        "id": 1975,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "34811:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "34801:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34820:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "34801:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1979,
                  "nodeType": "ExpressionStatement",
                  "src": "34801:20:1"
                },
                {
                  "expression": {
                    "id": 1984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1980,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1334,
                        "src": "34832:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1982,
                      "indexExpression": {
                        "id": 1981,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1935,
                        "src": "34842:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "34832:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "34849:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "34832:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1985,
                  "nodeType": "ExpressionStatement",
                  "src": "34832:18:1"
                },
                {
                  "expression": {
                    "id": 1990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1986,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1330,
                        "src": "34861:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1988,
                      "indexExpression": {
                        "id": 1987,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1937,
                        "src": "34869:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "34861:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1989,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1935,
                      "src": "34880:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "34861:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1991,
                  "nodeType": "ExpressionStatement",
                  "src": "34861:21:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1993,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1933,
                        "src": "34909:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1994,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1935,
                        "src": "34915:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1995,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1937,
                        "src": "34919:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1992,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1180,
                      "src": "34900:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34900:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1997,
                  "nodeType": "EmitStatement",
                  "src": "34895:32:1"
                }
              ]
            },
            "documentation": {
              "id": 1931,
              "nodeType": "StructuredDocumentation",
              "src": "34028:323:1",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "34366:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1933,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "34394:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1999,
                  "src": "34386:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34386:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1935,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "34417:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1999,
                  "src": "34409:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34409:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1937,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "34438:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1999,
                  "src": "34430:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1936,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34430:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34375:77:1"
            },
            "returnParameters": {
              "id": 1939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "34470:0:1"
            },
            "scope": 2129,
            "src": "34357:578:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2022,
              "nodeType": "Block",
              "src": "35117:110:1",
              "statements": [
                {
                  "expression": {
                    "id": 2011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2007,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1338,
                        "src": "35128:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2009,
                      "indexExpression": {
                        "id": 2008,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2004,
                        "src": "35144:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "35128:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2010,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2002,
                      "src": "35155:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "35128:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2012,
                  "nodeType": "ExpressionStatement",
                  "src": "35128:29:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2016,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2004,
                            "src": "35197:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2014,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2129,
                            "src": "35182:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$2129_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 2015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1444,
                          "src": "35182:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "35182:23:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2018,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2002,
                        "src": "35207:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2019,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2004,
                        "src": "35211:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2013,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1189,
                      "src": "35173:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35173:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2021,
                  "nodeType": "EmitStatement",
                  "src": "35168:51:1"
                }
              ]
            },
            "documentation": {
              "id": 2000,
              "nodeType": "StructuredDocumentation",
              "src": "34943:104:1",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 2023,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "35062:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2005,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2002,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "35079:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2023,
                  "src": "35071:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35071:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2004,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "35091:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2023,
                  "src": "35083:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "35083:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35070:29:1"
            },
            "returnParameters": {
              "id": 2006,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35117:0:1"
            },
            "scope": 2129,
            "src": "35053:174:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2054,
              "nodeType": "Block",
              "src": "35496:188:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2034,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "35515:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2035,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2028,
                          "src": "35524:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "35515:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 2037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35534:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 2033,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "35507:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35507:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2039,
                  "nodeType": "ExpressionStatement",
                  "src": "35507:55:1"
                },
                {
                  "expression": {
                    "id": 2046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2040,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1344,
                          "src": "35573:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 2043,
                        "indexExpression": {
                          "id": 2041,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "35592:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35573:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2044,
                      "indexExpression": {
                        "id": 2042,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "35599:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "35573:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2045,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2030,
                      "src": "35611:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "35573:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2047,
                  "nodeType": "ExpressionStatement",
                  "src": "35573:46:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2049,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2026,
                        "src": "35650:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2050,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2028,
                        "src": "35657:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2051,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2030,
                        "src": "35667:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2048,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1198,
                      "src": "35635:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35635:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2053,
                  "nodeType": "EmitStatement",
                  "src": "35630:46:1"
                }
              ]
            },
            "documentation": {
              "id": 2024,
              "nodeType": "StructuredDocumentation",
              "src": "35235:128:1",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 2055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "35378:18:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2026,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "35415:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "35407:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35407:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2028,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "35439:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "35431:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2027,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "35431:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2030,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "35463:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2055,
                  "src": "35458:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2029,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "35458:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "35396:82:1"
            },
            "returnParameters": {
              "id": 2032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "35496:0:1"
            },
            "scope": 2129,
            "src": "35369:315:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2116,
              "nodeType": "Block",
              "src": "36410:638:1",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2069,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2060,
                        "src": "36425:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 840,
                      "src": "36425:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 2071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "36425:15:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2114,
                    "nodeType": "Block",
                    "src": "37003:38:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "37025:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2068,
                        "id": 2113,
                        "nodeType": "Return",
                        "src": "37018:11:1"
                      }
                    ]
                  },
                  "id": 2115,
                  "nodeType": "IfStatement",
                  "src": "36421:620:1",
                  "trueBody": {
                    "id": 2111,
                    "nodeType": "Block",
                    "src": "36442:555:1",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 2091,
                              "nodeType": "Block",
                              "src": "36558:93:1",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2089,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2085,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2083,
                                      "src": "36584:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2086,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1134,
                                          "src": "36594:15:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1134_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 2087,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1133,
                                        "src": "36594:32:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 2088,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "36594:41:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "36584:51:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 2068,
                                  "id": 2090,
                                  "nodeType": "Return",
                                  "src": "36577:58:1"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2092,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2084,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2083,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "36550:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2092,
                                  "src": "36543:13:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 2082,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "36543:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "36542:15:1"
                            },
                            "src": "36534:117:1"
                          },
                          {
                            "block": {
                              "id": 2108,
                              "nodeType": "Block",
                              "src": "36680:306:1",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2099,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2096,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2094,
                                        "src": "36703:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 2097,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "36703:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2098,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "36720:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "36703:18:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 2106,
                                    "nodeType": "Block",
                                    "src": "36832:139:1",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "36864:88:1",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "36902:2:1",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "36906:6:1"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "36898:3:1"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "36898:15:1"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "36921:6:1"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "36915:5:1"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "36915:13:1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "36891:6:1"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "36891:38:1"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "36891:38:1"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 2094,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "36906:6:1",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 2094,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "36921:6:1",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 2105,
                                        "nodeType": "InlineAssembly",
                                        "src": "36855:97:1"
                                      }
                                    ]
                                  },
                                  "id": 2107,
                                  "nodeType": "IfStatement",
                                  "src": "36699:272:1",
                                  "trueBody": {
                                    "id": 2104,
                                    "nodeType": "Block",
                                    "src": "36723:103:1",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 2101,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "36753:52:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 2100,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "36746:6:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 2102,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "36746:60:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 2103,
                                        "nodeType": "ExpressionStatement",
                                        "src": "36746:60:1"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2109,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2095,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2094,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "36672:6:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2109,
                                  "src": "36659:19:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 2093,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "36659:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "36658:21:1"
                            },
                            "src": "36652:334:1"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2076,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 708,
                                "src": "36498:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "36498:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2078,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2058,
                              "src": "36512:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2079,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2062,
                              "src": "36518:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2080,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2064,
                              "src": "36527:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2073,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2060,
                                  "src": "36477:2:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2072,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1134,
                                "src": "36461:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1134_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 2074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "36461:19:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$1134",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 2075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1133,
                            "src": "36461:36:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 2081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "36461:72:1",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 2110,
                        "nodeType": "TryStatement",
                        "src": "36457:529:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2056,
              "nodeType": "StructuredDocumentation",
              "src": "35692:551:1",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 2117,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "36258:22:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2058,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "36299:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "36291:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36291:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2060,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "36322:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "36314:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36314:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2062,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "36343:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "36335:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "36335:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2064,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "36374:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "36361:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2063,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "36361:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36280:106:1"
            },
            "returnParameters": {
              "id": 2068,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2067,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2117,
                  "src": "36404:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2066,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "36404:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36403:6:1"
            },
            "scope": 2129,
            "src": "36249:799:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2127,
              "nodeType": "Block",
              "src": "37744:2:1",
              "statements": []
            },
            "documentation": {
              "id": 2118,
              "nodeType": "StructuredDocumentation",
              "src": "37056:558:1",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2128,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "37629:20:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2120,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "37668:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2128,
                  "src": "37660:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "37660:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2122,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "37691:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2128,
                  "src": "37683:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "37683:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2124,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "37712:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2128,
                  "src": "37704:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "37704:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "37649:77:1"
            },
            "returnParameters": {
              "id": 2126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "37744:0:1"
            },
            "scope": 2129,
            "src": "37620:126:1",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2130,
        "src": "24338:13411:1",
        "usedErrors": []
      }
    ],
    "src": "220:37529:1"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620014e2380380620014e28339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b61125180620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d64565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd9565b61012461011f366004610dec565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e21565b6103a6565b005b61014f61015f366004610e4b565b6104bb565b61014f610172366004610e4b565b6104ec565b610124610185366004610dec565b610507565b61019d610198366004610e87565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610ea2565b610614565b61014f6101d4366004610ef4565b610623565b6101046101e7366004610dec565b61065b565b6100e76101fa366004610fd0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990611003565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590611003565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b81526004016103819061103d565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990611003565b61061f338383610a48565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b81526004016103819061103d565b61065584848484610b16565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b49565b60405160200161072c92919061108e565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b031614806108705750836001600160a01b03166108658461030c565b6001600160a01b0316145b806108a057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b0316146109235760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b0382166109855760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610990600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b99084906110d3565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e79084906110ea565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b218484846108a8565b610b2d84848484610c4a565b6106555760405162461bcd60e51b815260040161038190611102565b606081600003610b705750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b9a5780610b8481611154565b9150610b939050600a83611183565b9150610b74565b60008167ffffffffffffffff811115610bb557610bb5610ede565b6040519080825280601f01601f191660200182016040528015610bdf576020820181803683370190505b5090505b84156108a057610bf46001836110d3565b9150610c01600a86611197565b610c0c9060306110ea565b60f81b818381518110610c2157610c216111ab565b60200101906001600160f81b031916908160001a905350610c43600a86611183565b9450610be3565b60006001600160a01b0384163b15610d4057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8e9033908990889088906004016111c1565b6020604051808303816000875af1925050508015610cc9575060408051601f3d908101601f19168201909252610cc6918101906111fe565b60015b610d26573d808015610cf7576040519150601f19603f3d011682016040523d82523d6000602084013e610cfc565b606091505b508051600003610d1e5760405162461bcd60e51b815260040161038190611102565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d6157600080fd5b50565b600060208284031215610d7657600080fd5b813561073c81610d4b565b60005b83811015610d9c578181015183820152602001610d84565b838111156106555750506000910152565b60008151808452610dc5816020860160208601610d81565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610dad565b600060208284031215610dfe57600080fd5b5035919050565b80356001600160a01b0381168114610e1c57600080fd5b919050565b60008060408385031215610e3457600080fd5b610e3d83610e05565b946020939093013593505050565b600080600060608486031215610e6057600080fd5b610e6984610e05565b9250610e7760208501610e05565b9150604084013590509250925092565b600060208284031215610e9957600080fd5b61073c82610e05565b60008060408385031215610eb557600080fd5b610ebe83610e05565b915060208301358015158114610ed357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0a57600080fd5b610f1385610e05565b9350610f2160208601610e05565b925060408501359150606085013567ffffffffffffffff80821115610f4557600080fd5b818701915087601f830112610f5957600080fd5b813581811115610f6b57610f6b610ede565b604051601f8201601f19908116603f01168101908382118183101715610f9357610f93610ede565b816040528281528a6020848701011115610fac57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fe357600080fd5b610fec83610e05565b9150610ffa60208401610e05565b90509250929050565b600181811c9082168061101757607f821691505b60208210810361103757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600083516110a0818460208801610d81565b8351908301906110b4818360208801610d81565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e5576110e56110bd565b500390565b600082198211156110fd576110fd6110bd565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611166576111666110bd565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111925761119261116d565b500490565b6000826111a6576111a661116d565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f490830184610dad565b9695505050505050565b60006020828403121561121057600080fd5b815161073c81610d4b56fea26469706673582212209d7da36728963cf276456403ccbec1db411fc2d814494238081f4be5bff8466264736f6c634300080d0033",
  "bytecodeSha1": "43596085351badb8ab66350553dcdb54ddeec964",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "1": {
        "ERC721._checkOnERC721Received": {
          "62": [
            36703,
            36721,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "60": [
            30647,
            30695,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "59": [
            35515,
            35532,
            true
          ]
        },
        "ERC721._transfer": {
          "57": [
            34489,
            34520,
            true
          ],
          "58": [
            34585,
            34601,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            27479,
            27490,
            true
          ],
          "51": [
            27563,
            27584,
            true
          ],
          "52": [
            27588,
            27625,
            true
          ]
        },
        "ERC721.balanceOf": {
          "54": [
            25782,
            25801,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "55": [
            29408,
            29449,
            true
          ]
        },
        "ERC721.tokenURI": {
          "56": [
            26842,
            26867,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            28762,
            28803,
            true
          ]
        },
        "Strings.toString": {
          "61": [
            2213,
            2223,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "Address.isContract": {
          "46": [
            8302,
            8317
          ]
        },
        "Context._msgSender": {
          "8": [
            4447,
            4464
          ]
        },
        "ERC165.supportsInterface": {
          "2": [
            18184,
            18231
          ]
        },
        "ERC721._approve": {
          "24": [
            35128,
            35157
          ],
          "25": [
            35168,
            35219
          ]
        },
        "ERC721._baseURI": {
          "22": [
            27261,
            27270
          ]
        },
        "ERC721._checkOnERC721Received": {
          "47": [
            36746,
            36806
          ],
          "48": [
            36577,
            36635
          ],
          "49": [
            37018,
            37029
          ]
        },
        "ERC721._exists": {
          "4": [
            31153,
            31190
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "26": [
            31475,
            31548
          ],
          "27": [
            31609,
            31705
          ]
        },
        "ERC721._safeTransfer": {
          "38": [
            30600,
            30628
          ],
          "39": [
            30639,
            30750
          ]
        },
        "ERC721._setApprovalForAll": {
          "35": [
            35507,
            35562
          ],
          "36": [
            35573,
            35619
          ],
          "37": [
            35630,
            35676
          ]
        },
        "ERC721._transfer": {
          "28": [
            34481,
            34566
          ],
          "29": [
            34577,
            34642
          ],
          "30": [
            34759,
            34788
          ],
          "31": [
            34801,
            34821
          ],
          "32": [
            34832,
            34850
          ],
          "33": [
            34861,
            34882
          ],
          "34": [
            34895,
            34927
          ]
        },
        "ERC721.approve": {
          "7": [
            27471,
            27528
          ],
          "9": [
            27541,
            27709
          ],
          "10": [
            27722,
            27743
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            25774,
            25848
          ],
          "16": [
            25859,
            25882
          ]
        },
        "ERC721.getApproved": {
          "5": [
            27913,
            27986
          ],
          "6": [
            27999,
            28030
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            28450,
            28492
          ]
        },
        "ERC721.name": {
          "3": [
            26338,
            26350
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            26087,
            26160
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            29115,
            29154
          ],
          "19": [
            29400,
            29503
          ],
          "20": [
            29514,
            29553
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            28205,
            28257
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            25432,
            25610
          ]
        },
        "ERC721.symbol": {
          "17": [
            26509,
            26523
          ]
        },
        "ERC721.tokenURI": {
          "21": [
            26701,
            26777
          ],
          "23": [
            26835,
            26928
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            28754,
            28857
          ],
          "12": [
            28870,
            28898
          ]
        },
        "Strings.toString": {
          "40": [
            2240,
            2250
          ],
          "41": [
            2361,
            2369
          ],
          "42": [
            2384,
            2394
          ],
          "43": [
            2500,
            2511
          ],
          "44": [
            2526,
            2582
          ],
          "45": [
            2597,
            2608
          ]
        }
      }
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC165",
    "IERC721",
    "IERC721Metadata",
    "IERC721Receiver",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d64565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd9565b61012461011f366004610dec565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e21565b6103a6565b005b61014f61015f366004610e4b565b6104bb565b61014f610172366004610e4b565b6104ec565b610124610185366004610dec565b610507565b61019d610198366004610e87565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610ea2565b610614565b61014f6101d4366004610ef4565b610623565b6101046101e7366004610dec565b61065b565b6100e76101fa366004610fd0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990611003565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590611003565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b81526004016103819061103d565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990611003565b61061f338383610a48565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b81526004016103819061103d565b61065584848484610b16565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b49565b60405160200161072c92919061108e565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b031614806108705750836001600160a01b03166108658461030c565b6001600160a01b0316145b806108a057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b0316146109235760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b0382166109855760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610990600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b99084906110d3565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e79084906110ea565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b218484846108a8565b610b2d84848484610c4a565b6106555760405162461bcd60e51b815260040161038190611102565b606081600003610b705750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b9a5780610b8481611154565b9150610b939050600a83611183565b9150610b74565b60008167ffffffffffffffff811115610bb557610bb5610ede565b6040519080825280601f01601f191660200182016040528015610bdf576020820181803683370190505b5090505b84156108a057610bf46001836110d3565b9150610c01600a86611197565b610c0c9060306110ea565b60f81b818381518110610c2157610c216111ab565b60200101906001600160f81b031916908160001a905350610c43600a86611183565b9450610be3565b60006001600160a01b0384163b15610d4057604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8e9033908990889088906004016111c1565b6020604051808303816000875af1925050508015610cc9575060408051601f3d908101601f19168201909252610cc6918101906111fe565b60015b610d26573d808015610cf7576040519150601f19603f3d011682016040523d82523d6000602084013e610cfc565b606091505b508051600003610d1e5760405162461bcd60e51b815260040161038190611102565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d6157600080fd5b50565b600060208284031215610d7657600080fd5b813561073c81610d4b565b60005b83811015610d9c578181015183820152602001610d84565b838111156106555750506000910152565b60008151808452610dc5816020860160208601610d81565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610dad565b600060208284031215610dfe57600080fd5b5035919050565b80356001600160a01b0381168114610e1c57600080fd5b919050565b60008060408385031215610e3457600080fd5b610e3d83610e05565b946020939093013593505050565b600080600060608486031215610e6057600080fd5b610e6984610e05565b9250610e7760208501610e05565b9150604084013590509250925092565b600060208284031215610e9957600080fd5b61073c82610e05565b60008060408385031215610eb557600080fd5b610ebe83610e05565b915060208301358015158114610ed357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0a57600080fd5b610f1385610e05565b9350610f2160208601610e05565b925060408501359150606085013567ffffffffffffffff80821115610f4557600080fd5b818701915087601f830112610f5957600080fd5b813581811115610f6b57610f6b610ede565b604051601f8201601f19908116603f01168101908382118183101715610f9357610f93610ede565b816040528281528a6020848701011115610fac57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fe357600080fd5b610fec83610e05565b9150610ffa60208401610e05565b90509250929050565b600181811c9082168061101757607f821691505b60208210810361103757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b600083516110a0818460208801610d81565b8351908301906110b4818360208801610d81565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e5576110e56110bd565b500390565b600082198211156110fd576110fd6110bd565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611166576111666110bd565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111925761119261116d565b500490565b6000826111a6576111a661116d565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f490830184610dad565b9695505050505050565b60006020828403121561121057600080fd5b815161073c81610d4b56fea26469706673582212209d7da36728963cf276456403ccbec1db411fc2d814494238081f4be5bff8466264736f6c634300080d0033",
  "deployedSourceMap": "24338:13411:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25313:305;;;;;;:::i;:::-;;:::i;:::-;;;565:14:2;;558:22;540:41;;528:2;513:18;25313:305:1;;;;;;;;26258:100;;;:::i;:::-;;;;;;;:::i;27817:221::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:2;;;1674:51;;1662:2;1647:18;27817:221:1;1528:203:2;27340:411:1;;;;;;:::i;:::-;;:::i;:::-;;28567:339;;;;;;:::i;:::-;;:::i;28977:185::-;;;;;;:::i;:::-;;:::i;25952:239::-;;;;;;:::i;:::-;;:::i;25682:208::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:2;;;2831:2;2816:18;25682:208:1;2697:177:2;26427:104:1;;;:::i;28110:155::-;;;;;;:::i;:::-;;:::i;29233:328::-;;;;;;:::i;:::-;;:::i;26602:334::-;;;;;;:::i;:::-;;:::i;28336:164::-;;;;;;:::i;:::-;-1:-1:-1;;;;;28457:25:1;;;28433:4;28457:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;28336:164;25313:305;25415:4;-1:-1:-1;;;;;;25452:40:1;;-1:-1:-1;;;25452:40:1;;:105;;-1:-1:-1;;;;;;;25509:48:1;;-1:-1:-1;;;25509:48:1;25452:105;:158;;;-1:-1:-1;;;;;;;;;;18191:40:1;;;25574:36;25432:178;25313:305;-1:-1:-1;;25313:305:1:o;26258:100::-;26312:13;26345:5;26338:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26258:100;:::o;27817:221::-;27893:7;31160:16;;;:7;:16;;;;;;-1:-1:-1;;;;;31160:16:1;27913:73;;;;-1:-1:-1;;;27913:73:1;;5358:2:2;27913:73:1;;;5340:21:2;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:2;;;5480:42;5539:19;;27913:73:1;;;;;;;;;-1:-1:-1;28006:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;28006:24:1;;27817:221::o;27340:411::-;27421:13;27437:23;27452:7;27437:14;:23::i;:::-;27421:39;;27485:5;-1:-1:-1;;;;;27479:11:1;:2;-1:-1:-1;;;;;27479:11:1;;27471:57;;;;-1:-1:-1;;;27471:57:1;;5771:2:2;27471:57:1;;;5753:21:2;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:2;;;5893:31;5941:19;;27471:57:1;5569:397:2;27471:57:1;4454:10;-1:-1:-1;;;;;27563:21:1;;;;:62;;-1:-1:-1;27588:37:1;27605:5;4454:10;28336:164;:::i;27588:37::-;27541:168;;;;-1:-1:-1;;;27541:168:1;;6173:2:2;27541:168:1;;;6155:21:2;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;27541:168:1;5971:420:2;27541:168:1;27722:21;27731:2;27735:7;27722:8;:21::i;:::-;27410:341;27340:411;;:::o;28567:339::-;28762:41;4454:10;28795:7;28762:18;:41::i;:::-;28754:103;;;;-1:-1:-1;;;28754:103:1;;;;;;;:::i;:::-;28870:28;28880:4;28886:2;28890:7;28870:9;:28::i;28977:185::-;29115:39;29132:4;29138:2;29142:7;29115:39;;;;;;;;;;;;:16;:39::i;25952:239::-;26024:7;26060:16;;;:7;:16;;;;;;-1:-1:-1;;;;;26060:16:1;;26087:73;;;;-1:-1:-1;;;26087:73:1;;7016:2:2;26087:73:1;;;6998:21:2;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:2;;;7138:39;7194:19;;26087:73:1;6814:405:2;25682:208:1;25754:7;-1:-1:-1;;;;;25782:19:1;;25774:74;;;;-1:-1:-1;;;25774:74:1;;7426:2:2;25774:74:1;;;7408:21:2;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:2;;;7548:40;7605:19;;25774:74:1;7224:406:2;25774:74:1;-1:-1:-1;;;;;;25866:16:1;;;;;:9;:16;;;;;;;25682:208::o;26427:104::-;26483:13;26516:7;26509:14;;;;;:::i;28110:155::-;28205:52;4454:10;28238:8;28248;28205:18;:52::i;:::-;28110:155;;:::o;29233:328::-;29408:41;4454:10;29441:7;29408:18;:41::i;:::-;29400:103;;;;-1:-1:-1;;;29400:103:1;;;;;;;:::i;:::-;29514:39;29528:4;29534:2;29538:7;29547:5;29514:13;:39::i;:::-;29233:328;;;;:::o;26602:334::-;31136:4;31160:16;;;:7;:16;;;;;;26675:13;;-1:-1:-1;;;;;31160:16:1;26701:76;;;;-1:-1:-1;;;26701:76:1;;7837:2:2;26701:76:1;;;7819:21:2;7876:2;7856:18;;;7849:30;7915:34;7895:18;;;7888:62;-1:-1:-1;;;7966:18:2;;;7959:45;8021:19;;26701:76:1;7635:411:2;26701:76:1;26790:21;26814:10;27261:9;;;;;;;;;-1:-1:-1;27261:9:1;;;27184:94;26814:10;26790:34;;26866:1;26848:7;26842:21;:25;:86;;;;;;;;;;;;;;;;;26894:7;26903:18;:7;:16;:18::i;:::-;26877:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26842:86;26835:93;26602:334;-1:-1:-1;;;26602:334:1:o;35053:174::-;35128:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;35128:29:1;-1:-1:-1;;;;;35128:29:1;;;;;;;;:24;;35182:23;35128:24;35182:14;:23::i;:::-;-1:-1:-1;;;;;35173:46:1;;;;;;;;;;;35053:174;;:::o;31365:348::-;31458:4;31160:16;;;:7;:16;;;;;;-1:-1:-1;;;;;31160:16:1;31475:73;;;;-1:-1:-1;;;31475:73:1;;8728:2:2;31475:73:1;;;8710:21:2;8767:2;8747:18;;;8740:30;8806:34;8786:18;;;8779:62;-1:-1:-1;;;8857:18:2;;;8850:42;8909:19;;31475:73:1;8526:408:2;31475:73:1;31559:13;31575:23;31590:7;31575:14;:23::i;:::-;31559:39;;31628:5;-1:-1:-1;;;;;31617:16:1;:7;-1:-1:-1;;;;;31617:16:1;;:51;;;;31661:7;-1:-1:-1;;;;;31637:31:1;:20;31649:7;31637:11;:20::i;:::-;-1:-1:-1;;;;;31637:31:1;;31617:51;:87;;;-1:-1:-1;;;;;;28457:25:1;;;28433:4;28457:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;31672:32;31609:96;31365:348;-1:-1:-1;;;;31365:348:1:o;34357:578::-;34516:4;-1:-1:-1;;;;;34489:31:1;:23;34504:7;34489:14;:23::i;:::-;-1:-1:-1;;;;;34489:31:1;;34481:85;;;;-1:-1:-1;;;34481:85:1;;9141:2:2;34481:85:1;;;9123:21:2;9180:2;9160:18;;;9153:30;9219:34;9199:18;;;9192:62;-1:-1:-1;;;9270:18:2;;;9263:39;9319:19;;34481:85:1;8939:405:2;34481:85:1;-1:-1:-1;;;;;34585:16:1;;34577:65;;;;-1:-1:-1;;;34577:65:1;;9551:2:2;34577:65:1;;;9533:21:2;9590:2;9570:18;;;9563:30;9629:34;9609:18;;;9602:62;-1:-1:-1;;;9680:18:2;;;9673:34;9724:19;;34577:65:1;9349:400:2;34577:65:1;34759:29;34776:1;34780:7;34759:8;:29::i;:::-;-1:-1:-1;;;;;34801:15:1;;;;;;:9;:15;;;;;:20;;34820:1;;34801:15;:20;;34820:1;;34801:20;:::i;:::-;;;;-1:-1:-1;;;;;;;34832:13:1;;;;;;:9;:13;;;;;:18;;34849:1;;34832:13;:18;;34849:1;;34832:18;:::i;:::-;;;;-1:-1:-1;;34861:16:1;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;34861:21:1;-1:-1:-1;;;;;34861:21:1;;;;;;;;;34900:27;;34861:16;;34900:27;;;;;;;34357:578;;;:::o;35369:315::-;35524:8;-1:-1:-1;;;;;35515:17:1;:5;-1:-1:-1;;;;;35515:17:1;;35507:55;;;;-1:-1:-1;;;35507:55:1;;10351:2:2;35507:55:1;;;10333:21:2;10390:2;10370:18;;;10363:30;10429:27;10409:18;;;10402:55;10474:18;;35507:55:1;10149:349:2;35507:55:1;-1:-1:-1;;;;;35573:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;35573:46:1;;;;;;;;;;35635:41;;540::2;;;35635::1;;513:18:2;35635:41:1;;;;;;;35369:315;;;:::o;30443:::-;30600:28;30610:4;30616:2;30620:7;30600:9;:28::i;:::-;30647:48;30670:4;30676:2;30680:7;30689:5;30647:22;:48::i;:::-;30639:111;;;;-1:-1:-1;;;30639:111:1;;;;;;;:::i;1936:723::-;1992:13;2213:5;2222:1;2213:10;2209:53;;-1:-1:-1;;2240:10:1;;;;;;;;;;;;-1:-1:-1;;;2240:10:1;;;;;1936:723::o;2209:53::-;2287:5;2272:12;2328:78;2335:9;;2328:78;;2361:8;;;;:::i;:::-;;-1:-1:-1;2384:10:1;;-1:-1:-1;2392:2:1;2384:10;;:::i;:::-;;;2328:78;;;2416:19;2448:6;2438:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2438:17:1;;2416:39;;2466:154;2473:10;;2466:154;;2500:11;2510:1;2500:11;;:::i;:::-;;-1:-1:-1;2569:10:1;2577:2;2569:5;:10;:::i;:::-;2556:24;;:2;:24;:::i;:::-;2543:39;;2526:6;2533;2526:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;2526:56:1;;;;;;;;-1:-1:-1;2597:11:1;2606:2;2597:11;;:::i;:::-;;;2466:154;;36249:799;36404:4;-1:-1:-1;;;;;36425:13:1;;8261:20;8309:8;36421:620;;36461:72;;-1:-1:-1;;;36461:72:1;;-1:-1:-1;;;;;36461:36:1;;;;;:72;;4454:10;;36512:4;;36518:7;;36527:5;;36461:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;36461:72:1;;;;;;;;-1:-1:-1;;36461:72:1;;;;;;;;;;;;:::i;:::-;;;36457:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36703:6;:13;36720:1;36703:18;36699:272;;36746:60;;-1:-1:-1;;;36746:60:1;;;;;;;:::i;36699:272::-;36921:6;36915:13;36906:6;36902:2;36898:15;36891:38;36457:529;-1:-1:-1;;;;;;36584:51:1;-1:-1:-1;;;36584:51:1;;-1:-1:-1;36577:58:1;;36421:620;-1:-1:-1;37025:4:1;36249:799;;;;;;:::o;14:131:2:-;-1:-1:-1;;;;;;88:32:2;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:2;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:2;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:2:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:2;;1343:180;-1:-1:-1;1343:180:2:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:2;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:2:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:2;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:2;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8051:470::-;8230:3;8268:6;8262:13;8284:53;8330:6;8325:3;8318:4;8310:6;8306:17;8284:53;:::i;:::-;8400:13;;8359:16;;;;8422:57;8400:13;8359:16;8456:4;8444:17;;8422:57;:::i;:::-;8495:20;;8051:470;-1:-1:-1;;;;8051:470:2:o;9754:127::-;9815:10;9810:3;9806:20;9803:1;9796:31;9846:4;9843:1;9836:15;9870:4;9867:1;9860:15;9886:125;9926:4;9954:1;9951;9948:8;9945:34;;;9959:18;;:::i;:::-;-1:-1:-1;9996:9:2;;9886:125::o;10016:128::-;10056:3;10087:1;10083:6;10080:1;10077:13;10074:39;;;10093:18;;:::i;:::-;-1:-1:-1;10129:9:2;;10016:128::o;10503:414::-;10705:2;10687:21;;;10744:2;10724:18;;;10717:30;10783:34;10778:2;10763:18;;10756:62;-1:-1:-1;;;10849:2:2;10834:18;;10827:48;10907:3;10892:19;;10503:414::o;10922:135::-;10961:3;10982:17;;;10979:43;;11002:18;;:::i;:::-;-1:-1:-1;11049:1:2;11038:13;;10922:135::o;11062:127::-;11123:10;11118:3;11114:20;11111:1;11104:31;11154:4;11151:1;11144:15;11178:4;11175:1;11168:15;11194:120;11234:1;11260;11250:35;;11265:18;;:::i;:::-;-1:-1:-1;11299:9:2;;11194:120::o;11319:112::-;11351:1;11377;11367:35;;11382:18;;:::i;:::-;-1:-1:-1;11416:9:2;;11319:112::o;11436:127::-;11497:10;11492:3;11488:20;11485:1;11478:31;11528:4;11525:1;11518:15;11552:4;11549:1;11542:15;11568:489;-1:-1:-1;;;;;11837:15:2;;;11819:34;;11889:15;;11884:2;11869:18;;11862:43;11936:2;11921:18;;11914:34;;;11984:3;11979:2;11964:18;;11957:31;;;11762:4;;12005:46;;12031:19;;12023:6;12005:46;:::i;:::-;11997:54;11568:489;-1:-1:-1;;;;;;11568:489:2:o;12062:249::-;12131:6;12184:2;12172:9;12163:7;12159:23;12155:32;12152:52;;;12200:1;12197;12190:12;12152:52;12232:9;12226:16;12251:30;12275:5;12251:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    24338,
    37749
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD64 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE21 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE4B JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA2 JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF4 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x1003 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0x1003 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43A JUMPI POP PUSH2 0x43A DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 PUSH2 0x743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x623 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0x1003 JUMP JUMPDEST PUSH2 0x61F CALLER DUP4 DUP4 PUSH2 0xA48 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62D CALLER DUP4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103D JUMP JUMPDEST PUSH2 0x655 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB16 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73C JUMP JUMPDEST DUP1 PUSH2 0x71B DUP5 PUSH2 0xB49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x108E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x778 DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x870 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x865 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x8A0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BB DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x985 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x990 PUSH1 0x0 DUP3 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B9 SWAP1 DUP5 SWAP1 PUSH2 0x10D3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E7 SWAP1 DUP5 SWAP1 PUSH2 0x10EA JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB21 DUP5 DUP5 DUP5 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xB2D DUP5 DUP5 DUP5 DUP5 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB70 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB9A JUMPI DUP1 PUSH2 0xB84 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP2 POP PUSH2 0xB93 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1183 JUMP JUMPDEST SWAP2 POP PUSH2 0xB74 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB5 JUMPI PUSH2 0xBB5 PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDF JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A0 JUMPI PUSH2 0xBF4 PUSH1 0x1 DUP4 PUSH2 0x10D3 JUMP JUMPDEST SWAP2 POP PUSH2 0xC01 PUSH1 0xA DUP7 PUSH2 0x1197 JUMP JUMPDEST PUSH2 0xC0C SWAP1 PUSH1 0x30 PUSH2 0x10EA JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC21 JUMPI PUSH2 0xC21 PUSH2 0x11AB JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC43 PUSH1 0xA DUP7 PUSH2 0x1183 JUMP JUMPDEST SWAP5 POP PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD40 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8E SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11C1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC6 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD26 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCFC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1102 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73C DUP2 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD9C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD84 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x655 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDC5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE3D DUP4 PUSH2 0xE05 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE69 DUP5 PUSH2 0xE05 JUMP JUMPDEST SWAP3 POP PUSH2 0xE77 PUSH1 0x20 DUP6 ADD PUSH2 0xE05 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP3 PUSH2 0xE05 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBE DUP4 PUSH2 0xE05 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xED3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF13 DUP6 PUSH2 0xE05 JUMP JUMPDEST SWAP4 POP PUSH2 0xF21 PUSH1 0x20 DUP7 ADD PUSH2 0xE05 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF6B JUMPI PUSH2 0xF6B PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF93 JUMPI PUSH2 0xF93 PUSH2 0xEDE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFEC DUP4 PUSH2 0xE05 JUMP JUMPDEST SWAP2 POP PUSH2 0xFFA PUSH1 0x20 DUP5 ADD PUSH2 0xE05 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1017 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1037 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x10A0 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD81 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10B4 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD81 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E5 JUMPI PUSH2 0x10E5 PUSH2 0x10BD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10FD JUMPI PUSH2 0x10FD PUSH2 0x10BD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1166 JUMPI PUSH2 0x1166 PUSH2 0x10BD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1192 JUMPI PUSH2 0x1192 PUSH2 0x116D JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A6 JUMPI PUSH2 0x11A6 PUSH2 0x116D JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F4 SWAP1 DUP4 ADD DUP5 PUSH2 0xDAD JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73C DUP2 PUSH2 0xD4B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH30 0xA36728963CF276456403CCBEC1DB411FC2D814494238081F4BE5BFF84662 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "GT",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "88": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "94": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "98": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "101": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "REVERT",
      "path": "1"
    },
    "102": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "139": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "REVERT",
      "path": "1"
    },
    "140": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "153": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "159": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "174": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "175": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "181": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "185": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "186": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "196": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "EQ",
      "path": "1"
    },
    "203": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "207": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "208": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "DUP1",
      "path": "1"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        24338,
        37749
      ],
      "op": "REVERT",
      "path": "1"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD64"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        25313,
        25618
      ],
      "op": "JUMP",
      "path": "1"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        25313,
        25618
      ],
      "op": "JUMP",
      "path": "1"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "DUP1",
      "path": "1"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "SUB",
      "path": "1"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "RETURN",
      "path": "1"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        26258,
        26358
      ],
      "op": "JUMP",
      "path": "1"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDD9"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        26258,
        26358
      ],
      "op": "JUMP",
      "path": "1"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDEC"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        27817,
        28038
      ],
      "op": "JUMP",
      "path": "1"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        27817,
        28038
      ],
      "op": "JUMP",
      "path": "1"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE21"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        27340,
        27751
      ],
      "op": "JUMP",
      "path": "1"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A6"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        27340,
        27751
      ],
      "op": "JUMP",
      "path": "1"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "STOP",
      "path": "1"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28567,
        28906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28567,
        28906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28567,
        28906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28567,
        28906
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28567,
        28906
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28567,
        28906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE4B"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        28567,
        28906
      ],
      "op": "JUMP",
      "path": "1"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28567,
        28906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28567,
        28906
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4BB"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        28567,
        28906
      ],
      "op": "JUMP",
      "path": "1"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28977,
        29162
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28977,
        29162
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28977,
        29162
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28977,
        29162
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28977,
        29162
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28977,
        29162
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE4B"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        28977,
        29162
      ],
      "op": "JUMP",
      "path": "1"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28977,
        29162
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28977,
        29162
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4EC"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        28977,
        29162
      ],
      "op": "JUMP",
      "path": "1"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25952,
        26191
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25952,
        26191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25952,
        26191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25952,
        26191
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25952,
        26191
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25952,
        26191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDEC"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        25952,
        26191
      ],
      "op": "JUMP",
      "path": "1"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25952,
        26191
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25952,
        26191
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x507"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        25952,
        26191
      ],
      "op": "JUMP",
      "path": "1"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE87"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        25682,
        25890
      ],
      "op": "JUMP",
      "path": "1"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x57E"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        25682,
        25890
      ],
      "op": "JUMP",
      "path": "1"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        26427,
        26531
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        26427,
        26531
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        26427,
        26531
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x605"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        26427,
        26531
      ],
      "op": "JUMP",
      "path": "1"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28110,
        28265
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28110,
        28265
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28110,
        28265
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28110,
        28265
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28110,
        28265
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28110,
        28265
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEA2"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        28110,
        28265
      ],
      "op": "JUMP",
      "path": "1"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28110,
        28265
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28110,
        28265
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x614"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        28110,
        28265
      ],
      "op": "JUMP",
      "path": "1"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEF4"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29233,
        29561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x623"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29233,
        29561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26602,
        26936
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26602,
        26936
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26602,
        26936
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26602,
        26936
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26602,
        26936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26602,
        26936
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDEC"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        26602,
        26936
      ],
      "op": "JUMP",
      "path": "1"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26602,
        26936
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26602,
        26936
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x65B"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        26602,
        26936
      ],
      "op": "JUMP",
      "path": "1"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28336,
        28500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28336,
        28500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28336,
        28500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28336,
        28500
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28336,
        28500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28336,
        28500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFD0"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        28336,
        28500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28336,
        28500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "DUP3",
      "path": "1"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "AND",
      "path": "1"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28433,
        28437
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "DUP4",
      "path": "1"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "AND",
      "path": "1"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "DUP3",
      "path": "1"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "AND",
      "path": "1"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28336,
        28500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25415,
        25419
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25452,
        25492
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25452,
        25492
      ],
      "op": "AND",
      "path": "1"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25452,
        25492
      ],
      "op": "EQ",
      "path": "1"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25452,
        25492
      ],
      "op": "DUP1",
      "path": "1"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25452,
        25557
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25452,
        25557
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25509,
        25557
      ],
      "op": "DUP3",
      "path": "1"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25509,
        25557
      ],
      "op": "AND",
      "path": "1"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25509,
        25557
      ],
      "op": "EQ",
      "path": "1"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25452,
        25557
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25452,
        25610
      ],
      "op": "DUP1",
      "path": "1"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25452,
        25610
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25452,
        25610
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        18191,
        18231
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        18191,
        18231
      ],
      "op": "AND",
      "path": "1"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        18191,
        18231
      ],
      "op": "EQ",
      "path": "1"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25574,
        25610
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25432,
        25610
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        25313,
        25618
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        25313,
        25618
      ],
      "op": "JUMP",
      "path": "1"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        26312,
        26325
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        26345,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1003"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        26338,
        26350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "ADD",
      "path": "1"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DIV",
      "path": "1"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "MUL",
      "path": "1"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "ADD",
      "path": "1"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP2",
      "path": "1"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "ADD",
      "path": "1"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP2",
      "path": "1"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP2",
      "path": "1"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "ADD",
      "path": "1"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP3",
      "path": "1"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1003"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        26338,
        26350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "LT",
      "path": "1"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP4",
      "path": "1"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DIV",
      "path": "1"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "MUL",
      "path": "1"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP4",
      "path": "1"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "ADD",
      "path": "1"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "JUMP",
      "path": "1"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP3",
      "path": "1"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "ADD",
      "path": "1"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP2",
      "path": "1"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP2",
      "path": "1"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "ADD",
      "path": "1"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "ADD",
      "path": "1"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP1",
      "path": "1"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP4",
      "path": "1"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "GT",
      "path": "1"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP3",
      "path": "1"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SUB",
      "path": "1"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "AND",
      "path": "1"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "DUP3",
      "path": "1"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "ADD",
      "path": "1"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "POP",
      "path": "1"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "POP",
      "path": "1"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "POP",
      "path": "1"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "POP",
      "path": "1"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "POP",
      "path": "1"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        26338,
        26350
      ],
      "op": "POP",
      "path": "1"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        26258,
        26358
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        26258,
        26358
      ],
      "op": "JUMP",
      "path": "1"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        27817,
        28038
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        27893,
        27900
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 4
    },
    "784": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31167
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "791": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "794": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "AND",
      "path": "1"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 5,
      "value": "0x38A"
    },
    "808": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "DUP2",
      "path": "1"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "823": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "DUP3",
      "path": "1"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "ADD",
      "path": "1"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "DUP1",
      "path": "1"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "SUB",
      "path": "1"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        27913,
        27986
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 6,
      "value": "0x0"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "911": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "DUP2",
      "path": "1"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28021
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "921": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "AND",
      "path": "1"
    },
    "932": {
      "fn": "ERC721.getApproved",
      "offset": [
        28006,
        28030
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        27817,
        28038
      ],
      "op": "JUMP",
      "path": "1"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        27421,
        27434
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        27437,
        27460
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        27452,
        27459
      ],
      "op": "DUP3",
      "path": "1"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        27437,
        27451
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x507"
    },
    "944": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        27437,
        27460
      ],
      "op": "JUMP",
      "path": "1"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        27437,
        27460
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        27421,
        27460
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        27421,
        27460
      ],
      "op": "POP",
      "path": "1"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        27485,
        27490
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 7
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        27479,
        27490
      ],
      "op": "AND",
      "path": "1"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        27479,
        27481
      ],
      "op": "DUP4",
      "path": "1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "ERC721.approve",
      "offset": [
        27479,
        27490
      ],
      "op": "AND",
      "path": "1"
    },
    "968": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        27479,
        27490
      ],
      "op": "SUB",
      "path": "1"
    },
    "969": {
      "fn": "ERC721.approve",
      "offset": [
        27471,
        27528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41E"
    },
    "972": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        27471,
        27528
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "973": {
      "fn": "ERC721.approve",
      "offset": [
        27471,
        27528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "975": {
      "fn": "ERC721.approve",
      "offset": [
        27471,
        27528
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "976": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "980": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "982": {
      "op": "SHL"
    },
    "983": {
      "fn": "ERC721.approve",
      "offset": [
        27471,
        27528
      ],
      "op": "DUP2",
      "path": "1"
    },
    "984": {
      "fn": "ERC721.approve",
      "offset": [
        27471,
        27528
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "987": {
      "fn": "ERC721.approve",
      "offset": [
        27471,
        27528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "989": {
      "fn": "ERC721.approve",
      "offset": [
        27471,
        27528
      ],
      "op": "DUP3",
      "path": "1"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        27471,
        27528
      ],
      "op": "ADD",
      "path": "1"
    },
    "991": {
      "op": "MSTORE"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "996": {
      "op": "DUP3"
    },
    "997": {
      "op": "ADD"
    },
    "998": {
      "op": "MSTORE"
    },
    "999": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1034": {
      "op": "DUP3"
    },
    "1035": {
      "op": "ADD"
    },
    "1036": {
      "op": "MSTORE"
    },
    "1037": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1044": {
      "op": "DUP3"
    },
    "1045": {
      "op": "ADD"
    },
    "1046": {
      "op": "MSTORE"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1049": {
      "op": "ADD"
    },
    "1050": {
      "fn": "ERC721.approve",
      "offset": [
        27471,
        27528
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1053": {
      "op": "JUMP"
    },
    "1054": {
      "fn": "ERC721.approve",
      "offset": [
        27471,
        27528
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1055": {
      "fn": "Context._msgSender",
      "offset": [
        4454,
        4464
      ],
      "op": "CALLER",
      "path": "1",
      "statement": 8
    },
    "1056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1062": {
      "op": "SHL"
    },
    "1063": {
      "op": "SUB"
    },
    "1064": {
      "fn": "ERC721.approve",
      "offset": [
        27563,
        27584
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 9
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        27563,
        27584
      ],
      "op": "AND",
      "path": "1"
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        27563,
        27584
      ],
      "op": "EQ",
      "path": "1"
    },
    "1067": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        27563,
        27584
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1068": {
      "fn": "ERC721.approve",
      "offset": [
        27563,
        27625
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43A"
    },
    "1071": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        27563,
        27625
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1072": {
      "op": "POP"
    },
    "1073": {
      "fn": "ERC721.approve",
      "offset": [
        27588,
        27625
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x43A"
    },
    "1076": {
      "fn": "ERC721.approve",
      "offset": [
        27605,
        27610
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1077": {
      "fn": "Context._msgSender",
      "offset": [
        4454,
        4464
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1078": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28336,
        28500
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FA"
    },
    "1081": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        28336,
        28500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1082": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        27588,
        27625
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1083": {
      "fn": "ERC721.approve",
      "offset": [
        27541,
        27709
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4AC"
    },
    "1086": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        27541,
        27709
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1087": {
      "fn": "ERC721.approve",
      "offset": [
        27541,
        27709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1089": {
      "fn": "ERC721.approve",
      "offset": [
        27541,
        27709
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        27541,
        27709
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        27541,
        27709
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1101": {
      "fn": "ERC721.approve",
      "offset": [
        27541,
        27709
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1103": {
      "fn": "ERC721.approve",
      "offset": [
        27541,
        27709
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        27541,
        27709
      ],
      "op": "ADD",
      "path": "1"
    },
    "1105": {
      "op": "MSTORE"
    },
    "1106": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1110": {
      "op": "DUP3"
    },
    "1111": {
      "op": "ADD"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1148": {
      "op": "DUP3"
    },
    "1149": {
      "op": "ADD"
    },
    "1150": {
      "op": "MSTORE"
    },
    "1151": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1186": {
      "op": "DUP3"
    },
    "1187": {
      "op": "ADD"
    },
    "1188": {
      "op": "MSTORE"
    },
    "1189": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1191": {
      "op": "ADD"
    },
    "1192": {
      "fn": "ERC721.approve",
      "offset": [
        27541,
        27709
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1195": {
      "op": "JUMP"
    },
    "1196": {
      "fn": "ERC721.approve",
      "offset": [
        27541,
        27709
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1197": {
      "fn": "ERC721.approve",
      "offset": [
        27722,
        27743
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 10,
      "value": "0x4B6"
    },
    "1200": {
      "fn": "ERC721.approve",
      "offset": [
        27731,
        27733
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        27735,
        27742
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1202": {
      "fn": "ERC721.approve",
      "offset": [
        27722,
        27730
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x743"
    },
    "1205": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        27722,
        27743
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1206": {
      "fn": "ERC721.approve",
      "offset": [
        27722,
        27743
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        27410,
        27751
      ],
      "op": "POP",
      "path": "1"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "POP",
      "path": "1"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        27340,
        27751
      ],
      "op": "POP",
      "path": "1"
    },
    "1210": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        27340,
        27751
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1211": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28567,
        28906
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28762,
        28803
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 11,
      "value": "0x4C5"
    },
    "1215": {
      "fn": "Context._msgSender",
      "offset": [
        4454,
        4464
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1216": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28795,
        28802
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28762,
        28780
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B1"
    },
    "1220": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        28762,
        28803
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1221": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        28762,
        28803
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1222": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E1"
    },
    "1225": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1226": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1228": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1229": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1233": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1235": {
      "op": "SHL"
    },
    "1236": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1240": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "ADD",
      "path": "1"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1244": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103D"
    },
    "1248": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        28754,
        28857
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28754,
        28857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28870,
        28898
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0x4B6"
    },
    "1253": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28880,
        28884
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28886,
        28888
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28890,
        28897
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        28870,
        28879
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A8"
    },
    "1259": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        28870,
        28898
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1260": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        28977,
        29162
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1261": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 13,
      "value": "0x4B6"
    },
    "1264": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29132,
        29136
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29138,
        29140
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29142,
        29149
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1269": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1273": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "ADD",
      "path": "1"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1276": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1280": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29154
      ],
      "op": "POP",
      "path": "1"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29115,
        29131
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x623"
    },
    "1286": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29115,
        29154
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1287": {
      "fn": "ERC721.ownerOf",
      "offset": [
        25952,
        26191
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26024,
        26031
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1290": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26076
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26076
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26076
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26067
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1295": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26076
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1297": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26076
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26076
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1300": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26076
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26076
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26076
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1309": {
      "op": "SHL"
    },
    "1310": {
      "op": "SUB"
    },
    "1311": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26076
      ],
      "op": "AND",
      "path": "1"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26060,
        26076
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1313": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26087,
        26160
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 14,
      "value": "0x274"
    },
    "1316": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26087,
        26160
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1317": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26087,
        26160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1319": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26087,
        26160
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1320": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26087,
        26160
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26087,
        26160
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1331": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26087,
        26160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1333": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26087,
        26160
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26087,
        26160
      ],
      "op": "ADD",
      "path": "1"
    },
    "1335": {
      "op": "MSTORE"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1340": {
      "op": "DUP3"
    },
    "1341": {
      "op": "ADD"
    },
    "1342": {
      "op": "MSTORE"
    },
    "1343": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1378": {
      "op": "DUP3"
    },
    "1379": {
      "op": "ADD"
    },
    "1380": {
      "op": "MSTORE"
    },
    "1381": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1396": {
      "op": "DUP3"
    },
    "1397": {
      "op": "ADD"
    },
    "1398": {
      "op": "MSTORE"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1401": {
      "op": "ADD"
    },
    "1402": {
      "fn": "ERC721.ownerOf",
      "offset": [
        26087,
        26160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1405": {
      "op": "JUMP"
    },
    "1406": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25682,
        25890
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25754,
        25761
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1415": {
      "op": "SHL"
    },
    "1416": {
      "op": "SUB"
    },
    "1417": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25782,
        25801
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 15
    },
    "1418": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        25782,
        25801
      ],
      "op": "AND",
      "path": "1"
    },
    "1419": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25774,
        25848
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5E9"
    },
    "1422": {
      "branch": 54,
      "fn": "ERC721.balanceOf",
      "offset": [
        25774,
        25848
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25774,
        25848
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1425": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25774,
        25848
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1426": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1430": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1432": {
      "op": "SHL"
    },
    "1433": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25774,
        25848
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25774,
        25848
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1435": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1437": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25774,
        25848
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1439": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25774,
        25848
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25774,
        25848
      ],
      "op": "ADD",
      "path": "1"
    },
    "1441": {
      "op": "MSTORE"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1446": {
      "op": "DUP3"
    },
    "1447": {
      "op": "ADD"
    },
    "1448": {
      "op": "MSTORE"
    },
    "1449": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1484": {
      "op": "DUP3"
    },
    "1485": {
      "op": "ADD"
    },
    "1486": {
      "op": "MSTORE"
    },
    "1487": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1503": {
      "op": "DUP3"
    },
    "1504": {
      "op": "ADD"
    },
    "1505": {
      "op": "MSTORE"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1508": {
      "op": "ADD"
    },
    "1509": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25774,
        25848
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1512": {
      "op": "JUMP"
    },
    "1513": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25774,
        25848
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1514": {
      "op": "POP"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1519": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1521": {
      "op": "SHL"
    },
    "1522": {
      "op": "SUB"
    },
    "1523": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "AND",
      "path": "1",
      "statement": 16
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1526": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25875
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1531": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1533": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1536": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        25866,
        25882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        25682,
        25890
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1541": {
      "fn": "ERC721.symbol",
      "offset": [
        26427,
        26531
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1542": {
      "fn": "ERC721.symbol",
      "offset": [
        26483,
        26496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1544": {
      "fn": "ERC721.symbol",
      "offset": [
        26516,
        26523
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 17,
      "value": "0x1"
    },
    "1546": {
      "fn": "ERC721.symbol",
      "offset": [
        26509,
        26523
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        26509,
        26523
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1548": {
      "fn": "ERC721.symbol",
      "offset": [
        26509,
        26523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x289"
    },
    "1551": {
      "fn": "ERC721.symbol",
      "offset": [
        26509,
        26523
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1552": {
      "fn": "ERC721.symbol",
      "offset": [
        26509,
        26523
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1003"
    },
    "1555": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        26509,
        26523
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1556": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28110,
        28265
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28205,
        28257
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 18,
      "value": "0x61F"
    },
    "1560": {
      "fn": "Context._msgSender",
      "offset": [
        4454,
        4464
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1561": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28238,
        28246
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1562": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28248,
        28256
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1563": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28205,
        28223
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA48"
    },
    "1566": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        28205,
        28257
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28205,
        28257
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28110,
        28265
      ],
      "op": "POP",
      "path": "1"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        28110,
        28265
      ],
      "op": "POP",
      "path": "1"
    },
    "1570": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        28110,
        28265
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1571": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29408,
        29449
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 19,
      "value": "0x62D"
    },
    "1575": {
      "fn": "Context._msgSender",
      "offset": [
        4454,
        4464
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1576": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29441,
        29448
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1577": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29408,
        29426
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7B1"
    },
    "1580": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29408,
        29449
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1581": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29408,
        29449
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1582": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x649"
    },
    "1585": {
      "branch": 55,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1586": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1588": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1595": {
      "op": "SHL"
    },
    "1596": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1597": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1598": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1600": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "ADD",
      "path": "1"
    },
    "1601": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1604": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1605": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103D"
    },
    "1608": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29400,
        29503
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1609": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29400,
        29503
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1610": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29514,
        29553
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 20,
      "value": "0x655"
    },
    "1613": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29528,
        29532
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1614": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29534,
        29536
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1615": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29538,
        29545
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1616": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29547,
        29552
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1617": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29514,
        29527
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB16"
    },
    "1620": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        29514,
        29553
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1621": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29514,
        29553
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1622": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "POP",
      "path": "1"
    },
    "1623": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "POP",
      "path": "1"
    },
    "1624": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "POP",
      "path": "1"
    },
    "1625": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        29233,
        29561
      ],
      "op": "POP",
      "path": "1"
    },
    "1626": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        29233,
        29561
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1627": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26602,
        26936
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1628": {
      "fn": "ERC721._exists",
      "offset": [
        31136,
        31140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1630": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1631": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1632": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1633": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31167
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1635": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1637": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1638": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1640": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1641": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1642": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1643": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26675,
        26688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "1645": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26675,
        26688
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1648": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "op": "SUB"
    },
    "1654": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "AND",
      "path": "1"
    },
    "1655": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26701,
        26777
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 21,
      "value": "0x6DA"
    },
    "1658": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26701,
        26777
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1659": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26701,
        26777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1661": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26701,
        26777
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1662": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1668": {
      "op": "SHL"
    },
    "1669": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26701,
        26777
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1670": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26701,
        26777
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1673": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26701,
        26777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1675": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26701,
        26777
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1676": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26701,
        26777
      ],
      "op": "ADD",
      "path": "1"
    },
    "1677": {
      "op": "MSTORE"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1680": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1682": {
      "op": "DUP3"
    },
    "1683": {
      "op": "ADD"
    },
    "1684": {
      "op": "MSTORE"
    },
    "1685": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "MSTORE"
    },
    "1723": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1741": {
      "op": "SHL"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1744": {
      "op": "DUP3"
    },
    "1745": {
      "op": "ADD"
    },
    "1746": {
      "op": "MSTORE"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1749": {
      "op": "ADD"
    },
    "1750": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26701,
        26777
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "1753": {
      "op": "JUMP"
    },
    "1754": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26701,
        26777
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26790,
        26811
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1757": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26814,
        26824
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F1"
    },
    "1760": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 22,
      "value": "0x40"
    },
    "1762": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1763": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1764": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1766": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1767": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "ADD",
      "path": "1"
    },
    "1768": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1769": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1770": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1773": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1774": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1775": {
      "fn": "ERC721._baseURI",
      "offset": [
        27261,
        27270
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1776": {
      "fn": "ERC721._baseURI",
      "offset": [
        27184,
        27278
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1777": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26814,
        26824
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26790,
        26824
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26790,
        26824
      ],
      "op": "POP",
      "path": "1"
    },
    "1780": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26866,
        26867
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 23,
      "value": "0x0"
    },
    "1782": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26848,
        26855
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1783": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26863
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1784": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26867
      ],
      "op": "GT",
      "path": "1"
    },
    "1785": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x711"
    },
    "1788": {
      "branch": 56,
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1789": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1791": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1792": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1793": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1795": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "ADD",
      "path": "1"
    },
    "1796": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1798": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1800": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1802": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "POP",
      "path": "1"
    },
    "1805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x73C"
    },
    "1808": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1809": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26894,
        26901
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1811": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26903,
        26921
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x71B"
    },
    "1814": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26903,
        26910
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1815": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26903,
        26919
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB49"
    },
    "1818": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        26903,
        26921
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1819": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26903,
        26921
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1820": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1822": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1823": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1825": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "ADD",
      "path": "1"
    },
    "1826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x72C"
    },
    "1829": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1830": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1831": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1832": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x108E"
    },
    "1835": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        26877,
        26922
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1836": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1837": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1839": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1844": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "SUB",
      "path": "1"
    },
    "1845": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "SUB",
      "path": "1"
    },
    "1846": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1847": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1848": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1849": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26877,
        26922
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26842,
        26928
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26835,
        26928
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "1854": {
      "fn": "ERC721.tokenURI",
      "offset": [
        26602,
        26936
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1855": {
      "op": "POP"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        26602,
        26936
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1859": {
      "fn": "ERC721._approve",
      "offset": [
        35053,
        35227
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1860": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 24,
      "value": "0x0"
    },
    "1862": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1863": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1864": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1865": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35143
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1867": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1869": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1870": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1872": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1873": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1874": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35157
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1875": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35157
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1882": {
      "op": "SHL"
    },
    "1883": {
      "op": "SUB"
    },
    "1884": {
      "op": "NOT"
    },
    "1885": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35157
      ],
      "op": "AND",
      "path": "1"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1888": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1892": {
      "op": "SHL"
    },
    "1893": {
      "op": "SUB"
    },
    "1894": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35157
      ],
      "op": "DUP5",
      "path": "1"
    },
    "1895": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35157
      ],
      "op": "AND",
      "path": "1"
    },
    "1896": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35157
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1897": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35157
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1898": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35157
      ],
      "op": "OR",
      "path": "1"
    },
    "1899": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35157
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1900": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35157
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1901": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35157
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1902": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1903": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1904": {
      "fn": "ERC721._approve",
      "offset": [
        35182,
        35205
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 25,
      "value": "0x778"
    },
    "1907": {
      "fn": "ERC721._approve",
      "offset": [
        35128,
        35152
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1908": {
      "fn": "ERC721._approve",
      "offset": [
        35182,
        35196
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x507"
    },
    "1911": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        35182,
        35205
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1912": {
      "fn": "ERC721._approve",
      "offset": [
        35182,
        35205
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1913": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1919": {
      "op": "SHL"
    },
    "1920": {
      "op": "SUB"
    },
    "1921": {
      "fn": "ERC721._approve",
      "offset": [
        35173,
        35219
      ],
      "op": "AND",
      "path": "1"
    },
    "1922": {
      "fn": "ERC721._approve",
      "offset": [
        35173,
        35219
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1955": {
      "fn": "ERC721._approve",
      "offset": [
        35173,
        35219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1957": {
      "fn": "ERC721._approve",
      "offset": [
        35173,
        35219
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1958": {
      "fn": "ERC721._approve",
      "offset": [
        35173,
        35219
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1960": {
      "fn": "ERC721._approve",
      "offset": [
        35173,
        35219
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1961": {
      "fn": "ERC721._approve",
      "offset": [
        35173,
        35219
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1962": {
      "fn": "ERC721._approve",
      "offset": [
        35173,
        35219
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1963": {
      "fn": "ERC721._approve",
      "offset": [
        35173,
        35219
      ],
      "op": "SUB",
      "path": "1"
    },
    "1964": {
      "fn": "ERC721._approve",
      "offset": [
        35173,
        35219
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1965": {
      "fn": "ERC721._approve",
      "offset": [
        35173,
        35219
      ],
      "op": "LOG4",
      "path": "1"
    },
    "1966": {
      "fn": "ERC721._approve",
      "offset": [
        35053,
        35227
      ],
      "op": "POP",
      "path": "1"
    },
    "1967": {
      "fn": "ERC721._approve",
      "offset": [
        35053,
        35227
      ],
      "op": "POP",
      "path": "1"
    },
    "1968": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        35053,
        35227
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1969": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31365,
        31713
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1970": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31458,
        31462
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1972": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1973": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1974": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1975": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31167
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1977": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1979": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1980": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1982": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1983": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1984": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1991": {
      "op": "SHL"
    },
    "1992": {
      "op": "SUB"
    },
    "1993": {
      "fn": "ERC721._exists",
      "offset": [
        31160,
        31176
      ],
      "op": "AND",
      "path": "1"
    },
    "1994": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31475,
        31548
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 26,
      "value": "0x82A"
    },
    "1997": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31475,
        31548
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1998": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31475,
        31548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2000": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31475,
        31548
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2001": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2005": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2007": {
      "op": "SHL"
    },
    "2008": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31475,
        31548
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2009": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31475,
        31548
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2012": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31475,
        31548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2014": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31475,
        31548
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2015": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31475,
        31548
      ],
      "op": "ADD",
      "path": "1"
    },
    "2016": {
      "op": "MSTORE"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2021": {
      "op": "DUP3"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "op": "MSTORE"
    },
    "2024": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2059": {
      "op": "DUP3"
    },
    "2060": {
      "op": "ADD"
    },
    "2061": {
      "op": "MSTORE"
    },
    "2062": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2077": {
      "op": "SHL"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2080": {
      "op": "DUP3"
    },
    "2081": {
      "op": "ADD"
    },
    "2082": {
      "op": "MSTORE"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2085": {
      "op": "ADD"
    },
    "2086": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31475,
        31548
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2089": {
      "op": "JUMP"
    },
    "2090": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31475,
        31548
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2091": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31559,
        31572
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2093": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31575,
        31598
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x835"
    },
    "2096": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31590,
        31597
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2097": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31575,
        31589
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x507"
    },
    "2100": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        31575,
        31598
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2101": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31575,
        31598
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2102": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31559,
        31598
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2103": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31559,
        31598
      ],
      "op": "POP",
      "path": "1"
    },
    "2104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31628,
        31633
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 27
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2111": {
      "op": "SHL"
    },
    "2112": {
      "op": "SUB"
    },
    "2113": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31633
      ],
      "op": "AND",
      "path": "1"
    },
    "2114": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31624
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2121": {
      "op": "SHL"
    },
    "2122": {
      "op": "SUB"
    },
    "2123": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31633
      ],
      "op": "AND",
      "path": "1"
    },
    "2124": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31633
      ],
      "op": "EQ",
      "path": "1"
    },
    "2125": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31668
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2126": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31668
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x870"
    },
    "2129": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31668
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2130": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31668
      ],
      "op": "POP",
      "path": "1"
    },
    "2131": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31661,
        31668
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2138": {
      "op": "SHL"
    },
    "2139": {
      "op": "SUB"
    },
    "2140": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31668
      ],
      "op": "AND",
      "path": "1"
    },
    "2141": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31657
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x865"
    },
    "2144": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31649,
        31656
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2145": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31648
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x30C"
    },
    "2148": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        31637,
        31657
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2149": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31657
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2156": {
      "op": "SHL"
    },
    "2157": {
      "op": "SUB"
    },
    "2158": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31668
      ],
      "op": "AND",
      "path": "1"
    },
    "2159": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31637,
        31668
      ],
      "op": "EQ",
      "path": "1"
    },
    "2160": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31668
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2161": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31704
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2162": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31704
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A0"
    },
    "2165": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31617,
        31704
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2166": {
      "op": "POP"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2173": {
      "op": "SHL"
    },
    "2174": {
      "op": "SUB"
    },
    "2175": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2176": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2177": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "AND",
      "path": "1"
    },
    "2178": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28433,
        28437
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2180": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2181": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2182": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2183": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2185": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2187": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2188": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2189": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2190": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2192": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2193": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2194": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28482
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2195": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2196": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "DUP9",
      "path": "1"
    },
    "2197": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "AND",
      "path": "1"
    },
    "2198": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2199": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2200": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2201": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2202": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2203": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2204": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2205": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "2207": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        28457,
        28492
      ],
      "op": "AND",
      "path": "1"
    },
    "2208": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31672,
        31704
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2209": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31609,
        31705
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2210": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        31365,
        31713
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2211": {
      "op": "POP"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "POP"
    },
    "2215": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        31365,
        31713
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2216": {
      "fn": "ERC721._transfer",
      "offset": [
        34357,
        34935
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        34516,
        34520
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 28
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2224": {
      "op": "SHL"
    },
    "2225": {
      "op": "SUB"
    },
    "2226": {
      "fn": "ERC721._transfer",
      "offset": [
        34489,
        34520
      ],
      "op": "AND",
      "path": "1"
    },
    "2227": {
      "fn": "ERC721._transfer",
      "offset": [
        34489,
        34512
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8BB"
    },
    "2230": {
      "fn": "ERC721._transfer",
      "offset": [
        34504,
        34511
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2231": {
      "fn": "ERC721._transfer",
      "offset": [
        34489,
        34503
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x507"
    },
    "2234": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        34489,
        34512
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2235": {
      "fn": "ERC721._transfer",
      "offset": [
        34489,
        34512
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2242": {
      "op": "SHL"
    },
    "2243": {
      "op": "SUB"
    },
    "2244": {
      "fn": "ERC721._transfer",
      "offset": [
        34489,
        34520
      ],
      "op": "AND",
      "path": "1"
    },
    "2245": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        34489,
        34520
      ],
      "op": "EQ",
      "path": "1"
    },
    "2246": {
      "fn": "ERC721._transfer",
      "offset": [
        34481,
        34566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x923"
    },
    "2249": {
      "branch": 57,
      "fn": "ERC721._transfer",
      "offset": [
        34481,
        34566
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2250": {
      "fn": "ERC721._transfer",
      "offset": [
        34481,
        34566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2252": {
      "fn": "ERC721._transfer",
      "offset": [
        34481,
        34566
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2253": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2257": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2259": {
      "op": "SHL"
    },
    "2260": {
      "fn": "ERC721._transfer",
      "offset": [
        34481,
        34566
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2261": {
      "fn": "ERC721._transfer",
      "offset": [
        34481,
        34566
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2264": {
      "fn": "ERC721._transfer",
      "offset": [
        34481,
        34566
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2266": {
      "fn": "ERC721._transfer",
      "offset": [
        34481,
        34566
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2267": {
      "fn": "ERC721._transfer",
      "offset": [
        34481,
        34566
      ],
      "op": "ADD",
      "path": "1"
    },
    "2268": {
      "op": "MSTORE"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2273": {
      "op": "DUP3"
    },
    "2274": {
      "op": "ADD"
    },
    "2275": {
      "op": "MSTORE"
    },
    "2276": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2311": {
      "op": "DUP3"
    },
    "2312": {
      "op": "ADD"
    },
    "2313": {
      "op": "MSTORE"
    },
    "2314": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2326": {
      "op": "SHL"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2329": {
      "op": "DUP3"
    },
    "2330": {
      "op": "ADD"
    },
    "2331": {
      "op": "MSTORE"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2334": {
      "op": "ADD"
    },
    "2335": {
      "fn": "ERC721._transfer",
      "offset": [
        34481,
        34566
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2338": {
      "op": "JUMP"
    },
    "2339": {
      "fn": "ERC721._transfer",
      "offset": [
        34481,
        34566
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2346": {
      "op": "SHL"
    },
    "2347": {
      "op": "SUB"
    },
    "2348": {
      "fn": "ERC721._transfer",
      "offset": [
        34585,
        34601
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 29
    },
    "2349": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        34585,
        34601
      ],
      "op": "AND",
      "path": "1"
    },
    "2350": {
      "fn": "ERC721._transfer",
      "offset": [
        34577,
        34642
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x985"
    },
    "2353": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        34577,
        34642
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2354": {
      "fn": "ERC721._transfer",
      "offset": [
        34577,
        34642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2356": {
      "fn": "ERC721._transfer",
      "offset": [
        34577,
        34642
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2357": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2363": {
      "op": "SHL"
    },
    "2364": {
      "fn": "ERC721._transfer",
      "offset": [
        34577,
        34642
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2365": {
      "fn": "ERC721._transfer",
      "offset": [
        34577,
        34642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2368": {
      "fn": "ERC721._transfer",
      "offset": [
        34577,
        34642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2370": {
      "fn": "ERC721._transfer",
      "offset": [
        34577,
        34642
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2371": {
      "fn": "ERC721._transfer",
      "offset": [
        34577,
        34642
      ],
      "op": "ADD",
      "path": "1"
    },
    "2372": {
      "op": "MSTORE"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2375": {
      "op": "DUP1"
    },
    "2376": {
      "op": "DUP3"
    },
    "2377": {
      "op": "ADD"
    },
    "2378": {
      "op": "MSTORE"
    },
    "2379": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2414": {
      "op": "DUP3"
    },
    "2415": {
      "op": "ADD"
    },
    "2416": {
      "op": "MSTORE"
    },
    "2417": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2424": {
      "op": "SHL"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2427": {
      "op": "DUP3"
    },
    "2428": {
      "op": "ADD"
    },
    "2429": {
      "op": "MSTORE"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2432": {
      "op": "ADD"
    },
    "2433": {
      "fn": "ERC721._transfer",
      "offset": [
        34577,
        34642
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2436": {
      "op": "JUMP"
    },
    "2437": {
      "fn": "ERC721._transfer",
      "offset": [
        34577,
        34642
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2438": {
      "fn": "ERC721._transfer",
      "offset": [
        34759,
        34788
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 30,
      "value": "0x990"
    },
    "2441": {
      "fn": "ERC721._transfer",
      "offset": [
        34776,
        34777
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2443": {
      "fn": "ERC721._transfer",
      "offset": [
        34780,
        34787
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "offset": [
        34759,
        34767
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x743"
    },
    "2447": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        34759,
        34788
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2448": {
      "fn": "ERC721._transfer",
      "offset": [
        34759,
        34788
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2455": {
      "op": "SHL"
    },
    "2456": {
      "op": "SUB"
    },
    "2457": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 31
    },
    "2458": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "AND",
      "path": "1"
    },
    "2459": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2461": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2462": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2463": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2464": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34810
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2466": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2468": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2469": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2471": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2472": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2473": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34821
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2474": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34821
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2475": {
      "fn": "ERC721._transfer",
      "offset": [
        34820,
        34821
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2477": {
      "fn": "ERC721._transfer",
      "offset": [
        34820,
        34821
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2478": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34816
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2479": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9B9"
    },
    "2482": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34821
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2483": {
      "fn": "ERC721._transfer",
      "offset": [
        34820,
        34821
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2484": {
      "fn": "ERC721._transfer",
      "offset": [
        34820,
        34821
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2485": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34821
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D3"
    },
    "2488": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        34801,
        34821
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2489": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34821
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2490": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34821
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2491": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34821
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2492": {
      "fn": "ERC721._transfer",
      "offset": [
        34801,
        34821
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2493": {
      "op": "POP"
    },
    "2494": {
      "op": "POP"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2501": {
      "op": "SHL"
    },
    "2502": {
      "op": "SUB"
    },
    "2503": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 32
    },
    "2504": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "AND",
      "path": "1"
    },
    "2505": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2507": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2508": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2509": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2510": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34841
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2512": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2514": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2515": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2517": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2518": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2519": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34850
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2520": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34850
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2521": {
      "fn": "ERC721._transfer",
      "offset": [
        34849,
        34850
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2523": {
      "fn": "ERC721._transfer",
      "offset": [
        34849,
        34850
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2524": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34845
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2525": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34850
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9E7"
    },
    "2528": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34850
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2529": {
      "fn": "ERC721._transfer",
      "offset": [
        34849,
        34850
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2530": {
      "fn": "ERC721._transfer",
      "offset": [
        34849,
        34850
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2531": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34850
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10EA"
    },
    "2534": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        34832,
        34850
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2535": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34850
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2536": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34850
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2537": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34850
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2538": {
      "fn": "ERC721._transfer",
      "offset": [
        34832,
        34850
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2539": {
      "op": "POP"
    },
    "2540": {
      "op": "POP"
    },
    "2541": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 33,
      "value": "0x0"
    },
    "2543": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2544": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2545": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34868
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2548": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2550": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2553": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2554": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2555": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2556": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2557": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2564": {
      "op": "SHL"
    },
    "2565": {
      "op": "SUB"
    },
    "2566": {
      "op": "NOT"
    },
    "2567": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "AND",
      "path": "1"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2574": {
      "op": "SHL"
    },
    "2575": {
      "op": "SUB"
    },
    "2576": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2577": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2578": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "AND",
      "path": "1"
    },
    "2579": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2580": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2581": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "OR",
      "path": "1"
    },
    "2582": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2583": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2584": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34882
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2585": {
      "fn": "ERC721._transfer",
      "offset": [
        34900,
        34927
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 34
    },
    "2586": {
      "fn": "ERC721._transfer",
      "offset": [
        34900,
        34927
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2587": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2588": {
      "fn": "ERC721._transfer",
      "offset": [
        34861,
        34877
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2589": {
      "fn": "ERC721._transfer",
      "offset": [
        34900,
        34927
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2590": {
      "fn": "ERC721._transfer",
      "offset": [
        34900,
        34927
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2591": {
      "fn": "ERC721._transfer",
      "offset": [
        34900,
        34927
      ],
      "op": "AND",
      "path": "1"
    },
    "2592": {
      "fn": "ERC721._transfer",
      "offset": [
        34900,
        34927
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2593": {
      "fn": "ERC721._transfer",
      "offset": [
        34900,
        34927
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2626": {
      "fn": "ERC721._transfer",
      "offset": [
        34900,
        34927
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2627": {
      "fn": "ERC721._transfer",
      "offset": [
        34900,
        34927
      ],
      "op": "LOG4",
      "path": "1"
    },
    "2628": {
      "fn": "ERC721._transfer",
      "offset": [
        34357,
        34935
      ],
      "op": "POP",
      "path": "1"
    },
    "2629": {
      "fn": "ERC721._transfer",
      "offset": [
        34357,
        34935
      ],
      "op": "POP",
      "path": "1"
    },
    "2630": {
      "fn": "ERC721._transfer",
      "offset": [
        34357,
        34935
      ],
      "op": "POP",
      "path": "1"
    },
    "2631": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        34357,
        34935
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2632": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35369,
        35684
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2633": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35524,
        35532
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 35
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2640": {
      "op": "SHL"
    },
    "2641": {
      "op": "SUB"
    },
    "2642": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35515,
        35532
      ],
      "op": "AND",
      "path": "1"
    },
    "2643": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35515,
        35520
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2644": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2650": {
      "op": "SHL"
    },
    "2651": {
      "op": "SUB"
    },
    "2652": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35515,
        35532
      ],
      "op": "AND",
      "path": "1"
    },
    "2653": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35515,
        35532
      ],
      "op": "SUB",
      "path": "1"
    },
    "2654": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35507,
        35562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAA9"
    },
    "2657": {
      "branch": 59,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35507,
        35562
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2658": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35507,
        35562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2660": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35507,
        35562
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2667": {
      "op": "SHL"
    },
    "2668": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35507,
        35562
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2669": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35507,
        35562
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2672": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35507,
        35562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2674": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35507,
        35562
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2675": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35507,
        35562
      ],
      "op": "ADD",
      "path": "1"
    },
    "2676": {
      "op": "MSTORE"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2681": {
      "op": "DUP3"
    },
    "2682": {
      "op": "ADD"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2717": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2719": {
      "op": "DUP3"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "op": "MSTORE"
    },
    "2722": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2724": {
      "op": "ADD"
    },
    "2725": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35507,
        35562
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2728": {
      "op": "JUMP"
    },
    "2729": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35507,
        35562
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2736": {
      "op": "SHL"
    },
    "2737": {
      "op": "SUB"
    },
    "2738": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 36
    },
    "2739": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2740": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "AND",
      "path": "1"
    },
    "2741": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2743": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2744": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2745": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2746": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2748": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2750": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2751": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2752": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2753": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2755": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2756": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2757": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35598
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2758": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2759": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2760": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "AND",
      "path": "1"
    },
    "2761": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2762": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2763": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2764": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2765": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2766": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2767": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2768": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2769": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2770": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35608
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2771": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2772": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2775": {
      "op": "NOT"
    },
    "2776": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "AND",
      "path": "1"
    },
    "2777": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2778": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2779": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2780": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2781": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2782": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "OR",
      "path": "1"
    },
    "2783": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2784": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2785": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35573,
        35619
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2786": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35635,
        35676
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 37
    },
    "2787": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35635,
        35676
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2788": {
      "op": "SWAP2"
    },
    "2789": {
      "op": "DUP3"
    },
    "2790": {
      "op": "MSTORE"
    },
    "2791": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35635,
        35676
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2824": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35635,
        35676
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2825": {
      "op": "ADD"
    },
    "2826": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35635,
        35676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2828": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35635,
        35676
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2829": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35635,
        35676
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2830": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35635,
        35676
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2831": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35635,
        35676
      ],
      "op": "SUB",
      "path": "1"
    },
    "2832": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35635,
        35676
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2833": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35635,
        35676
      ],
      "op": "LOG3",
      "path": "1"
    },
    "2834": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35369,
        35684
      ],
      "op": "POP",
      "path": "1"
    },
    "2835": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35369,
        35684
      ],
      "op": "POP",
      "path": "1"
    },
    "2836": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        35369,
        35684
      ],
      "op": "POP",
      "path": "1"
    },
    "2837": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        35369,
        35684
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2838": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30443,
        30758
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2839": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30600,
        30628
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 38,
      "value": "0xB21"
    },
    "2842": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30610,
        30614
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2843": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30616,
        30618
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2844": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30620,
        30627
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2845": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30600,
        30609
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A8"
    },
    "2848": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        30600,
        30628
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2849": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30600,
        30628
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2850": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30647,
        30695
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 39,
      "value": "0xB2D"
    },
    "2853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30670,
        30674
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2854": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30676,
        30678
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2855": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30680,
        30687
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2856": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30689,
        30694
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2857": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30647,
        30669
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC4A"
    },
    "2860": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        30647,
        30695
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2861": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        30647,
        30695
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2862": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30639,
        30750
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x655"
    },
    "2865": {
      "branch": 60,
      "fn": "ERC721._safeTransfer",
      "offset": [
        30639,
        30750
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2866": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30639,
        30750
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2868": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30639,
        30750
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2875": {
      "op": "SHL"
    },
    "2876": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30639,
        30750
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2877": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30639,
        30750
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2878": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30639,
        30750
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2880": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30639,
        30750
      ],
      "op": "ADD",
      "path": "1"
    },
    "2881": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30639,
        30750
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "2884": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30639,
        30750
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2885": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        30639,
        30750
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1102"
    },
    "2888": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        30639,
        30750
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2889": {
      "fn": "Strings.toString",
      "offset": [
        1936,
        2659
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2890": {
      "fn": "Strings.toString",
      "offset": [
        1992,
        2005
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        2213,
        2218
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2893": {
      "fn": "Strings.toString",
      "offset": [
        2222,
        2223
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2895": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        2213,
        2223
      ],
      "op": "SUB",
      "path": "1"
    },
    "2896": {
      "fn": "Strings.toString",
      "offset": [
        2209,
        2262
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB70"
    },
    "2899": {
      "branch": 61,
      "fn": "Strings.toString",
      "offset": [
        2209,
        2262
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2900": {
      "op": "POP"
    },
    "2901": {
      "op": "POP"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 40,
      "value": "0x40"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2905": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2910": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2911": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2912": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2915": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2920": {
      "op": "SHL"
    },
    "2921": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "ADD",
      "path": "1"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2926": {
      "fn": "Strings.toString",
      "offset": [
        2240,
        2250
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2927": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        1936,
        2659
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        2209,
        2262
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2929": {
      "fn": "Strings.toString",
      "offset": [
        2287,
        2292
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2930": {
      "fn": "Strings.toString",
      "offset": [
        2272,
        2284
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        2328,
        2406
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        2335,
        2344
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        2335,
        2344
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2935": {
      "fn": "Strings.toString",
      "offset": [
        2328,
        2406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB9A"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        2328,
        2406
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        2361,
        2369
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 41
    },
    "2940": {
      "fn": "Strings.toString",
      "offset": [
        2361,
        2369
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB84"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        2361,
        2369
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2944": {
      "fn": "Strings.toString",
      "offset": [
        2361,
        2369
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1154"
    },
    "2947": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2361,
        2369
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        2361,
        2369
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2949": {
      "fn": "Strings.toString",
      "offset": [
        2361,
        2369
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2950": {
      "op": "POP"
    },
    "2951": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 42,
      "value": "0xB93"
    },
    "2954": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2394
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2955": {
      "op": "POP"
    },
    "2956": {
      "fn": "Strings.toString",
      "offset": [
        2392,
        2394
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2394
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2394
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1183"
    },
    "2962": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2384,
        2394
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2963": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2394
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2394
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2965": {
      "fn": "Strings.toString",
      "offset": [
        2384,
        2394
      ],
      "op": "POP",
      "path": "1"
    },
    "2966": {
      "fn": "Strings.toString",
      "offset": [
        2328,
        2406
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB74"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        2328,
        2406
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2970": {
      "fn": "Strings.toString",
      "offset": [
        2328,
        2406
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2971": {
      "fn": "Strings.toString",
      "offset": [
        2416,
        2435
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2973": {
      "fn": "Strings.toString",
      "offset": [
        2448,
        2454
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2974": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2984": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "GT",
      "path": "1"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2986": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB5"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2990": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBB5"
    },
    "2993": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEDE"
    },
    "2996": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2438,
        2455
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "ADD",
      "path": "1"
    },
    "3009": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "NOT",
      "path": "1"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "AND",
      "path": "1"
    },
    "3013": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "ADD",
      "path": "1"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "ADD",
      "path": "1"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3021": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3023": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBDF"
    },
    "3026": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3027": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "ADD",
      "path": "1"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3032": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3033": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "3034": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "CALLDATACOPY",
      "path": "1"
    },
    "3036": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "ADD",
      "path": "1"
    },
    "3037": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3038": {
      "op": "POP"
    },
    "3039": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        2438,
        2455
      ],
      "op": "POP",
      "path": "1"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        2416,
        2455
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        2416,
        2455
      ],
      "op": "POP",
      "path": "1"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        2466,
        2620
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3044": {
      "fn": "Strings.toString",
      "offset": [
        2473,
        2483
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3045": {
      "fn": "Strings.toString",
      "offset": [
        2473,
        2483
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3046": {
      "fn": "Strings.toString",
      "offset": [
        2466,
        2620
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A0"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        2466,
        2620
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3050": {
      "fn": "Strings.toString",
      "offset": [
        2500,
        2511
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 43,
      "value": "0xBF4"
    },
    "3053": {
      "fn": "Strings.toString",
      "offset": [
        2510,
        2511
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3055": {
      "fn": "Strings.toString",
      "offset": [
        2500,
        2511
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3056": {
      "fn": "Strings.toString",
      "offset": [
        2500,
        2511
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10D3"
    },
    "3059": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2500,
        2511
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3060": {
      "fn": "Strings.toString",
      "offset": [
        2500,
        2511
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3061": {
      "fn": "Strings.toString",
      "offset": [
        2500,
        2511
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3062": {
      "op": "POP"
    },
    "3063": {
      "fn": "Strings.toString",
      "offset": [
        2569,
        2579
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 44,
      "value": "0xC01"
    },
    "3066": {
      "fn": "Strings.toString",
      "offset": [
        2577,
        2579
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3068": {
      "fn": "Strings.toString",
      "offset": [
        2569,
        2574
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3069": {
      "fn": "Strings.toString",
      "offset": [
        2569,
        2579
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1197"
    },
    "3072": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2569,
        2579
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3073": {
      "fn": "Strings.toString",
      "offset": [
        2569,
        2579
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3074": {
      "fn": "Strings.toString",
      "offset": [
        2556,
        2580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC0C"
    },
    "3077": {
      "fn": "Strings.toString",
      "offset": [
        2556,
        2580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3078": {
      "fn": "Strings.toString",
      "offset": [
        2556,
        2558
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x30"
    },
    "3080": {
      "fn": "Strings.toString",
      "offset": [
        2556,
        2580
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10EA"
    },
    "3083": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2556,
        2580
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3084": {
      "fn": "Strings.toString",
      "offset": [
        2556,
        2580
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3085": {
      "fn": "Strings.toString",
      "offset": [
        2543,
        2582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF8"
    },
    "3087": {
      "fn": "Strings.toString",
      "offset": [
        2543,
        2582
      ],
      "op": "SHL",
      "path": "1"
    },
    "3088": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2532
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3089": {
      "fn": "Strings.toString",
      "offset": [
        2533,
        2539
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3090": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3091": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3092": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3093": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "LT",
      "path": "1"
    },
    "3094": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC21"
    },
    "3097": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3098": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC21"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11AB"
    },
    "3104": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2526,
        2540
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3105": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3106": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3108": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "ADD",
      "path": "1"
    },
    "3109": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2540
      ],
      "op": "ADD",
      "path": "1"
    },
    "3110": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2582
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3115": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3117": {
      "op": "SHL"
    },
    "3118": {
      "op": "SUB"
    },
    "3119": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2582
      ],
      "op": "NOT",
      "path": "1"
    },
    "3120": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2582
      ],
      "op": "AND",
      "path": "1"
    },
    "3121": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2582
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3122": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2582
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3123": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3125": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2582
      ],
      "op": "BYTE",
      "path": "1"
    },
    "3126": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2582
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3127": {
      "fn": "Strings.toString",
      "offset": [
        2526,
        2582
      ],
      "op": "MSTORE8",
      "path": "1"
    },
    "3128": {
      "op": "POP"
    },
    "3129": {
      "fn": "Strings.toString",
      "offset": [
        2597,
        2608
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 45,
      "value": "0xC43"
    },
    "3132": {
      "fn": "Strings.toString",
      "offset": [
        2606,
        2608
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "3134": {
      "fn": "Strings.toString",
      "offset": [
        2597,
        2608
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3135": {
      "fn": "Strings.toString",
      "offset": [
        2597,
        2608
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1183"
    },
    "3138": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        2597,
        2608
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3139": {
      "fn": "Strings.toString",
      "offset": [
        2597,
        2608
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3140": {
      "fn": "Strings.toString",
      "offset": [
        2597,
        2608
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3141": {
      "fn": "Strings.toString",
      "offset": [
        2597,
        2608
      ],
      "op": "POP",
      "path": "1"
    },
    "3142": {
      "fn": "Strings.toString",
      "offset": [
        2466,
        2620
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBE3"
    },
    "3145": {
      "fn": "Strings.toString",
      "offset": [
        2466,
        2620
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36249,
        37048
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3147": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36404,
        36408
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3155": {
      "op": "SHL"
    },
    "3156": {
      "op": "SUB"
    },
    "3157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36425,
        36438
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36425,
        36438
      ],
      "op": "AND",
      "path": "1"
    },
    "3159": {
      "fn": "Address.isContract",
      "offset": [
        8261,
        8281
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "3160": {
      "fn": "Address.isContract",
      "offset": [
        8309,
        8317
      ],
      "op": "ISZERO",
      "path": "1",
      "statement": 46
    },
    "3161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36421,
        37041
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD40"
    },
    "3164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36421,
        37041
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3165": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3168": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3175": {
      "op": "SHL"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3184": {
      "op": "SHL"
    },
    "3185": {
      "op": "SUB"
    },
    "3186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36497
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3187": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36497
      ],
      "op": "AND",
      "path": "1"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36497
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36497
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x150B7A02"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36497
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3195": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC8E"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3199": {
      "fn": "Context._msgSender",
      "offset": [
        4454,
        4464
      ],
      "op": "CALLER",
      "path": "1"
    },
    "3200": {
      "fn": "Context._msgSender",
      "offset": [
        4454,
        4464
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36512,
        36516
      ],
      "op": "DUP10",
      "path": "1"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36512,
        36516
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36518,
        36525
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36518,
        36525
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36527,
        36532
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36527,
        36532
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "ADD",
      "path": "1"
    },
    "3210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11C1"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        36461,
        36533
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "SUB",
      "path": "1"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "DUP8",
      "path": "1"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "GAS",
      "path": "1"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "CALL",
      "path": "1"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "POP",
      "path": "1"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "POP",
      "path": "1"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "POP",
      "path": "1"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC9"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3239": {
      "op": "POP"
    },
    "3240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "ADD",
      "path": "1"
    },
    "3250": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3252": {
      "op": "NOT"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "AND",
      "path": "1"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "ADD",
      "path": "1"
    },
    "3256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCC6"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3264": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "ADD",
      "path": "1"
    },
    "3265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11FE"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        36461,
        36533
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36461,
        36533
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD26"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCF7"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "POP",
      "path": "1"
    },
    "3291": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "NOT",
      "path": "1"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "ADD",
      "path": "1"
    },
    "3298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "AND",
      "path": "1"
    },
    "3299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "ADD",
      "path": "1"
    },
    "3301": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3305": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3308": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "ADD",
      "path": "1"
    },
    "3314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "3315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xCFC"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3320": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "POP",
      "path": "1"
    },
    "3324": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3325": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "POP",
      "path": "1"
    },
    "3326": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36703,
        36709
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36703,
        36716
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3328": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36720,
        36721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3330": {
      "branch": 62,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36703,
        36721
      ],
      "op": "SUB",
      "path": "1"
    },
    "3331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36699,
        36971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD1E"
    },
    "3334": {
      "branch": 62,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36699,
        36971
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3335": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36746,
        36806
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 47,
      "value": "0x40"
    },
    "3337": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36746,
        36806
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3338": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3344": {
      "op": "SHL"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36746,
        36806
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36746,
        36806
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3347": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36746,
        36806
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3349": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36746,
        36806
      ],
      "op": "ADD",
      "path": "1"
    },
    "3350": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36746,
        36806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x381"
    },
    "3353": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36746,
        36806
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3354": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36746,
        36806
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1102"
    },
    "3357": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        36746,
        36806
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3358": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36699,
        36971
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3359": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36921,
        36927
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36915,
        36928
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36906,
        36912
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3362": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36902,
        36904
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3364": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36898,
        36913
      ],
      "op": "ADD",
      "path": "1"
    },
    "3365": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36891,
        36929
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3366": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36457,
        36986
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3371": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3373": {
      "op": "SHL"
    },
    "3374": {
      "op": "SUB"
    },
    "3375": {
      "op": "NOT"
    },
    "3376": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36584,
        36635
      ],
      "op": "AND",
      "path": "1",
      "statement": 48
    },
    "3377": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3384": {
      "op": "SHL"
    },
    "3385": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36584,
        36635
      ],
      "op": "EQ",
      "path": "1"
    },
    "3386": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36584,
        36635
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3387": {
      "op": "POP"
    },
    "3388": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36577,
        36635
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8A0"
    },
    "3391": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36577,
        36635
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3392": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36421,
        37041
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3393": {
      "op": "POP"
    },
    "3394": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        37025,
        37029
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 49,
      "value": "0x1"
    },
    "3396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36249,
        37048
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "3397": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36249,
        37048
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3398": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36249,
        37048
      ],
      "op": "POP",
      "path": "1"
    },
    "3399": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36249,
        37048
      ],
      "op": "POP",
      "path": "1"
    },
    "3400": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36249,
        37048
      ],
      "op": "POP",
      "path": "1"
    },
    "3401": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        36249,
        37048
      ],
      "op": "POP",
      "path": "1"
    },
    "3402": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        36249,
        37048
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3403": {
      "op": "JUMPDEST"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3410": {
      "op": "SHL"
    },
    "3411": {
      "op": "SUB"
    },
    "3412": {
      "op": "NOT"
    },
    "3413": {
      "op": "DUP2"
    },
    "3414": {
      "op": "AND"
    },
    "3415": {
      "op": "DUP2"
    },
    "3416": {
      "op": "EQ"
    },
    "3417": {
      "op": "PUSH2",
      "value": "0xD61"
    },
    "3420": {
      "op": "JUMPI"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3423": {
      "op": "DUP1"
    },
    "3424": {
      "op": "REVERT"
    },
    "3425": {
      "op": "JUMPDEST"
    },
    "3426": {
      "op": "POP"
    },
    "3427": {
      "jump": "o",
      "op": "JUMP"
    },
    "3428": {
      "op": "JUMPDEST"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3433": {
      "op": "DUP3"
    },
    "3434": {
      "op": "DUP5"
    },
    "3435": {
      "op": "SUB"
    },
    "3436": {
      "op": "SLT"
    },
    "3437": {
      "op": "ISZERO"
    },
    "3438": {
      "op": "PUSH2",
      "value": "0xD76"
    },
    "3441": {
      "op": "JUMPI"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3444": {
      "op": "DUP1"
    },
    "3445": {
      "op": "REVERT"
    },
    "3446": {
      "op": "JUMPDEST"
    },
    "3447": {
      "op": "DUP2"
    },
    "3448": {
      "op": "CALLDATALOAD"
    },
    "3449": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "3452": {
      "op": "DUP2"
    },
    "3453": {
      "op": "PUSH2",
      "value": "0xD4B"
    },
    "3456": {
      "jump": "i",
      "op": "JUMP"
    },
    "3457": {
      "op": "JUMPDEST"
    },
    "3458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3460": {
      "op": "JUMPDEST"
    },
    "3461": {
      "op": "DUP4"
    },
    "3462": {
      "op": "DUP2"
    },
    "3463": {
      "op": "LT"
    },
    "3464": {
      "op": "ISZERO"
    },
    "3465": {
      "op": "PUSH2",
      "value": "0xD9C"
    },
    "3468": {
      "op": "JUMPI"
    },
    "3469": {
      "op": "DUP2"
    },
    "3470": {
      "op": "DUP2"
    },
    "3471": {
      "op": "ADD"
    },
    "3472": {
      "op": "MLOAD"
    },
    "3473": {
      "op": "DUP4"
    },
    "3474": {
      "op": "DUP3"
    },
    "3475": {
      "op": "ADD"
    },
    "3476": {
      "op": "MSTORE"
    },
    "3477": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3479": {
      "op": "ADD"
    },
    "3480": {
      "op": "PUSH2",
      "value": "0xD84"
    },
    "3483": {
      "op": "JUMP"
    },
    "3484": {
      "op": "JUMPDEST"
    },
    "3485": {
      "op": "DUP4"
    },
    "3486": {
      "op": "DUP2"
    },
    "3487": {
      "op": "GT"
    },
    "3488": {
      "op": "ISZERO"
    },
    "3489": {
      "op": "PUSH2",
      "value": "0x655"
    },
    "3492": {
      "op": "JUMPI"
    },
    "3493": {
      "op": "POP"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3497": {
      "op": "SWAP2"
    },
    "3498": {
      "op": "ADD"
    },
    "3499": {
      "op": "MSTORE"
    },
    "3500": {
      "jump": "o",
      "op": "JUMP"
    },
    "3501": {
      "op": "JUMPDEST"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3504": {
      "op": "DUP2"
    },
    "3505": {
      "op": "MLOAD"
    },
    "3506": {
      "op": "DUP1"
    },
    "3507": {
      "op": "DUP5"
    },
    "3508": {
      "op": "MSTORE"
    },
    "3509": {
      "op": "PUSH2",
      "value": "0xDC5"
    },
    "3512": {
      "op": "DUP2"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3515": {
      "op": "DUP7"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3519": {
      "op": "DUP7"
    },
    "3520": {
      "op": "ADD"
    },
    "3521": {
      "op": "PUSH2",
      "value": "0xD81"
    },
    "3524": {
      "jump": "i",
      "op": "JUMP"
    },
    "3525": {
      "op": "JUMPDEST"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3531": {
      "op": "NOT"
    },
    "3532": {
      "op": "AND"
    },
    "3533": {
      "op": "SWAP3"
    },
    "3534": {
      "op": "SWAP1"
    },
    "3535": {
      "op": "SWAP3"
    },
    "3536": {
      "op": "ADD"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3539": {
      "op": "ADD"
    },
    "3540": {
      "op": "SWAP3"
    },
    "3541": {
      "op": "SWAP2"
    },
    "3542": {
      "op": "POP"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "jump": "o",
      "op": "JUMP"
    },
    "3545": {
      "op": "JUMPDEST"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3548": {
      "op": "DUP2"
    },
    "3549": {
      "op": "MSTORE"
    },
    "3550": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3552": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3557": {
      "op": "DUP4"
    },
    "3558": {
      "op": "ADD"
    },
    "3559": {
      "op": "DUP5"
    },
    "3560": {
      "op": "PUSH2",
      "value": "0xDAD"
    },
    "3563": {
      "jump": "i",
      "op": "JUMP"
    },
    "3564": {
      "op": "JUMPDEST"
    },
    "3565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3569": {
      "op": "DUP3"
    },
    "3570": {
      "op": "DUP5"
    },
    "3571": {
      "op": "SUB"
    },
    "3572": {
      "op": "SLT"
    },
    "3573": {
      "op": "ISZERO"
    },
    "3574": {
      "op": "PUSH2",
      "value": "0xDFE"
    },
    "3577": {
      "op": "JUMPI"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3580": {
      "op": "DUP1"
    },
    "3581": {
      "op": "REVERT"
    },
    "3582": {
      "op": "JUMPDEST"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "op": "CALLDATALOAD"
    },
    "3585": {
      "op": "SWAP2"
    },
    "3586": {
      "op": "SWAP1"
    },
    "3587": {
      "op": "POP"
    },
    "3588": {
      "jump": "o",
      "op": "JUMP"
    },
    "3589": {
      "op": "JUMPDEST"
    },
    "3590": {
      "op": "DUP1"
    },
    "3591": {
      "op": "CALLDATALOAD"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3598": {
      "op": "SHL"
    },
    "3599": {
      "op": "SUB"
    },
    "3600": {
      "op": "DUP2"
    },
    "3601": {
      "op": "AND"
    },
    "3602": {
      "op": "DUP2"
    },
    "3603": {
      "op": "EQ"
    },
    "3604": {
      "op": "PUSH2",
      "value": "0xE1C"
    },
    "3607": {
      "op": "JUMPI"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3610": {
      "op": "DUP1"
    },
    "3611": {
      "op": "REVERT"
    },
    "3612": {
      "op": "JUMPDEST"
    },
    "3613": {
      "op": "SWAP2"
    },
    "3614": {
      "op": "SWAP1"
    },
    "3615": {
      "op": "POP"
    },
    "3616": {
      "jump": "o",
      "op": "JUMP"
    },
    "3617": {
      "op": "JUMPDEST"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3620": {
      "op": "DUP1"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3623": {
      "op": "DUP4"
    },
    "3624": {
      "op": "DUP6"
    },
    "3625": {
      "op": "SUB"
    },
    "3626": {
      "op": "SLT"
    },
    "3627": {
      "op": "ISZERO"
    },
    "3628": {
      "op": "PUSH2",
      "value": "0xE34"
    },
    "3631": {
      "op": "JUMPI"
    },
    "3632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3634": {
      "op": "DUP1"
    },
    "3635": {
      "op": "REVERT"
    },
    "3636": {
      "op": "JUMPDEST"
    },
    "3637": {
      "op": "PUSH2",
      "value": "0xE3D"
    },
    "3640": {
      "op": "DUP4"
    },
    "3641": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3644": {
      "jump": "i",
      "op": "JUMP"
    },
    "3645": {
      "op": "JUMPDEST"
    },
    "3646": {
      "op": "SWAP5"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3649": {
      "op": "SWAP4"
    },
    "3650": {
      "op": "SWAP1"
    },
    "3651": {
      "op": "SWAP4"
    },
    "3652": {
      "op": "ADD"
    },
    "3653": {
      "op": "CALLDATALOAD"
    },
    "3654": {
      "op": "SWAP4"
    },
    "3655": {
      "op": "POP"
    },
    "3656": {
      "op": "POP"
    },
    "3657": {
      "op": "POP"
    },
    "3658": {
      "jump": "o",
      "op": "JUMP"
    },
    "3659": {
      "op": "JUMPDEST"
    },
    "3660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3662": {
      "op": "DUP1"
    },
    "3663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3665": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3667": {
      "op": "DUP5"
    },
    "3668": {
      "op": "DUP7"
    },
    "3669": {
      "op": "SUB"
    },
    "3670": {
      "op": "SLT"
    },
    "3671": {
      "op": "ISZERO"
    },
    "3672": {
      "op": "PUSH2",
      "value": "0xE60"
    },
    "3675": {
      "op": "JUMPI"
    },
    "3676": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3678": {
      "op": "DUP1"
    },
    "3679": {
      "op": "REVERT"
    },
    "3680": {
      "op": "JUMPDEST"
    },
    "3681": {
      "op": "PUSH2",
      "value": "0xE69"
    },
    "3684": {
      "op": "DUP5"
    },
    "3685": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3688": {
      "jump": "i",
      "op": "JUMP"
    },
    "3689": {
      "op": "JUMPDEST"
    },
    "3690": {
      "op": "SWAP3"
    },
    "3691": {
      "op": "POP"
    },
    "3692": {
      "op": "PUSH2",
      "value": "0xE77"
    },
    "3695": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3697": {
      "op": "DUP6"
    },
    "3698": {
      "op": "ADD"
    },
    "3699": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3702": {
      "jump": "i",
      "op": "JUMP"
    },
    "3703": {
      "op": "JUMPDEST"
    },
    "3704": {
      "op": "SWAP2"
    },
    "3705": {
      "op": "POP"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3708": {
      "op": "DUP5"
    },
    "3709": {
      "op": "ADD"
    },
    "3710": {
      "op": "CALLDATALOAD"
    },
    "3711": {
      "op": "SWAP1"
    },
    "3712": {
      "op": "POP"
    },
    "3713": {
      "op": "SWAP3"
    },
    "3714": {
      "op": "POP"
    },
    "3715": {
      "op": "SWAP3"
    },
    "3716": {
      "op": "POP"
    },
    "3717": {
      "op": "SWAP3"
    },
    "3718": {
      "jump": "o",
      "op": "JUMP"
    },
    "3719": {
      "op": "JUMPDEST"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3722": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3724": {
      "op": "DUP3"
    },
    "3725": {
      "op": "DUP5"
    },
    "3726": {
      "op": "SUB"
    },
    "3727": {
      "op": "SLT"
    },
    "3728": {
      "op": "ISZERO"
    },
    "3729": {
      "op": "PUSH2",
      "value": "0xE99"
    },
    "3732": {
      "op": "JUMPI"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3735": {
      "op": "DUP1"
    },
    "3736": {
      "op": "REVERT"
    },
    "3737": {
      "op": "JUMPDEST"
    },
    "3738": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "3741": {
      "op": "DUP3"
    },
    "3742": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3745": {
      "jump": "i",
      "op": "JUMP"
    },
    "3746": {
      "op": "JUMPDEST"
    },
    "3747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3749": {
      "op": "DUP1"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3752": {
      "op": "DUP4"
    },
    "3753": {
      "op": "DUP6"
    },
    "3754": {
      "op": "SUB"
    },
    "3755": {
      "op": "SLT"
    },
    "3756": {
      "op": "ISZERO"
    },
    "3757": {
      "op": "PUSH2",
      "value": "0xEB5"
    },
    "3760": {
      "op": "JUMPI"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3763": {
      "op": "DUP1"
    },
    "3764": {
      "op": "REVERT"
    },
    "3765": {
      "op": "JUMPDEST"
    },
    "3766": {
      "op": "PUSH2",
      "value": "0xEBE"
    },
    "3769": {
      "op": "DUP4"
    },
    "3770": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3773": {
      "jump": "i",
      "op": "JUMP"
    },
    "3774": {
      "op": "JUMPDEST"
    },
    "3775": {
      "op": "SWAP2"
    },
    "3776": {
      "op": "POP"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3779": {
      "op": "DUP4"
    },
    "3780": {
      "op": "ADD"
    },
    "3781": {
      "op": "CALLDATALOAD"
    },
    "3782": {
      "op": "DUP1"
    },
    "3783": {
      "op": "ISZERO"
    },
    "3784": {
      "op": "ISZERO"
    },
    "3785": {
      "op": "DUP2"
    },
    "3786": {
      "op": "EQ"
    },
    "3787": {
      "op": "PUSH2",
      "value": "0xED3"
    },
    "3790": {
      "op": "JUMPI"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3793": {
      "op": "DUP1"
    },
    "3794": {
      "op": "REVERT"
    },
    "3795": {
      "op": "JUMPDEST"
    },
    "3796": {
      "op": "DUP1"
    },
    "3797": {
      "op": "SWAP2"
    },
    "3798": {
      "op": "POP"
    },
    "3799": {
      "op": "POP"
    },
    "3800": {
      "op": "SWAP3"
    },
    "3801": {
      "op": "POP"
    },
    "3802": {
      "op": "SWAP3"
    },
    "3803": {
      "op": "SWAP1"
    },
    "3804": {
      "op": "POP"
    },
    "3805": {
      "jump": "o",
      "op": "JUMP"
    },
    "3806": {
      "op": "JUMPDEST"
    },
    "3807": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3814": {
      "op": "SHL"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3817": {
      "op": "MSTORE"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3822": {
      "op": "MSTORE"
    },
    "3823": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3827": {
      "op": "REVERT"
    },
    "3828": {
      "op": "JUMPDEST"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3831": {
      "op": "DUP1"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3834": {
      "op": "DUP1"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3837": {
      "op": "DUP6"
    },
    "3838": {
      "op": "DUP8"
    },
    "3839": {
      "op": "SUB"
    },
    "3840": {
      "op": "SLT"
    },
    "3841": {
      "op": "ISZERO"
    },
    "3842": {
      "op": "PUSH2",
      "value": "0xF0A"
    },
    "3845": {
      "op": "JUMPI"
    },
    "3846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3848": {
      "op": "DUP1"
    },
    "3849": {
      "op": "REVERT"
    },
    "3850": {
      "op": "JUMPDEST"
    },
    "3851": {
      "op": "PUSH2",
      "value": "0xF13"
    },
    "3854": {
      "op": "DUP6"
    },
    "3855": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3858": {
      "jump": "i",
      "op": "JUMP"
    },
    "3859": {
      "op": "JUMPDEST"
    },
    "3860": {
      "op": "SWAP4"
    },
    "3861": {
      "op": "POP"
    },
    "3862": {
      "op": "PUSH2",
      "value": "0xF21"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3867": {
      "op": "DUP7"
    },
    "3868": {
      "op": "ADD"
    },
    "3869": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3872": {
      "jump": "i",
      "op": "JUMP"
    },
    "3873": {
      "op": "JUMPDEST"
    },
    "3874": {
      "op": "SWAP3"
    },
    "3875": {
      "op": "POP"
    },
    "3876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3878": {
      "op": "DUP6"
    },
    "3879": {
      "op": "ADD"
    },
    "3880": {
      "op": "CALLDATALOAD"
    },
    "3881": {
      "op": "SWAP2"
    },
    "3882": {
      "op": "POP"
    },
    "3883": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3885": {
      "op": "DUP6"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "CALLDATALOAD"
    },
    "3888": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3897": {
      "op": "DUP1"
    },
    "3898": {
      "op": "DUP3"
    },
    "3899": {
      "op": "GT"
    },
    "3900": {
      "op": "ISZERO"
    },
    "3901": {
      "op": "PUSH2",
      "value": "0xF45"
    },
    "3904": {
      "op": "JUMPI"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3907": {
      "op": "DUP1"
    },
    "3908": {
      "op": "REVERT"
    },
    "3909": {
      "op": "JUMPDEST"
    },
    "3910": {
      "op": "DUP2"
    },
    "3911": {
      "op": "DUP8"
    },
    "3912": {
      "op": "ADD"
    },
    "3913": {
      "op": "SWAP2"
    },
    "3914": {
      "op": "POP"
    },
    "3915": {
      "op": "DUP8"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3918": {
      "op": "DUP4"
    },
    "3919": {
      "op": "ADD"
    },
    "3920": {
      "op": "SLT"
    },
    "3921": {
      "op": "PUSH2",
      "value": "0xF59"
    },
    "3924": {
      "op": "JUMPI"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3927": {
      "op": "DUP1"
    },
    "3928": {
      "op": "REVERT"
    },
    "3929": {
      "op": "JUMPDEST"
    },
    "3930": {
      "op": "DUP2"
    },
    "3931": {
      "op": "CALLDATALOAD"
    },
    "3932": {
      "op": "DUP2"
    },
    "3933": {
      "op": "DUP2"
    },
    "3934": {
      "op": "GT"
    },
    "3935": {
      "op": "ISZERO"
    },
    "3936": {
      "op": "PUSH2",
      "value": "0xF6B"
    },
    "3939": {
      "op": "JUMPI"
    },
    "3940": {
      "op": "PUSH2",
      "value": "0xF6B"
    },
    "3943": {
      "op": "PUSH2",
      "value": "0xEDE"
    },
    "3946": {
      "jump": "i",
      "op": "JUMP"
    },
    "3947": {
      "op": "JUMPDEST"
    },
    "3948": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3950": {
      "op": "MLOAD"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3953": {
      "op": "DUP3"
    },
    "3954": {
      "op": "ADD"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3957": {
      "op": "NOT"
    },
    "3958": {
      "op": "SWAP1"
    },
    "3959": {
      "op": "DUP2"
    },
    "3960": {
      "op": "AND"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3963": {
      "op": "ADD"
    },
    "3964": {
      "op": "AND"
    },
    "3965": {
      "op": "DUP2"
    },
    "3966": {
      "op": "ADD"
    },
    "3967": {
      "op": "SWAP1"
    },
    "3968": {
      "op": "DUP4"
    },
    "3969": {
      "op": "DUP3"
    },
    "3970": {
      "op": "GT"
    },
    "3971": {
      "op": "DUP2"
    },
    "3972": {
      "op": "DUP4"
    },
    "3973": {
      "op": "LT"
    },
    "3974": {
      "op": "OR"
    },
    "3975": {
      "op": "ISZERO"
    },
    "3976": {
      "op": "PUSH2",
      "value": "0xF93"
    },
    "3979": {
      "op": "JUMPI"
    },
    "3980": {
      "op": "PUSH2",
      "value": "0xF93"
    },
    "3983": {
      "op": "PUSH2",
      "value": "0xEDE"
    },
    "3986": {
      "jump": "i",
      "op": "JUMP"
    },
    "3987": {
      "op": "JUMPDEST"
    },
    "3988": {
      "op": "DUP2"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3991": {
      "op": "MSTORE"
    },
    "3992": {
      "op": "DUP3"
    },
    "3993": {
      "op": "DUP2"
    },
    "3994": {
      "op": "MSTORE"
    },
    "3995": {
      "op": "DUP11"
    },
    "3996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3998": {
      "op": "DUP5"
    },
    "3999": {
      "op": "DUP8"
    },
    "4000": {
      "op": "ADD"
    },
    "4001": {
      "op": "ADD"
    },
    "4002": {
      "op": "GT"
    },
    "4003": {
      "op": "ISZERO"
    },
    "4004": {
      "op": "PUSH2",
      "value": "0xFAC"
    },
    "4007": {
      "op": "JUMPI"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4010": {
      "op": "DUP1"
    },
    "4011": {
      "op": "REVERT"
    },
    "4012": {
      "op": "JUMPDEST"
    },
    "4013": {
      "op": "DUP3"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4016": {
      "op": "DUP7"
    },
    "4017": {
      "op": "ADD"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4020": {
      "op": "DUP4"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "CALLDATACOPY"
    },
    "4023": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4027": {
      "op": "DUP5"
    },
    "4028": {
      "op": "DUP4"
    },
    "4029": {
      "op": "ADD"
    },
    "4030": {
      "op": "ADD"
    },
    "4031": {
      "op": "MSTORE"
    },
    "4032": {
      "op": "DUP1"
    },
    "4033": {
      "op": "SWAP6"
    },
    "4034": {
      "op": "POP"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "op": "POP"
    },
    "4037": {
      "op": "POP"
    },
    "4038": {
      "op": "POP"
    },
    "4039": {
      "op": "POP"
    },
    "4040": {
      "op": "SWAP3"
    },
    "4041": {
      "op": "SWAP6"
    },
    "4042": {
      "op": "SWAP2"
    },
    "4043": {
      "op": "SWAP5"
    },
    "4044": {
      "op": "POP"
    },
    "4045": {
      "op": "SWAP3"
    },
    "4046": {
      "op": "POP"
    },
    "4047": {
      "jump": "o",
      "op": "JUMP"
    },
    "4048": {
      "op": "JUMPDEST"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4051": {
      "op": "DUP1"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4054": {
      "op": "DUP4"
    },
    "4055": {
      "op": "DUP6"
    },
    "4056": {
      "op": "SUB"
    },
    "4057": {
      "op": "SLT"
    },
    "4058": {
      "op": "ISZERO"
    },
    "4059": {
      "op": "PUSH2",
      "value": "0xFE3"
    },
    "4062": {
      "op": "JUMPI"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4065": {
      "op": "DUP1"
    },
    "4066": {
      "op": "REVERT"
    },
    "4067": {
      "op": "JUMPDEST"
    },
    "4068": {
      "op": "PUSH2",
      "value": "0xFEC"
    },
    "4071": {
      "op": "DUP4"
    },
    "4072": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "4075": {
      "jump": "i",
      "op": "JUMP"
    },
    "4076": {
      "op": "JUMPDEST"
    },
    "4077": {
      "op": "SWAP2"
    },
    "4078": {
      "op": "POP"
    },
    "4079": {
      "op": "PUSH2",
      "value": "0xFFA"
    },
    "4082": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4084": {
      "op": "DUP5"
    },
    "4085": {
      "op": "ADD"
    },
    "4086": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "4089": {
      "jump": "i",
      "op": "JUMP"
    },
    "4090": {
      "op": "JUMPDEST"
    },
    "4091": {
      "op": "SWAP1"
    },
    "4092": {
      "op": "POP"
    },
    "4093": {
      "op": "SWAP3"
    },
    "4094": {
      "op": "POP"
    },
    "4095": {
      "op": "SWAP3"
    },
    "4096": {
      "op": "SWAP1"
    },
    "4097": {
      "op": "POP"
    },
    "4098": {
      "jump": "o",
      "op": "JUMP"
    },
    "4099": {
      "op": "JUMPDEST"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4102": {
      "op": "DUP2"
    },
    "4103": {
      "op": "DUP2"
    },
    "4104": {
      "op": "SHR"
    },
    "4105": {
      "op": "SWAP1"
    },
    "4106": {
      "op": "DUP3"
    },
    "4107": {
      "op": "AND"
    },
    "4108": {
      "op": "DUP1"
    },
    "4109": {
      "op": "PUSH2",
      "value": "0x1017"
    },
    "4112": {
      "op": "JUMPI"
    },
    "4113": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4115": {
      "op": "DUP3"
    },
    "4116": {
      "op": "AND"
    },
    "4117": {
      "op": "SWAP2"
    },
    "4118": {
      "op": "POP"
    },
    "4119": {
      "op": "JUMPDEST"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4122": {
      "op": "DUP3"
    },
    "4123": {
      "op": "LT"
    },
    "4124": {
      "op": "DUP2"
    },
    "4125": {
      "op": "SUB"
    },
    "4126": {
      "op": "PUSH2",
      "value": "0x1037"
    },
    "4129": {
      "op": "JUMPI"
    },
    "4130": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4137": {
      "op": "SHL"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4140": {
      "op": "MSTORE"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4145": {
      "op": "MSTORE"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4150": {
      "op": "REVERT"
    },
    "4151": {
      "op": "JUMPDEST"
    },
    "4152": {
      "op": "POP"
    },
    "4153": {
      "op": "SWAP2"
    },
    "4154": {
      "op": "SWAP1"
    },
    "4155": {
      "op": "POP"
    },
    "4156": {
      "jump": "o",
      "op": "JUMP"
    },
    "4157": {
      "op": "JUMPDEST"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4160": {
      "op": "DUP1"
    },
    "4161": {
      "op": "DUP3"
    },
    "4162": {
      "op": "MSTORE"
    },
    "4163": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4165": {
      "op": "SWAP1"
    },
    "4166": {
      "op": "DUP3"
    },
    "4167": {
      "op": "ADD"
    },
    "4168": {
      "op": "MSTORE"
    },
    "4169": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4204": {
      "op": "DUP3"
    },
    "4205": {
      "op": "ADD"
    },
    "4206": {
      "op": "MSTORE"
    },
    "4207": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4227": {
      "op": "SHL"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "ADD"
    },
    "4232": {
      "op": "MSTORE"
    },
    "4233": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4235": {
      "op": "ADD"
    },
    "4236": {
      "op": "SWAP1"
    },
    "4237": {
      "jump": "o",
      "op": "JUMP"
    },
    "4238": {
      "op": "JUMPDEST"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4241": {
      "op": "DUP4"
    },
    "4242": {
      "op": "MLOAD"
    },
    "4243": {
      "op": "PUSH2",
      "value": "0x10A0"
    },
    "4246": {
      "op": "DUP2"
    },
    "4247": {
      "op": "DUP5"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4250": {
      "op": "DUP9"
    },
    "4251": {
      "op": "ADD"
    },
    "4252": {
      "op": "PUSH2",
      "value": "0xD81"
    },
    "4255": {
      "jump": "i",
      "op": "JUMP"
    },
    "4256": {
      "op": "JUMPDEST"
    },
    "4257": {
      "op": "DUP4"
    },
    "4258": {
      "op": "MLOAD"
    },
    "4259": {
      "op": "SWAP1"
    },
    "4260": {
      "op": "DUP4"
    },
    "4261": {
      "op": "ADD"
    },
    "4262": {
      "op": "SWAP1"
    },
    "4263": {
      "op": "PUSH2",
      "value": "0x10B4"
    },
    "4266": {
      "op": "DUP2"
    },
    "4267": {
      "op": "DUP4"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4270": {
      "op": "DUP9"
    },
    "4271": {
      "op": "ADD"
    },
    "4272": {
      "op": "PUSH2",
      "value": "0xD81"
    },
    "4275": {
      "jump": "i",
      "op": "JUMP"
    },
    "4276": {
      "op": "JUMPDEST"
    },
    "4277": {
      "op": "ADD"
    },
    "4278": {
      "op": "SWAP5"
    },
    "4279": {
      "op": "SWAP4"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "op": "POP"
    },
    "4282": {
      "op": "POP"
    },
    "4283": {
      "op": "POP"
    },
    "4284": {
      "jump": "o",
      "op": "JUMP"
    },
    "4285": {
      "op": "JUMPDEST"
    },
    "4286": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4293": {
      "op": "SHL"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4296": {
      "op": "MSTORE"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4301": {
      "op": "MSTORE"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4306": {
      "op": "REVERT"
    },
    "4307": {
      "op": "JUMPDEST"
    },
    "4308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4310": {
      "op": "DUP3"
    },
    "4311": {
      "op": "DUP3"
    },
    "4312": {
      "op": "LT"
    },
    "4313": {
      "op": "ISZERO"
    },
    "4314": {
      "op": "PUSH2",
      "value": "0x10E5"
    },
    "4317": {
      "op": "JUMPI"
    },
    "4318": {
      "op": "PUSH2",
      "value": "0x10E5"
    },
    "4321": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4324": {
      "jump": "i",
      "op": "JUMP"
    },
    "4325": {
      "op": "JUMPDEST"
    },
    "4326": {
      "op": "POP"
    },
    "4327": {
      "op": "SUB"
    },
    "4328": {
      "op": "SWAP1"
    },
    "4329": {
      "jump": "o",
      "op": "JUMP"
    },
    "4330": {
      "op": "JUMPDEST"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4333": {
      "op": "DUP3"
    },
    "4334": {
      "op": "NOT"
    },
    "4335": {
      "op": "DUP3"
    },
    "4336": {
      "op": "GT"
    },
    "4337": {
      "op": "ISZERO"
    },
    "4338": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "4341": {
      "op": "JUMPI"
    },
    "4342": {
      "op": "PUSH2",
      "value": "0x10FD"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4348": {
      "jump": "i",
      "op": "JUMP"
    },
    "4349": {
      "op": "JUMPDEST"
    },
    "4350": {
      "op": "POP"
    },
    "4351": {
      "op": "ADD"
    },
    "4352": {
      "op": "SWAP1"
    },
    "4353": {
      "jump": "o",
      "op": "JUMP"
    },
    "4354": {
      "op": "JUMPDEST"
    },
    "4355": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4357": {
      "op": "DUP1"
    },
    "4358": {
      "op": "DUP3"
    },
    "4359": {
      "op": "MSTORE"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4362": {
      "op": "SWAP1"
    },
    "4363": {
      "op": "DUP3"
    },
    "4364": {
      "op": "ADD"
    },
    "4365": {
      "op": "MSTORE"
    },
    "4366": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4401": {
      "op": "DUP3"
    },
    "4402": {
      "op": "ADD"
    },
    "4403": {
      "op": "MSTORE"
    },
    "4404": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4425": {
      "op": "SHL"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4428": {
      "op": "DUP3"
    },
    "4429": {
      "op": "ADD"
    },
    "4430": {
      "op": "MSTORE"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4433": {
      "op": "ADD"
    },
    "4434": {
      "op": "SWAP1"
    },
    "4435": {
      "jump": "o",
      "op": "JUMP"
    },
    "4436": {
      "op": "JUMPDEST"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4441": {
      "op": "DUP3"
    },
    "4442": {
      "op": "ADD"
    },
    "4443": {
      "op": "PUSH2",
      "value": "0x1166"
    },
    "4446": {
      "op": "JUMPI"
    },
    "4447": {
      "op": "PUSH2",
      "value": "0x1166"
    },
    "4450": {
      "op": "PUSH2",
      "value": "0x10BD"
    },
    "4453": {
      "jump": "i",
      "op": "JUMP"
    },
    "4454": {
      "op": "JUMPDEST"
    },
    "4455": {
      "op": "POP"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4458": {
      "op": "ADD"
    },
    "4459": {
      "op": "SWAP1"
    },
    "4460": {
      "jump": "o",
      "op": "JUMP"
    },
    "4461": {
      "op": "JUMPDEST"
    },
    "4462": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4467": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4469": {
      "op": "SHL"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4472": {
      "op": "MSTORE"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4477": {
      "op": "MSTORE"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4482": {
      "op": "REVERT"
    },
    "4483": {
      "op": "JUMPDEST"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4486": {
      "op": "DUP3"
    },
    "4487": {
      "op": "PUSH2",
      "value": "0x1192"
    },
    "4490": {
      "op": "JUMPI"
    },
    "4491": {
      "op": "PUSH2",
      "value": "0x1192"
    },
    "4494": {
      "op": "PUSH2",
      "value": "0x116D"
    },
    "4497": {
      "jump": "i",
      "op": "JUMP"
    },
    "4498": {
      "op": "JUMPDEST"
    },
    "4499": {
      "op": "POP"
    },
    "4500": {
      "op": "DIV"
    },
    "4501": {
      "op": "SWAP1"
    },
    "4502": {
      "jump": "o",
      "op": "JUMP"
    },
    "4503": {
      "op": "JUMPDEST"
    },
    "4504": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4506": {
      "op": "DUP3"
    },
    "4507": {
      "op": "PUSH2",
      "value": "0x11A6"
    },
    "4510": {
      "op": "JUMPI"
    },
    "4511": {
      "op": "PUSH2",
      "value": "0x11A6"
    },
    "4514": {
      "op": "PUSH2",
      "value": "0x116D"
    },
    "4517": {
      "jump": "i",
      "op": "JUMP"
    },
    "4518": {
      "op": "JUMPDEST"
    },
    "4519": {
      "op": "POP"
    },
    "4520": {
      "op": "MOD"
    },
    "4521": {
      "op": "SWAP1"
    },
    "4522": {
      "jump": "o",
      "op": "JUMP"
    },
    "4523": {
      "op": "JUMPDEST"
    },
    "4524": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4531": {
      "op": "SHL"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4534": {
      "op": "MSTORE"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4539": {
      "op": "MSTORE"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4544": {
      "op": "REVERT"
    },
    "4545": {
      "op": "JUMPDEST"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4550": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4552": {
      "op": "SHL"
    },
    "4553": {
      "op": "SUB"
    },
    "4554": {
      "op": "DUP6"
    },
    "4555": {
      "op": "DUP2"
    },
    "4556": {
      "op": "AND"
    },
    "4557": {
      "op": "DUP3"
    },
    "4558": {
      "op": "MSTORE"
    },
    "4559": {
      "op": "DUP5"
    },
    "4560": {
      "op": "AND"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4563": {
      "op": "DUP3"
    },
    "4564": {
      "op": "ADD"
    },
    "4565": {
      "op": "MSTORE"
    },
    "4566": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4568": {
      "op": "DUP2"
    },
    "4569": {
      "op": "ADD"
    },
    "4570": {
      "op": "DUP4"
    },
    "4571": {
      "op": "SWAP1"
    },
    "4572": {
      "op": "MSTORE"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4577": {
      "op": "DUP3"
    },
    "4578": {
      "op": "ADD"
    },
    "4579": {
      "op": "DUP2"
    },
    "4580": {
      "op": "SWAP1"
    },
    "4581": {
      "op": "MSTORE"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4584": {
      "op": "SWAP1"
    },
    "4585": {
      "op": "PUSH2",
      "value": "0x11F4"
    },
    "4588": {
      "op": "SWAP1"
    },
    "4589": {
      "op": "DUP4"
    },
    "4590": {
      "op": "ADD"
    },
    "4591": {
      "op": "DUP5"
    },
    "4592": {
      "op": "PUSH2",
      "value": "0xDAD"
    },
    "4595": {
      "jump": "i",
      "op": "JUMP"
    },
    "4596": {
      "op": "JUMPDEST"
    },
    "4597": {
      "op": "SWAP7"
    },
    "4598": {
      "op": "SWAP6"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "POP"
    },
    "4601": {
      "op": "POP"
    },
    "4602": {
      "op": "POP"
    },
    "4603": {
      "op": "POP"
    },
    "4604": {
      "op": "POP"
    },
    "4605": {
      "jump": "o",
      "op": "JUMP"
    },
    "4606": {
      "op": "JUMPDEST"
    },
    "4607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4609": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4611": {
      "op": "DUP3"
    },
    "4612": {
      "op": "DUP5"
    },
    "4613": {
      "op": "SUB"
    },
    "4614": {
      "op": "SLT"
    },
    "4615": {
      "op": "ISZERO"
    },
    "4616": {
      "op": "PUSH2",
      "value": "0x1210"
    },
    "4619": {
      "op": "JUMPI"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4622": {
      "op": "DUP1"
    },
    "4623": {
      "op": "REVERT"
    },
    "4624": {
      "op": "JUMPDEST"
    },
    "4625": {
      "op": "DUP2"
    },
    "4626": {
      "op": "MLOAD"
    },
    "4627": {
      "op": "PUSH2",
      "value": "0x73C"
    },
    "4630": {
      "op": "DUP2"
    },
    "4631": {
      "op": "PUSH2",
      "value": "0xD4B"
    },
    "4634": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "ba7a8c5e970e35039834d52545eeac711d7bf49f",
  "source": "/**\n *Submitted for verification at Etherscan.io on 2022-01-07\n*/\n\n// SPDX-License-Identifier: MIT\n\n// File: @openzeppelin/contracts/utils/Counters.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}",
  "sourceMap": "24338:13411:1:-:0;;;25125:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25192:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;25216:17:1;;;;:7;;:17;;;;;:::i;:::-;;25125:116;;24338:13411;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;24338:13411:1;;;-1:-1:-1;24338:13411:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:2;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:2;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:2;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:2:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:2;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;24338:13411:1;;;;;;",
  "sourcePath": "contracts/libraries.sol",
  "type": "contract"
}